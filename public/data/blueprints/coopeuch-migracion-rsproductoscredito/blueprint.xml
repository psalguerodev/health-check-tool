<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wsproductoscredito" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.creditos]]"/>
        <property name="password" value="[[jdbc.db2.password.creditos]]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{jdbc.db2.timeBetweenEvictionRunsMillis.productoscredito}]"/>
        <property name="numTestsPerEvictionRun" value="[{jdbc.db2.numTestsPerEvictionRun.productoscredito}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{jdbc.db2.minEvictableIdleTimeMillis.productoscredito}]"/>
        <property name="maxActive" value="[{jdbc.db2.maxActive.productoscredito}]"/>
    </bean>
    <bean
        class="cl.coopeuch.integracion.productoscredito.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSProductosCredito"
        id="endpointWSProductosCredito"
        serviceClass="cl.coopeuch.integracion.productoscredito.wsdl.WSProductosCreditoSOAPPortType" wsdlURL="etc/wsdl/WSProductosCredito.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSProductosCredito"
        id="endpointRSProductosCredito" serviceClass="cl.coopeuch.integracion.productoscredito.wsdl.WSProductosCreditoSOAPPortType"/>
    <camelContext id="servicio-productoscredito" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSProductosCredito"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSProductosCredito"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionValidarProductoDiario">
                        <simple>${header.operationName} == 'validarProductoDiario'</simple>
                        <to id="toValidarProductoDiario" uri="direct:validarProductoDiario"/>
                    </when>
                    <when id="inicioWhenOperacionconsultarCreditoConsumoCerrados">
                        <simple>${header.operationName} == 'consultarCreditoConsumoCerrados'</simple>
                        <to id="toConsultarCreditoConsumoCerradosr" uri="direct:consultarCreditoConsumoCerrados"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="validarProductoDiario">
            <from id="validarProductoDiarioFrom" uri="direct:validarProductoDiario"/>
            <doTry id="validarProductoDiarioTry">
            <setBody id="validarProductoDiarioBody">
                    <simple>$simple{body}</simple>
                </setBody>
                <setProperty id="propRut" propertyName="rut">
                    <simple>${body.rut}</simple>
                </setProperty>
                <bean id="formatoRequestBean"
                    method="formatoRequest" ref="beanRouteFacade"/>
                <to id="PA_SEL_CONSULTASOLICITUDES_WS_to" uri="sql-stored:classpath:etc/sql/PA_SEL_CONSULTASOLICITUDES_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=responseCONSULTASOLICITUDES"/>
                <bean id="generarResponseValidarProductoBean"
                    method="generarResponseValidarProducto" ref="beanRouteFacade"/>
                <doCatch id="ValidarRutDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="validarRutCodigoError" propertyName="codigoError">
                        <constant>409</constant>
                    </setProperty>
                    <to id="validarRutToExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="validarProductoDiarioDBDoCatch">
                    <exception>java.sql.SQLException</exception>
                    <setProperty id="validarProductoDiarioDBCodigoError" propertyName="codigoError">
                        <constant>491</constant>
                    </setProperty>
                    <to id="validarProductoDiarioDBToExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="validarProductoDiarioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="validarProductoDiarioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="validarProductoDiarioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultarCreditoConsumoCerrados">
            <from id="consultarCreditoConsumoCerradosFrom" uri="direct:consultarCreditoConsumoCerrados"/>
            <doTry id="consultarCreditoConsumoCerradosTry">
               <setProperty  propertyName="userId">
				<xpath resultType="String">substring(//userId, 0, 11)</xpath>
			</setProperty>
			  <setProperty id="_setProperty2" propertyName="canal">
                    <xpath resultType="String">substring(//canalLlamada, 0, 5)</xpath>
                </setProperty>
			<setProperty propertyName="rut">
				<xpath resultType="String">//substring(//rut, 0, 11)</xpath>
			</setProperty>		
			<setProperty propertyName="estado">
				<xpath resultType="String">substring(//estado, 0, 2)</xpath>
			</setProperty>	
              <to id="PA_SEL_PRODUCTOSCREDITOS_CONSULTARCREDITOSCONSUMOCERRADOS_to" uri="sql-stored:classpath:etc/sql/PA_SEL_PRODUCTOSCREDITOS_CONSULTARCREDITOSCONSUMOCERRADOS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=dataResponse" />
                <bean id="consultarCreditoConsumoCerradosrBean" method="procesarConsultarCreditoConsumoCerrados" ref="beanRouteFacade"/>
                <unmarshal id="Unmarshal">
                <jaxb contextPath="cl.coopeuch.integracion.productoscredito.wsdl"/>
            </unmarshal>
            <stop/>	
               <doCatch id="consultarCreditoConsumoCerradosCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarCreditoConsumoCerradosCodigoError" propertyName="codigoError">
                        <constant>409</constant>
                    </setProperty>
                    <to id="consultarCreditoConsumoCerradosToExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarCreditoConsumoCerradosDBDoCatch">
                    <exception>java.sql.SQLException</exception>
                    <setProperty id="consultarCreditoConsumoCerradosDBCodigoError" propertyName="codigoError">
                        <constant>491</constant>
                    </setProperty>
                    <to id="consultarCreditoConsumoCerradosToExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarCreditoConsumoCerradosDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarCreditoConsumoCerradosCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="consultarCreditoConsumoCerradosToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
