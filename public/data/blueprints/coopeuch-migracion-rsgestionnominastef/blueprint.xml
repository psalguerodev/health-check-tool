<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal" persistent-id="wsgestionnominastef"
        placeholder-prefix="[{" placeholder-suffix="}]" update-strategy="reload"/>
        
    <bean id="noErrorHandler" class="org.apache.camel.builder.NoErrorHandlerBuilder"/>    
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>

    
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlServer">
        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
        <property name="url" value="[{coopeuch.sqlserver.url}]"/>
        <property name="username" value="[{coopeuch.sqlserver.username}]"/>
        <property name="password" value="[{coopeuch.sqlserver.password}]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{coopeuch.sqlserver.timeBetweenEvictionRunsMillis}]"/>
        <property name="numTestsPerEvictionRun" value="[{coopeuch.sqlserver.numTestsPerEvictionRun}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{coopeuch.sqlserver.minEvictableIdleTimeMillis}]"/>
        <property name="maxActive" value="[{coopeuch.sqlserver.maxActive}]"/>
    </bean>
	
    
    
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
        <argument index="0" value="rh1"/>
    </bean>
     <bean class="cl.coopeuch.integracion.gestionnominastef.util.RouteExcepcion" id="respuestaErrorProcessor"/>
     <bean class="cl.coopeuch.integracion.gestionnominastef.util.RouteFacade" id="beanRouteFacade"/>
     <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProvider"/>
    <bean
        class="cl.coopeuch.integracion.gestionnominastef.exceptions.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    <camelcxf:rsServer address="/WSGestionNominasTEF" id="restApiEnpointGestionNominasTEF" serviceClass="cl.coopeuch.integracion.gestionnominastef.service.OperacionesService">
        <camelcxf:extensionMappings>
            <entry key="json" value="application/json"/>
        </camelcxf:extensionMappings>
        <camelcxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="cl.coopeuch.integracion.gestionnominastef.util.Filter"/>
        </camelcxf:providers>
        <camelcxf:outInterceptors>
            <ref component-id="ErrorExcepcionInterceptor"/>
        </camelcxf:outInterceptors>
    </camelcxf:rsServer>

   
    <camelContext id="SERVICIO-WSGESTIONNOMINASTEF" streamCache="false"
        xmlns="http://camel.apache.org/schema/blueprint">
        <threadPoolProfile defaultProfile="true" id="changedProfile"
            maxQueueSize="100" poolSize="1"/>
        <dataFormats>
            <json id="serializer" library="Jackson" prettyPrint="true"/>
        </dataFormats>
        <redeliveryPolicyProfile id="redeliveryPolicy"
        maximumRedeliveries="2"
        redeliveryDelay="1000" allowRedeliveryWhileStopping="false"
        retryAttemptedLogLevel="INFO" />   
        <onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>cl.coopeuch.integracion.gestionnominastef.exceptions.ProcedureExcepcion</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>            
            <setProperty propertyName="codigohttp">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>Error en el PA: ${exception.message}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>Error en el PA: ${exception.message}</simple>
            </setProperty>
             <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException> 
        <onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.sql.SQLException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>            
            <setProperty propertyName="codigohttp">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>${exception.message}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>${exception.message}</simple>
            </setProperty>
             <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException> 
        <onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>            
            <setProperty propertyName="codigohttp">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple> ${exception.message}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                 <simple>500</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>${exception.message}</simple>
            </setProperty>
             <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>   
        
        <route id="ROUTE-PRINCIPAL-WSNOMINASTEF">
            <from id="restInicioo" uri="cxfrs:bean:restApiEnpointGestionNominasTEF?bindingStyle=SimpleConsumer"/>
            <setProperty propertyName="operacion">
                <simple resultType="String">${header.operationName}</simple>
            </setProperty>
            <toD uri="direct:${header.operationName}"/>
        </route>
        
        <route id="WsGestionNominaConsultarLista" streamCache="true" errorHandlerRef="noErrorHandler">
            <from  uri="direct:consultarLista"/>  
           		<marshal>
            		<json library="Jackson"/>
            	</marshal> 
            	<setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
	             <setProperty propertyName="estado"><jsonpath resultType="String">$.consultarListaRequest.estado</jsonpath></setProperty>
	             <setProperty propertyName="area"><jsonpath resultType="String">$.consultarListaRequest.area</jsonpath></setProperty>
	             <setProperty propertyName="idNomina"><jsonpath resultType="String">$.consultarListaRequest.idNomina</jsonpath></setProperty>
	              <choice>
	             	<when>
	             		<simple>${property.idNomina} == null</simple>
	             		<setProperty propertyName="idNomina"><simple></simple></setProperty>
	             	</when>
	             </choice>
	             <choice>
	             	<when>
	             		<simple>${property.estado} == null and ${property.area} == null</simple>
	             		<setProperty propertyName="estado"><simple></simple></setProperty>
	            		<setProperty propertyName="area"><simple></simple></setProperty>
	             	</when>
	             	<when>
	             		<simple>${property.estado} == null and ${property.area} != null</simple>
	             		<setProperty propertyName="estado"><simple></simple></setProperty>
	             	</when>
	             	<when>
	             		<simple>${property.estado} != null and ${property.area} == null</simple>
	            		<setProperty propertyName="area"><simple></simple></setProperty>
	             	</when>
	             </choice>
	             
	             <log message="((((${property.estado} || ${property.area} || ${property.idNomina}))))"/>
	             <to uri="sql-stored:classpath:sql/pa_consultaListadoNomina.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responseListadoNomina" />
	             <bean id="procesarListadoNomina" ref="beanRouteFacade" method="procesarListadoNomina"/>
				<removeHeaders pattern="responseListadoNomina"/>
			<stop/>
        </route>
        
        <route id="WsGestionNominaConsultarDetalle" streamCache="true" errorHandlerRef="noErrorHandler">
            <from  uri="direct:consultarDetalle"/>  
           		<marshal>
            		<json library="Jackson"/>
            	</marshal> 
            	<setProperty id="SetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
	             <setProperty propertyName="idNomina"><jsonpath resultType="String">$.consultarDetalleRequest.idNomina</jsonpath></setProperty>
	             
	             <to uri="sql-stored:classpath:sql/pa_consultaDetalleNomina.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responseDetalleNomina" />
	             <bean id="procesarDetalleNomina" ref="beanRouteFacade" method="procesarDetalleNomina"/>
	             <removeHeaders pattern="responseDetalleNomina"/>
			<stop/>
        </route>
        

		<route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>            
             <bean id="beanRouteFacade" method="excepcionAmq" ref="beanRouteFacade"/>
             <setProperty propertyName="Connection">
            	<constant>0</constant>
             </setProperty>
             <marshal id="excepcionMarshalJson">
                 <json library="Jackson"/>
             </marshal>
             <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>             
             <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>  
        </route>
        
    </camelContext>
</blueprint>
