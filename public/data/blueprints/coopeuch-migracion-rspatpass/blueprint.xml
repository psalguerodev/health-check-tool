<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyWsPatPass"
        persistent-id="wspatpass" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.patpass.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSPatPass" id="endpointWSPatPass"
        serviceClass="cl.coopeuch.integracion.patpass.wsdl.ServicioObtenerToken" wsdlURL="etc/wsdl/ServicioObtenerToken.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSPatPass" id="endpointRSPatPass" serviceClass="cl.coopeuch.integracion.patpass.wsdl.ServicioObtenerToken"/>
    <camelcxf:cxfEndpoint address="[{servicioobtenertoken.endpoint}]"
        id="endpointServicioObtenerToken" loggingFeatureEnabled="false"
        serviceClass="cl.coopeuch.integracion.patpass.wsdl.ServicioObtenerToken" wsdlURL="etc/wsdl/ServicioObtenerToken.wsdl"/>
    <camelContext id="servicio-patpass" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSPatPass"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSPatPass"/>
            <doTry id="restTry">
                <setProperty id="restSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <unmarshal id="restInicio_unmarshal">
                    <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.patpass.wsdl.ObtenerToken"/>
                </unmarshal>
                <bean id="preparaRequestRest"
                    method="preparaRequestRest" ref="beanRouteFacade"/>
                <to id="restToInicioWs" uri="direct:cxf-inicio"/>
                <doCatch id="restDoIOCatch">
                    <exception>java.io.IOException</exception>
                    <setProperty id="restSetCodigoErrorIOCatch" propertyName="codigoError">
                        <constant>417</constant>
                    </setProperty>
                    <to id="restToIOExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="restDoCatch">
                    <exception>java.lang.Exception</exception>
                    <to id="restToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
            <marshal id="restInicio_marshal">
                <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.patpass.wsdl.ObtenerTokenResponse"/>
            </marshal>
        </route>
        <route id="cxf-inicio">
            <from id="patPassFrom" uri="direct:cxf-inicio"/>
            <doTry id="patPassTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <removeHeaders id="removeHeadersPatPass" pattern="CamelHttp*"/>
                <to id="patPassTo" uri="cxf:bean:endpointServicioObtenerToken"/>
                <doCatch id="patPassDoIOCatch">
                    <exception>java.io.IOException</exception>
                    <setProperty id="setCodigoErrorIOCatch" propertyName="codigoError">
                        <constant>419</constant>
                    </setProperty>
                    <to id="patPassToIOExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="patPassDoCatch">
                    <exception>java.lang.Exception</exception>
                    <to id="patPassToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
