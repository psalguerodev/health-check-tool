<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyWsSegurosGenerales" persistent-id="wssegurosgenerales"
        placeholder-prefix="{{" placeholder-suffix="}}" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.wssegurosgenerales.util.RouteFacade" id="beanRouteFacade"/>
    <bean class="cl.coopeuch.integracion.wssegurosgenerales.exception.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    <bean class="cl.coopeuch.integracion.wssegurosgenerales.util.RouteExcepcion" id="routeExcepcion"/>
    
    <camelcxf:cxfEndpoint address="/CorredoraSeguro/WSSegurosGenerales"
        id="endpointCorredoraSeguroWSSegurosGenerales"
        serviceClass="cl.coopeuch.integracion.wssegurosgenerales.wsdl.CorredoraSeguro_002fWSSegurosGeneralesSOAPPortType" wsdlURL="etc/wsdl/CorredoraSeguro/WSSegurosGenerales.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
<!--             <entry key="dataFormat" value="MESSAGE"/> -->
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    
    <camelcxf:rsClient id="endpointTokenAut" address="{{autenticacion.oauth2.token.url}}" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient id="endpointgetPolicyListByRut" address="{{endpoint.seguros.listar.url}}" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient id="endpointgetPolicyNumber" address="{{endpoint.seguros.obtenerPoliza.url}}" loggingFeatureEnabled="true"/>
    
    
	<camelcxf:rsServer address="/CorredoraSeguro/RSSegurosGenerales"
        id="endpointCorredoraSeguroRSSegurosGenerales" serviceClass="cl.coopeuch.integracion.wssegurosgenerales.wsdl.CorredoraSeguro_002fWSSegurosGeneralesSOAPPortType">
       <camelcxf:inInterceptors>
        	<ref component-id="ErrorExcepcionInterceptor"/>
    	</camelcxf:inInterceptors>
    </camelcxf:rsServer>
    
    
    <camelContext id="servicio-wssegurosgenerales" xmlns="http://camel.apache.org/schema/blueprint">
		<route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointCorredoraSeguroWSSegurosGenerales"/>
            <setProperty propertyName="tipoConsumo">
                    <constant>xml</constant>
                </setProperty>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointCorredoraSeguroRSSegurosGenerales?dataFormat=MESSAGE"/>
            <setProperty propertyName="tipoConsumo">
                    <constant>json</constant>
                </setProperty>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
			<from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <to uri="bean-validator://x"/>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionObtenerDetalle">
                        <simple>${header.operationName} == 'obtenerDetalle'</simple>
                        <to id="toCrear" uri="direct:obtenerDetalle"/>
                    </when>
                    <when id="inicioWhenOperacionListarSeguros">
                        <simple>${header.operationName} == 'listarSeguros'</simple>
                        <to id="toActualizar" uri="direct:listarSeguros"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatchValidacion">
                	<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
				        <handled>
				            <constant>true</constant>
				        </handled>
				        <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
				        <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
				        <removeHeaders pattern="CamelHttp*"/>
				        <setProperty propertyName="codigoError">
				            <simple>{{wssegurosgenerales.errorestructuraE01}}</simple>
				        </setProperty>
				        <setProperty propertyName="descripcionError">
				            <simple>{{wssegurosgenerales.errorestructura}}</simple>
				        </setProperty>
				        <bean method="erroresValidator" ref="routeExcepcion"/>
				        <to uri="direct:excepcion"/>
				        <stop/>
                </doCatch>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="obtenerDetalle" streamCache="true">
            <from id="obtenerDetalleFrom" uri="direct:obtenerDetalle"/>
            <doTry id="obtenerDetalleTry">
                
                <to uri="direct:tokenAutenticacion"/>
            	<setBody>
            		<simple>${property.requestEntrada.get(0)}</simple>
            	</setBody>
                <bean method="requestObtenerPoliza" ref="cl.coopeuch.integracion.wssegurosgenerales.util.RouteFacade"/>
            	<marshal>
            		<json library="Jackson"/>
            	</marshal>
            	<setHeader headerName="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
            	<setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>POST</constant>
                </setHeader>
                <convertBodyTo type="String"/>
                <to uri="cxfrs:bean:endpointgetPolicyNumber?throwExceptionOnFailure=false"/>
                <log message="(((${body}))${header.CamelHttpResponseCode} ${header.CamelHttpResponseCode} ${header.CamelHttpResponseCode})"/>
                <convertBodyTo type="String"/>
                <log loggingLevel="ERROR" message="(((${body}))${header.CamelHttpResponseCode} ${header.CamelHttpResponseCode} ${header.CamelHttpResponseCode})"/>
                <choice>
                	<when>
                		<simple>${header.CamelHttpResponseCode} == '201' || ${header.CamelHttpResponseCode} == '200'</simple>
							<unmarshal>
			            		<json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.wssegurosgenerales.model.ResponseObtenerDetalleExt"/>
			            	</unmarshal>
			            	<bean method="responseObtenerDetalle" ref="cl.coopeuch.integracion.wssegurosgenerales.util.RouteFacade"/>                	
							<unmarshal id="obtenerDetalleUnmarshal">
			                    <jaxb contextPath="cl.coopeuch.integracion.wssegurosgenerales.wsdl"/>
			                </unmarshal>
                	</when>
                	<otherwise>
                		<unmarshal>
		                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.wssegurosgenerales.model.ResponseErrorCRM"/>
		                </unmarshal>
                		<throwException exceptionType="cl.coopeuch.integracion.wssegurosgenerales.exception.ErrorSegurosGeneralesException" message="${body.getMensaje()}"/>
                	</otherwise>
                </choice>
                <doCatch id="errorSegurosGeneralesException">
                    <exception>cl.coopeuch.integracion.wssegurosgenerales.exception.ErrorSegurosGeneralesException</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty propertyName="codigoError">
                        <constant>400</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
				<doCatch id="obtenerDetalleDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty id="obtenerDetalleCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="toobtenerDetalleExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="obtenerDetalleDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
					<setProperty id="crearCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="obtenerDetalleToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="listarSeguros">
            <from id="listarSegurosFrom" uri="direct:listarSeguros"/>
            <doTry id="listarSegurosTry">
            	
            	<to uri="direct:tokenAutenticacion"/>
            	<setBody>
            		<simple>${property.requestEntrada.get(0)}</simple>
            	</setBody>  
            	<bean method="requestListarXRut" ref="cl.coopeuch.integracion.wssegurosgenerales.util.RouteFacade"/>
            	<marshal>
            		<json library="Jackson"/>
            	</marshal>
            	<setHeader headerName="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
            	<setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>POST</constant>
                </setHeader>
                <convertBodyTo type="String"/>
            	<to uri="cxfrs:bean:endpointgetPolicyListByRut?throwExceptionOnFailure=false"/>
            	<convertBodyTo type="String"/> 
            	
            	<choice>
                	<when>
                		<simple>${header.CamelHttpResponseCode} == '201' || ${header.CamelHttpResponseCode} == '200'</simple>
							<unmarshal>
							    <json library="Jackson" enableFeatures="ACCEPT_SINGLE_VALUE_AS_ARRAY" 
							          unmarshalTypeName="cl.coopeuch.integracion.wssegurosgenerales.model.ResponseListarSegurosExt"/>
							</unmarshal>
			            	<bean method="responseListarXRut" ref="cl.coopeuch.integracion.wssegurosgenerales.util.RouteFacade"/>
			            	<choice>
			            		<when>
			            			<simple>${property.tipoConsumo} contains 'xml'</simple>
			            			<unmarshal id="listarSegurosUnmarshal">
					                    <jaxb contextPath="cl.coopeuch.integracion.wssegurosgenerales.wsdl" />
					                </unmarshal>
			            		</when>
			            		<otherwise>
			            			<marshal>
									    <json library="Jackson" enableFeatures="WRAP_ROOT_VALUE,ACCEPT_SINGLE_VALUE_AS_ARRAY" include="NON_NULL" useList="true"
									          unmarshalTypeName="cl.coopeuch.integracion.wssegurosgenerales.wsdl.ListarSegurosResponse"/>
									</marshal>
									<convertBodyTo type="String"/>
			            		</otherwise>
			            	</choice> 
                	</when>
                	<otherwise>
                		<unmarshal>
		                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.wssegurosgenerales.model.ResponseErrorCRM"/>
		                </unmarshal>
                		<throwException exceptionType="cl.coopeuch.integracion.wssegurosgenerales.exception.ErrorSegurosGeneralesException" message="${body.getMensaje()}"/>
                	</otherwise>
                </choice>           	            	
            	
                <doCatch id="errorSegurosGeneralesExceptionList">
                    <exception>cl.coopeuch.integracion.wssegurosgenerales.exception.ErrorSegurosGeneralesException</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty propertyName="codigoError">
                        <constant>400</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="listarSegurosDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty id="actualizarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="listarSegurosToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        
        <route id="tokenProveedor">
            <from uri="direct:tokenAutenticacion"/>
            <doTry id="tokenTry">
            	<log message="Entro a llamar TOKEN"/>
                <removeHeaders pattern="*"/>
                <setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="Content-Type">
			        <constant>application/x-www-form-urlencoded</constant>
			    </setHeader>
			    
			    <setBody>
			        <simple>grant_type={{autenticacion.oauth2.token.grantType}}&amp;scope={{autenticacion.oauth2.token.scope}}&amp;client_id={{autenticacion.oauth2.token.clientId}}&amp;client_secret={{autenticacion.oauth2.token.clientSecret}}</simple>
			    </setBody>
                <to uri="cxfrs:bean:endpointTokenAut?throwExceptionOnFailure=false"/>
                <convertBodyTo type="String"/>
                <setHeader headerName="Authorization">
                	<jsonpath resultType="String">$.access_token</jsonpath>
                </setHeader>
                
                <doCatch id="tokenDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
		                <constant>true</constant>
		            </handled>
		            <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setProperty propertyName="codigoError">
				           <simple>{{wssegurosgenerales.errorautenticacionE02}}</simple>
			        </setProperty>
			        <setProperty propertyName="descripcionError">
			            <simple>{{wssegurosgenerales.errorautenticacion}}</simple>
			        </setProperty>
                    <to uri="direct:excepcion"/>
                    <stop/>
                </doCatch>
            </doTry>
        </route>
        
        
        
        
        
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <log loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
