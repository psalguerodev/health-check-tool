<?xml version="1.0" encoding="UTF-8"?>
 <blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd 
                                    http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">                               
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyMqLogNotificacion"
        persistent-id="wscifrado" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="AMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.util.RouteFacade" id="beanRouteFacade"/>
    <camelContext id="servicio-cifrado" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="cifrado">
            <from id="encriptarFrom" uri="AMQ:{{amq.queue.cifrado}}"/>
            <doTry id="cifradoDoTry">
	            <bean id="encriptar-Bean" method="validoMetodo" ref="beanRouteFacade"/>
	            <choice>   
	            	<when>
	            		<simple>${property.metodoCifrar} == 'encriptar' or ${property.metodoCifrar} == 'desEncriptar'</simple>
			            <setProperty propertyName="cifradoVi">
			            	<simple>{{cifrado.vi}}</simple>
			            </setProperty> 
			            <setProperty propertyName="cifradoKey">
			            	<simple>{{cifrado.key}}</simple>
			            </setProperty>
			            <when>
			            	<simple>${property.metodoCifrar} == 'encriptar'</simple>
			            	<setBody>
								<xpath>//encriptarRequest</xpath>
							</setBody>   
			            </when> 		                  
			            <when>
			            	<simple>${property.metodoCifrar} == 'desEncriptar'</simple>
			            	<setBody>
								<xpath>//desencriptarRequest</xpath>
							</setBody>   
			            </when>         
			            <bean id="encriptar-Bean" method="cifrar" ref="beanRouteFacade"/>
			            <log message="responseCifrado: ${body}"></log>
		            </when>
		            <otherwise>
		            	<setProperty propertyName="exMensaje">
		            		<simple>Operacion no existe</simple>
		            	</setProperty>
		            	<setProperty propertyName="origenError">
		            		<simple>otherWise</simple>
		            	</setProperty>
		            	<setProperty propertyName="origenError">
		            		<simple>otherWise</simple>
		            	</setProperty>
	                    <setProperty propertyName="metodoCifrar">
	                		<simple>error</simple>
	                	</setProperty>
	                	<setProperty propertyName="codigoError">
	                		<simple>101</simple>
	                	</setProperty>
						<bean id="encriptar-Bean-OtherWise" method="excepcionOtherWise" ref="beanRouteFacade"/>	                	
						<to id="excepcionTo" uri="direct:excepcion"/>						
		            </otherwise>
	            </choice>
	            <doCatch>
	            	<exception>java.lang.Exception</exception>
                    <setProperty propertyName="metodoCifrar">
                		<simple>error</simple>
                	</setProperty>
                	<setProperty propertyName="origenError">
		            		<simple>doCath</simple>
		            </setProperty>
                	<setProperty propertyName="codigoError">
                		<simple>999</simple>
                	</setProperty>
                	<to id="excepcionTo" uri="direct:excepcion"/>  
	            </doCatch>
            </doTry>
        </route>
		<route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>           
            <doTry id="excepcionTry">            	
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                    <bean id="encriptar-Bean-OtherWise2" method="excepcionOtherWise" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty propertyName="metodoCifrar">
                		<simple>error</simple>
                	</setProperty>
                	<setProperty propertyName="origenError">
		            		<simple>doCathExcepcion</simple>
		            </setProperty>                	
                	<setProperty propertyName="codigoError">
                		<simple>999</simple>
                	</setProperty>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                   <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>                
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
