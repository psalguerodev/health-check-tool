<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wsmovimientostransferencia"
        placeholder-prefix="[{" placeholder-suffix="}]" update-strategy="reload"/>
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.transferencias]]"/>
        <property name="password" value="[[jdbc.db2.password.transferencias]]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{jdbc.db2.timeBetweenEvictionRunsMillis.movimientostransferencia}]"/>
        <property name="numTestsPerEvictionRun" value="[{jdbc.db2.numTestsPerEvictionRun.movimientostransferencia}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{jdbc.db2.minEvictableIdleTimeMillis.movimientostransferencia}]"/>
        <property name="maxActive" value="[{jdbc.db2.maxActive.movimientostransferencia}]"/>
    </bean>
    <bean class="cl.coopeuch.integracion.movimientostransferencia.util.RouteFacade" id="beanRouteFacade"/>
    <bean class="cl.coopeuch.integracion.movimientostransferencia.util.LogIncidencias" id="beanLogIncidencias"/>

    <camelcxf:cxfEndpoint address="/WSMovimientosTransferencia"
        id="endpointWSMovimientosTransferencia"
        serviceClass="cl.coopeuch.integracion.wsdl.WSMovimientosTransferenciaSOAPPortType" wsdlURL="etc/wsdl/WSMovimientosTransferencia.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="false"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSMovimientosTransferencia" loggingFeatureEnabled="true"
        id="endpointRSMovimientosTransferencia" serviceClass="cl.coopeuch.integracion.wsdl.WSMovimientosTransferenciaSOAPPortType"/>

	<bean id="logTraceIncidencias" class="org.slf4j.LoggerFactory" factory-method="getLogger">
		<argument index="0" value="logMovimientosTransferencia" />
	</bean>

    <camelContext id="servicio-movimientos-transferencia" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSMovimientosTransferencia"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSMovimientosTransferencia"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>

            <onCompletion>
                <log id="logBodyFinal" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: MovimientosTransferencia(mismo) || Type: Outbound || Body: ${body}" />
            </onCompletion>

            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <bean id="generarIdflujoLog" method="generarIdFlujoLog" ref="beanLogIncidencias"/>
                <log id="logBodyInicio" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: MovimientosTransferencia(mismo)|| Type: Inbound || Body: ${body}" />
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionConsultar">
                        <simple>${header.operationName} == 'consultarCuentaOrigen'</simple>
                        <to id="toConsultar" uri="direct:consultarCuentaOrigen"/>
                    </when>
                    <when id="inicioWhenOperacionConsultarDetalle">
                        <simple>${header.operationName} == 'consultarDetalle'</simple>
                        <to id="toConsultarDetalle" uri="direct:consultarDetalle"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultarCuentaOrigen">
            <from id="consultarCuentaOrigenFrom" uri="direct:consultarCuentaOrigen"/>
            <doTry id="consultarCuentaOrigenTry">
                <setProperty id="_setPropertyUserId1" propertyName="userId">
                    <xpath resultType="String">//userId</xpath>
                </setProperty>
                <setProperty id="_setPropertyCanal1" propertyName="canal">
                    <xpath resultType="String">//canalLlamada</xpath>
                </setProperty>
                <setProperty id="_setPropertyRutOrigen" propertyName="rutOrigen">
                    <xpath resultType="String">//rutOrigen</xpath>
                </setProperty>
                <setProperty id="_setPropertyCuentaOrigen" propertyName="cuentaOrigen">
                    <xpath resultType="String">//cuentaOrigen</xpath>
                </setProperty>
                <setProperty id="_setPropertyRutDestino" propertyName="rutDestino">
                    <xpath resultType="String">//rutDestinatario</xpath>
                </setProperty>
                <setProperty id="_setPropertyCuentaDestino" propertyName="cuentaDestino">
                    <xpath resultType="String">//cuentaDestinatario</xpath>
                </setProperty>
                <setProperty id="_setPropertyResgistros" propertyName="cantidadRegistros">
                    <xpath resultType="String">//cantidadRegistros</xpath>
                </setProperty>
                <setProperty id="_setPropertyOrden" propertyName="orden">
                    <xpath resultType="String">//ordenamiento</xpath>
                </setProperty>
                <setProperty id="setPropertyOrigenConsultarCuentaOrigen" propertyName="origen">
                    <constant>consultarCuentaOrigen</constant>
                </setProperty>
                <choice id="rutOrigen_choice">
                    <when id="rutOrigen_when">
                        <simple>${property.rutOrigen.trim()} == ''</simple>
                        <setProperty id="rutOrigenError" propertyName="codigoError">
                            <constant>424</constant>
                        </setProperty>
                        <setProperty id="rutOrigenParam" propertyName="parametro">
                            <constant>rutOrigen</constant>
                        </setProperty>
                        <bean id="rutOrigenBean_Err"
                            method="excepcionCrear" ref="beanRouteFacade"/>
                    </when>
                    <when id="cuentaOrigen_when">
                        <simple>${property.cuentaOrigen.trim()} == ''</simple>
                        <setProperty id="cuentaOrigenError" propertyName="codigoError">
                            <constant>424</constant>
                        </setProperty>
                        <setProperty id="cuentaOrigenParam" propertyName="parametro">
                            <constant>cuentaOrigen</constant>
                        </setProperty>
                        <bean id="cuentaOrigenBean_Err"
                            method="excepcionCrear" ref="beanRouteFacade"/>
                    </when>
                    <when id="rutDestino_when">
                        <simple>${property.rutDestino.trim()} == ''</simple>
                        <setProperty id="rutDestinoError" propertyName="codigoError">
                            <constant>424</constant>
                        </setProperty>
                        <setProperty id="rutDestinoParam" propertyName="parametro">
                            <constant>rutDestino</constant>
                        </setProperty>
                        <bean id="rutDestinoBean_Err"
                            method="excepcionCrear" ref="beanRouteFacade"/>
                    </when>
                    <when id="cuentaDestino_when">
                        <simple>${property.cuentaDestino.trim()} == ''</simple>
                        <setProperty id="cuentaDestinoError" propertyName="codigoError">
                            <constant>424</constant>
                        </setProperty>
                        <setProperty id="cuentaDestinoParam" propertyName="parametro">
                            <constant>cuentaDestino</constant>
                        </setProperty>
                        <bean id="cuentaDestinoBean_Err"
                            method="excepcionCrear" ref="beanRouteFacade"/>
                    </when>
                    <when id="orden_when">
                        <simple>${property.orden.trim()} != '' and ${property.orden.toUpperCase()} != 'ASC' and ${property.orden.toUpperCase()} != 'DESC'</simple>
                        <setProperty id="ordenError" propertyName="codigoError">
                            <constant>424</constant>
                        </setProperty>
                        <setProperty id="ordenParam" propertyName="parametro">
                            <constant>ordenamiento</constant>
                        </setProperty>
                        <bean id="ordenamientoBean_Err"
                            method="excepcionCrear" ref="beanRouteFacade"/>
                    </when>
                    <otherwise id="_otherwise1">
                        <bean id="validarCuentaBean"
                            method="validarCuentaBean" ref="beanRouteFacade"/>
                        <choice id="_choice1">
                            <when id="_when1">
                                <simple>${property.parametro.trim()} != null</simple>
                                <bean id="validaCuenta_Err"
                                    method="excepcionCrear" ref="beanRouteFacade"/>
                            </when>
                            <otherwise id="_otherwise2">
                                <bean id="generarBodyRequestPAConsultaCuentaOrigenLog" 
                                    method="generarBodyRequestPAConsultaCuentaOrigenLog" ref="beanLogIncidencias"/>
                                <log id="logConsultaCuentaOrigenPARequest" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: DB2_PA || Type: Request || Body: ${exchangeProperty.bodyLogIncidencia}" />
                                <to id="consultarCuentaOrigen-To" uri="sql-stored:classpath:etc/sql/PA_SEL_CONSULTARCUENTAORIGEN_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=responseConsultarCuentaOrigen"/>
                                <log id="logConsultaCuentaOrigenPAResponse" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: DB2_PA || Type: Response || Body: ${header.responseConsultarCuentaOrigen}" />
                                <bean id="consultarCuentaOrigenBean"
                                    method="procesarConsultarCuentaOrigen" ref="beanRouteFacade"/>
                                <removeHeaders id="removeHeaders_01" pattern="*"/>
                            </otherwise>
                        </choice>
                    </otherwise>
                </choice>
                <doCatch id="consultarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty id="mensajeError" propertyName="mensajeError">
                        <simple>Error interno del servidor.</simple>
                    </setProperty>
                    <to id="toConsultarExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultarDetalle">
            <from id="consultarDetalleFrom" uri="direct:consultarDetalle"/>
            <doTry id="consultarDetalleTry">
                <bean id="consultarDetalleEntrada"
                    method="consultarDetalleEntrada" ref="beanRouteFacade"/>
                <bean id="generarBodyRequestPAConsultarDetalleLog" 
                    method="generarBodyRequestPAConsultarDetalleLog" ref="beanLogIncidencias"/>
                <log id="logConsultarDetallePARequest" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: DB2_PA || Type: Request || Body: ${exchangeProperty.bodyLogIncidencia}" />
                <to id="consultarDetalleToPa" uri="sql-stored:classpath:etc/sql/PA_SEL_MOVIMIENTOTRANSFERENCIA_CONSULTARDETALLE_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=responseConsultarDetalle"/>
                <log id="logConsultarDetallePAResponse" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: DB2_PA || Type: Response || Body: ${header.responseConsultarDetalle}" />
                <bean id="respuestaPaConsultarDetalle"
                    method="respuestaPaConsultarDetalle" ref="beanRouteFacade"/>
                <doCatch id="consultarDetalleErrorDoCatch">
                    <exception>java.lang.RuntimeException</exception>
                    <log id="consultarDetalleErrorPa"
                        loggingLevel="ERROR" message="${exception}"/>
                    <setProperty id="consultarDetalleErrorCodigoError" propertyName="codigoError">
                        <constant>509</constant>
                    </setProperty>
                    <setProperty id="consultarDetalleErrorMensajeError" propertyName="descripcionError">
                        <simple>Error al ejecutar procedimiento almacenado.</simple>
                    </setProperty>
                    <to id="toConsultarDetalleExcepcion1" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarDetalleDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarDetalleCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty id="consultarDetalleMensajeError" propertyName="mensajeError">
                        <simple>Error interno del servidor.</simple>
                    </setProperty>
                    <to id="toConsultarDetalleExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <log id="logExcepcionInfo" loggerRef="logTraceIncidencias" message="ID: ${exchangeProperty.idFlujoLog} || Componente: Excepcion || Type: Info || Body: ${exception.message}" />
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <toD id="excepcionToAmqFault" uri="beanAMQ:${property.colaError}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
