<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="rstransacciontarjetacredito"
        placeholder-prefix="[{" placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.transacciontc.util.RouteFacade" id="beanRouteFacade"/>
    <bean class="cl.coopeuch.integracion.transacciontc.interceptor.InInterceptor" id="inInterceptor"/>
    <camelcxf:rsServer address="/RSTransaccionTarjetaCredito"
        id="endpointRSTransaccionTarjetaCredito"
        loggingFeatureEnabled="true" serviceClass="cl.coopeuch.integracion.transacciontc.rest.TransaccionTarjetaCreditoRest">
        <camelcxf:inInterceptors>
	       <ref component-id="inInterceptor"/>
	   	</camelcxf:inInterceptors>
    </camelcxf:rsServer>   
    <camelcxf:rsClient
        address="[{aws.agtw.replica.tarjetacredito.endpoint}]"
        id="awsApigwTarjetaCreditoEndpoint" loggingFeatureEnabled="true">
        <camelcxf:providers>
            <ref component-id="jsonProviderIn"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProviderIn"/>
    <camelContext id="servicio-transaccion-tarjeta-credito" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSTransaccionTarjetaCredito?bindingStyle=SimpleConsumer"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <convertBodyTo id="inicioTransaccionTCToString" type="java.lang.String"/>
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <choice id="inicioChoiceOperacion">                	
                    <when id="inicioWhenOperacionNotificar">
                        <simple>${header.operationName} == 'notificar'</simple>
                        <to id="toNotificar" uri="direct:notificar"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioDescripcionError" propertyName="descripcionError">
                        <constant>Operacion no encontrada</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="notificar">
            <from id="notificarFrom" uri="direct:notificar"/>
            <doTry id="notificarTry">
                <setProperty id="notificarApiKey" propertyName="api-key">
                    <simple>{{aws.agtw.replica.tarjetacredito.apikey}}</simple>
                </setProperty>
                <bean id="notificarPreparaRequest"
                    method="notificarPreparaRequest" ref="beanRouteFacade"/>
                <to id="emailAwsToPinPoint" uri="cxfrs://bean://awsApigwTarjetaCreditoEndpoint?throwExceptionOnFailure=false"/>
                <bean id="notificarPreparaResponse"
                    method="notificarPreparaResponse" ref="beanRouteFacade"/>				
                <doCatch id="notificarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="notificarDescripcionError" propertyName="descripcionError">
                        <constant>Error al invocar el API de replica en AWS.</constant>
                    </setProperty>
                    <to id="toNotificarExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson2">
                    <json include="NON_NULL" library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo2" type="java.lang.String"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
