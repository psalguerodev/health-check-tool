<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal" persistent-id="ws3ds"
        placeholder-prefix="[{" placeholder-suffix="}]" update-strategy="reload"/>
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    <bean class="org.apache.camel.builder.NoErrorHandlerBuilder" id="noErrorHandler"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlServer">
        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
        <property name="url" value="[{coopeuch.sqlserver.url}]"/>
        <property name="username" value="[{coopeuch.sqlserver.username}]"/>
        <property name="password" value="[{coopeuch.sqlserver.password}]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{coopeuch.sqlserver.timeBetweenEvictionRunsMillis}]"/>
        <property name="numTestsPerEvictionRun" value="[{coopeuch.sqlserver.numTestsPerEvictionRun}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{coopeuch.sqlserver.minEvictableIdleTimeMillis}]"/>
        <property name="maxActive" value="[{coopeuch.sqlserver.maxActive}]"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.cuentas]]"/>
        <property name="password" value="[[jdbc.db2.password.cuentas]]"/>
    </bean>
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
        <argument index="0" value="rh1"/>
    </bean>
    <bean class="cl.coopeuch.integracion.tresds.util.RouteExcepcion" id="respuestaErrorProcessor"/>
    <bean class="cl.coopeuch.integracion.tresds.util.RouteFacade" id="beanRouteFacade"/>
    <bean
        class="cl.coopeuch.integracion.tresds.util.RouteFacadeIsEnrrolled" id="beanRouteFacadeIsEnrrolled"/>
    <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProvider">
        <property name="ignoreNamespaces" value="true"/>
    </bean>
    <bean
        class="cl.coopeuch.integracion.tresds.exceptions.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    <camelcxf:rsServer address="/RS3DS" id="restApiEnpoint"
                       serviceClass="cl.coopeuch.integracion.tresds.service.Operaciones"
                       loggingFeatureEnabled="true">
        <camelcxf:extensionMappings>
            <entry key="json" value="application/json"/>
        </camelcxf:extensionMappings>
        <camelcxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="cl.coopeuch.integracion.tresds.util.Filter"/>
        </camelcxf:providers>
        <camelcxf:outInterceptors>
            <ref component-id="ErrorExcepcionInterceptor"/>
        </camelcxf:outInterceptors>
    </camelcxf:rsServer>
    <camelcxf:rsClient address="[{wsLogPlataformas.endpoint}]"
        id="endpointLogPlataformas" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient address="[{coopeuch.ws3ds.SoftToken.consultar}]"
        id="endpointSoftTokenConsultar" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient address="[{coopeuch.ws3ds.SoftToken.generar}]"
        id="endpointSoftTokenGenerar" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient address="[{coopeuch.ws3ds.SoftToken.validar}]"
        id="endpointSoftTokenValidar" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.RsAdministradorIDG.obtenerTarjeta}]"
        id="endpointAdministradorIDGObtenerTarjeta" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.wsDesafio.solicitarDesafio}]"
        id="endpointDesafioSolicitarDesafio" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.wsDesafio.validarDesafio}]"
        id="endpointDesafioValidarDesafio" loggingFeatureEnabled="true"/>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.RSTercerFactor.validar}]"
        id="endpointTercerFactorValidar" loggingFeatureEnabled="true">
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.RSTercerFactor.solicitar}]"
        id="endpointServicioTercerFactorSolicitar" loggingFeatureEnabled="true"/>
    <!-- API DALE -->
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.segundoFactorHabilitado.url}]"
        id="restMsSegundoFactorHabilitado" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="true"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.segundoFactorVerificado.url}]"
        id="restMsSegundoFactorVerificado" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
     <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.url}]"
        id="restMsSegundoFactorTransaccion3dsGuardar" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="true"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.url}]"
        id="restMsSegundoFactorTransaccion3dsConsultar" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="true"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.dispositivos.obtener.url}]"
        id="restMsSegundoFactorDispositivosObtener" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.msauth.interno.getToken.url}]"
        id="restMsAuthInternoGetToken" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.estado.iniciar.url}]"
        id="restMsSegundoFactorEstadoIniciar" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.estado.validar.url}]"
        id="restMsSegundoFactorEstadoValidar" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{amazon.aws.endpoint.ms2fa.estado.autorizar.url}]"
        id="restMsSegundoFactorEstadoAutorizar" loggingFeatureEnabled="false">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="false"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <!-- API DALE -->
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.servicionexus.consultarsaldotc}]"
        id="endpointRSServicioNexus" loggingFeatureEnabled="true">
        <camelcxf:providers>
            <bean
                class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProviderNexus">
                <property name="dropRootElement" value="true"/>
                <property name="supportUnwrapped" value="true"/>
            </bean>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <camelcxf:rsClient
        address="[{coopeuch.ws3ds.factoresautenticacion.consultar}]"
        id="endpointRSFactoresAutenticacion" loggingFeatureEnabled="true">
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <sslContextParameters camelContextId="SERVICIO-WS3DS"
        id="sslContextParameters" xmlns="http://camel.apache.org/schema/blueprint">
        <keyManagers keyPassword="{{coopeuch.ws3ds.jks.password}}">
            <keyStore password="{{coopeuch.ws3ds.jks.password}}"
                resource="{{coopeuch.ws3ds.jks.path}}" type="{{coopeuch.ws3ds.jks.type}}"/>
        </keyManagers>
        <trustManagers>
            <keyStore password="{{coopeuch.ws3ds.jks.password}}" resource="{{coopeuch.ws3ds.jks.path}}"/>
        </trustManagers>
        <serverParameters clientAuthentication="WANT"/>
        <clientParameters>
            <cipherSuitesFilter>
                <include>.*</include>
            </cipherSuitesFilter>
        </clientParameters>
    </sslContextParameters>
    <camelContext id="SERVICIO-WS3DS" streamCache="false" xmlns="http://camel.apache.org/schema/blueprint">
        <threadPoolProfile defaultProfile="true" id="changedProfile"
            maxQueueSize="100" poolSize="1"/>
        <dataFormats>
            <json id="serializer" library="Jackson" prettyPrint="true"/>
            <json id="responseTerverFactor" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.tresds.model.ValidarTercerFactorResponse"/>
        </dataFormats>
        <redeliveryPolicyProfile allowRedeliveryWhileStopping="false"
            id="redeliveryPolicy" maximumRedeliveries="2"
            redeliveryDelay="1000" retryAttemptedLogLevel="INFO"/>
        <onException id="CustomExceptionHandlingHTTP">
            <exception>cl.coopeuch.integracion.tresds.exceptions.ProcedureExcepcion</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.paTransaccionGetChallenge}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.paTransaccionGetChallenge}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod415}}: ${exception.message} </simple>
            </setProperty>
            <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandlingHTTP">
            <exception>cl.coopeuch.integracion.tresds.exceptions.BloqueoExcepcion</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.permanentSystemFailure}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.permanentSystemFailure}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>${exception.message} </simple>
            </setProperty>
            <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling">
            <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores${exception.message.split('errors')[1]}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.invalidFormat}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.invalidFormat}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod417}}</simple>
            </setProperty>
            <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling">
            <exception>java.net.ConnectException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="Intento ${header.CamelRedeliveryCounter} de ${header.CamelRedeliveryMaxCounter} para ${routeId} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="INFO" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.transactionTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.transactionTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod505}}: ${exception.message}</simple>
            </setProperty>
            <!-- Time Out DB2 -->
            <setProperty propertyName="codigoTimeout">
                <simple>{{coopeuch.ws3ds.codigoError.transactionTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>{{coopeuch.ws3ds.descripcionError.cod505}}: ${exception.message}</simple>
            </setProperty>
            <!-- TimeOut AMQ -->
            <setProperty propertyName="codigohttpAMQ">
                <simple>{{coopeuch.ws3ds.codigoError.systemConnectionFailure}}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeoutAMQ">
                <simple>{{coopeuch.ws3ds.descripcionError.cod501}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeoutAMQ">
                <simple>{{coopeuch.ws3ds.descripcionError.cod501}}: ${exception.message}</simple>
            </setProperty>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <choice>
                <when>
                    <simple>${property.Connection} == '1'</simple>
                    <wireTap id="respuestaError" uri="direct:excepcion"/>
                </when>
            </choice>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <onException id="JMSException">
            <exception>cl.coopeuch.integracion.tresds.exceptions.JMSException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.systemConnectionFailure}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.systemConnectionFailure}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod501}}: ${exception.message}</simple>
            </setProperty>
            <!-- TimeOut AMQ -->
            <setProperty propertyName="codigohttpAMQ">
                <simple>{{coopeuch.ws3ds.codigoError.systemConnectionFailure}}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeoutAMQ">
                <simple>{{coopeuch.ws3ds.descripcionError.cod501}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeoutAMQ">
                <simple>{{coopeuch.ws3ds.descripcionError.cod501}}: ${exception.message}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="INFO" message="Intento ${header.CamelRedeliveryCounter} de ${header.CamelRedeliveryMaxCounter} para ${routeId} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="Stacktrace: ${exception.stacktrace}"/>
            <setProperty propertyName="codigohttp">
                <simple>{{coopeuch.ws3ds.codigoError.permanentSystemFailure}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.permanentSystemFailure}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod500}}: ${exception.message}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                <simple>{{coopeuch.ws3ds.codigoError.transactionTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>{{coopeuch.ws3ds.descripcionError.cod505}}: ${exception.message}</simple>
            </setProperty>
            <wireTap id="respuestaError" uri="direct:excepcion"/>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <stop/>
        </onException>
        <route id="ROUTE-PRINCIPAL-WS3DS">
            <from id="restInicio" uri="cxfrs:bean:restApiEnpoint?bindingStyle=SimpleConsumer"/>
            <setProperty id="_setProperty1" propertyName="operacion">
                <simple resultType="String">${header.operationName}</simple>
            </setProperty>
            <setProperty id="_setProperty2" propertyName="rut_log">
                <simple>00000000</simple>
            </setProperty>
            <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                <simple>$simple{body.class.getSimpleName()}</simple>
            </setProperty>
            <bean id="_bean8" method="inicializarVariables" ref="beanRouteFacade"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${header.operationName} == 'isEnrrolled'</simple>
                    <!-- Logica variables enrrolled Producto DALE -->
                    <!-- Logica variables enrrolled Producto DALE -->
                    <!-- Logica variables enrrolled Producto DALE -->
                    <!-- Logica variables enrrolled Producto DALE -->
                    <!-- Logica variables enrrolled Producto DALE -->
                    <setProperty id="_setProperty3" propertyName="IdTrxDS">
                        <simple>${body.getDsTxId()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty4" propertyName="versionProtocolo">
                        <simple>${body.getMessageVersionNumber()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty5" propertyName="producto">
                        <simple>${body.getProductName()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty6" propertyName="accountNumber">
                        <simple>${body.getAccountNumber()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty7" propertyName="idTX">
                        <simple>${body.getAcsTxId()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty8" propertyName="moneda">
                        <constant/>
                    </setProperty>
                    <setProperty id="_setProperty9" propertyName="binAccountNumber">
                        <simple>${property.accountNumber.substring(0,6)}</simple>
                    </setProperty>
                    <setProperty id="_setProperty10" propertyName="binDale">
                        <simple>{{coopeuch.ws3ds.binDale}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty11" propertyName="rutBinDale">
                        <simple>${property.RUT}</simple>
                    </setProperty>
                    <setProperty id="_setProperty29" propertyName="userId">
                        <simple>{{coopeuch.ws3ds.userId}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty30" propertyName="canalLlamada">
                        <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty178" propertyName="idMetodoAutenticacion">
                        <simple>0</simple>
                    </setProperty>
                    <setProperty id="_setProperty179" propertyName="estadoEnrolamiento">
                        <simple>1</simple>
                    </setProperty>
                    <setProperty id="_setProperty186" propertyName="codigo">
                        <simple>0</simple>
                    </setProperty>
                    <setProperty id="_setProperty187" propertyName="descripcion">
                        <simple>isEnrrolled</simple>
                    </setProperty>
                    <to id="_to66" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                </when>
            </choice>
            <setProperty id="_setProperty12" propertyName="nombreproyecto">
                <simple>WS3DS</simple>
            </setProperty>
            <setProperty id="_setProperty13" propertyName="bodyRequest">
                <simple>${body}</simple>
            </setProperty>
            <marshal id="_marshal1">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <setBody id="_setBody1">
                <simple>${property.bodyRequest}</simple>
            </setBody>
            <to id="_to1" uri="bean-validator://x"/>
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <setHeader headerName="Content-Type" id="_setHeader1">
                <constant>application/json</constant>
            </setHeader>
            <!-- 
            <log id="_log66" message="user id : ${property.userId}"/>
             -->
            <toD id="_toD2" uri="direct:${header.operationName}"/>
        </route>
        <!-- ******************************************************************************* -->
        <!-- ********************************** validateCardRoute ******************************* -->
        <!-- ******************************************************************************* -->
        <route id="validateBinRoute">
            <!-- Componente de entrada -->
            <from id="fromValidateBin" uri="direct:validateBin"/>
            <log id="_log1" message="validateBin, numCuenta: ${exchangeProperty.accountNumber}"/>
            <choice id="choiceValidateBin">
                <when id="whenValidateBinDebito">
                    <simple>${exchangeProperty.accountNumber} regex '^{{coopeuch.ws3ds.binTarjetaDebito}}.*$'</simple>
                    <setProperty id="setPropertyValidateBinDebito" propertyName="cardType">
                        <constant>Debito</constant>
                    </setProperty>
                </when>
                <when id="whenValidateBinDale">
                    <simple>${exchangeProperty.accountNumber} regex '^{{coopeuch.ws3ds.binDale}}.*$'</simple>
                    <setProperty id="setPropertyValidateCardDale" propertyName="cardType">
                        <constant>Dale</constant>
                    </setProperty>
                </when>
                <when id="whenValidateBinCredito">
                    <simple>
				        ${exchangeProperty.accountNumber} regex '^{{coopeuch.ws3ds.binTarjetaCredito1}}.*$' or 
				        ${exchangeProperty.accountNumber} regex '^{{coopeuch.ws3ds.binTarjetaCredito2}}.*$' or 
				        ${exchangeProperty.accountNumber} regex '^{{coopeuch.ws3ds.binTarjetaCredito3}}.*$'
				    </simple>
                    <setProperty id="setPropertyValidateBinCredito" propertyName="cardType">
                        <constant>Credito</constant>
                    </setProperty>
                </when>
                <otherwise id="otherwiseValidateBinCredito">
                    <setProperty id="setPropertyValidateBinUnknown" propertyName="cardType">
                        <constant>Unknown</constant>
                    </setProperty>
                </otherwise>
            </choice>
            <setProperty id="_setProperty188" propertyName="codigo">
                <simple>0</simple>
            </setProperty>
            <setProperty id="_setProperty189" propertyName="descripcion">
                <simple>validateBin</simple>
            </setProperty>
            <to id="_to67" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
            <log id="logCardType" message="Card type: ${exchangeProperty.cardType}"/>
        </route>
        <!-- ******************************************************************************* -->
        <!-- ********************************** IS_ESNROLLED ******************************* -->
        <!-- ******************************************************************************* -->
        <route errorHandlerRef="noErrorHandler" id="isEnrrolled" streamCache="true">
            <from id="_from2" uri="direct:isEnrrolled"/>
            <marshal id="3dsMarshal">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="_convertBodyTo2" type="String"/>
            <setProperty id="_setProperty18" propertyName="Interfazzz">
                <jsonpath resultType="String">$..SDK_INTERFACE</jsonpath>
            </setProperty>
            <setProperty id="_setProperty19" propertyName="Connection">
                <constant>1</constant>
            </setProperty>
            <log id="_log2" message="IsEnrrolled"/>
            <to id="toIsEnrrolledValidateBin" uri="direct:validateBin"/>
            <choice id="_choice2">
                <when id="whenIsEnrrolledDaleBin">
                    <!-- Logica Identificacion Tarjeta DALE por su BIN  -->
                    <simple>${property.cardType} == 'Dale'</simple>
                    <setProperty id="_setProperty190" propertyName="descripcion">
                        <simple>validateBin Dale</simple>
                    </setProperty>
                    <setProperty id="setPropertyDaleEstadoMetodoAutenticacion" propertyName="estadoMetodoAutenticacion">
                        <simple>false</simple>
                    </setProperty>
                    <setProperty id="setPropertyDaleReintentos" propertyName="cantidadReintentos">
                        <simple>3</simple>
                    </setProperty>
                    <setProperty id="setPropertyFactorA" propertyName="factorA">
                        <simple>OTP Dale</simple>
                    </setProperty>
                    <to id="_to68" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <to id="toIsEnrrolledDaleBin" uri="direct:isEnrrolledDale"/>
                </when>
                <when id="whenIsEnrrolledDebitoBin">
                    <!-- Logica Identificacion Tarjeta Debito por su BIN  -->
                    <simple>${property.cardType} == 'Debito'</simple>
                    <setProperty id="_setProperty191" propertyName="descripcion">
                        <simple>validateBin Debito</simple>
                    </setProperty>
                    <to id="_to69" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <to id="toIsEnrrolledDebitoBin" uri="direct:isEnrrolledDebito"/>
                </when>
                <when id="whenIsEnrrolledCreditoBin">
                    <!-- Logica Identificacion Tarjeta Credito por su BIN  -->
                    <simple>${property.cardType} == 'Credito'</simple>
                    <setProperty id="_setProperty192" propertyName="descripcion">
                        <simple>validateBin Credito</simple>
                    </setProperty>
                    <to id="_to72" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <to id="toIsEnrrolledCreditoBin" uri="direct:isEnrrolledCredito"/>
                </when>
                <otherwise id="otherwisecardType">
                    <!-- Si nos es Dale que pase a softoken -->
                    <log id="logErrorCardNotFound" message="No reconoce la tarjeta: TARJETA NUMERO :: ${property.accountNumber}"/>
                    <setProperty id="setPropertyErrorTarjetaInvalida" propertyName="descripcion">
                        <simple>Error Validando Tarjeta</simple>
                    </setProperty>
                    <to id="toAutitoriaErrorTarjetaInvalida" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <bean id="errorExceptionResponseTarjetaInvalida" method="ResponseEnrolamiento" ref="beanRouteFacade"/>
            		<log id="logErrorExceptionTarjetaInvalida" message="RESPONSE ENROLAMIENTO - ${body}"/>
                </otherwise>
            </choice>
            <stop id="_stop4"/>
        </route>
        <route id="isEnrrolledValidarEstado">
            <from id="fromIsEnrrolledValidarEstado" uri="direct:isEnrrolledValidarEstado"/>
            <log id="_log6" message="isEnrrolledValidarEstado, Cuenta: ${exchangeProperty.accountNumber}"/>
            <to id="toIsEnrrolledValidarEstadoConsultaTarjeta" uri="sql-stored:classpath:sql/PA_CONSULTAENROLAMIENTO3DS_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=consultaTarjetas"/>
            <log id="_log7" message="Despues isEnrrolledValidarEstado"/>
            <bean id="consultarEstadoBeanExcepcion"
                method="procesarConsultarEstado" ref="beanRouteFacade"/>
            <removeHeader headerName="consultaTarjetas" id="_removeHeader1"/>
            <convertBodyTo id="_convertBodyTo3" type="String"/>
            <log id="_log3" message="Codigo Respuesta PA ${property.COD}"/>
            <log id="_log4" message="Glosa Respuesta PA ${property.GLOSA}"/>
            <log id="_log5" message="BODY ${body}"/>
            <choice id="choiseIsEnrrolledValidarEstado">
                <when id="whenIsEnrrolledValidarEstado">
                    <simple>${property.COD} != '000'</simple>
                    <setProperty
                        id="setPropertyIsEnrrolledValidarEstadoValidacionIBSErronea" propertyName="validacionIBS">
                        <simple>false</simple>
                    </setProperty>
                </when>
                <otherwise id="otherwiseIsEnrrolledValidarEstadoValidacionIBSErronea">
                    <log
                        id="logSetPropertyIsEnrrolledValidarEstadoValidacionIBSErronea" message="VALIDACION IBS EXITOSA ::::: COD ${property.COD}"/>
                    <setProperty
                        id="setPropertyIsEnrrolledValidarEstadoValidacionIBSExitosa" propertyName="validacionIBS">
                        <simple>true</simple>
                    </setProperty>
                </otherwise>
            </choice>
        </route>
        <route id="guardarAuditoriaEnrrolamiento">
            <from id="fromGuardarAuditoriaEnrrolamiento" uri="direct:guardarAuditoriaEnrrolamiento"/>
            <setProperty id="setGuardarAuditoriaEnrrolamientoCodigo" propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.tarjetaBloqueada}}</simple>
            </setProperty>
            <setProperty id="setIsEnrrolledValidarEstadoDescripcion" propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod1}}</simple>
            </setProperty>
            <to
                id="toIsEnrrolledValidarEstadoInsAuditoriaEnrrollamiento" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
            <bean id="IsEnrrolledValidarEstadoRespuestaErrorEnrolled"
                method="ResponseEnrolamiento" ref="beanRouteFacade"/>
            <log id="logIsEnrrolledValidarEstadoResponseEnrrollamiento" message="RESPONSE ENROLAMIENTO - ${body}"/>
            <removeHeaders id="removeHeadersIsEnrrolledValidarEstado" pattern="responsePA"/>
        </route>

         <!-- *************************************************** -->
        <!-- ********** INICIO FLUJO IS_ENROLLED DALE ********** -->
        <!-- *************************************************** -->
        <route id="isEnrrolledDale" errorHandlerRef="noErrorHandler" streamCache="true">
            <from id="fromIsEnrrolledDale" uri="direct:isEnrrolledDale"/>
            <to id="toIsEnrrolledDaleValidarEstado" uri="direct:isEnrrolledValidarEstado"/>
            <choice id="_choiceBinTarjeta1">
                <when id="_whenEsBinDale1">
                    <simple>${property.validacionIBS} == true</simple>
                    <log id="_logIsEnrolledDale0" loggingLevel= "INFO" message="***INICIA IS ENROLLED DALE***"/>
                    <log id="_logIsEnrolledDale4" loggingLevel= "INFO" message="VALIDACION EXITOSA :: TARJETA INGRESADA ES DALE***"/>
                    <!--  Logica Validacion API DALE 2do factor Habilitado  -->
                    <setProperty id="_setPropertyIsEnrolledDale1" propertyName="producto">
                        <simple>DALE</simple>
                    </setProperty>
                
                    <!-- Consumo API DALE - 2FA Dispositivos Obtener -->
                       <log id="_logIsEnrolledDale15" loggingLevel= "INFO" message="CONSUMO API DALE :: 2FA Dispositivos Obtener"/>
                       <doTry>
                           <removeHeaders id="_removeHeadersIsEnrolledDale1" pattern="*"/>     
                           <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderIsEnrolledDale1">
                               <constant>{{amazon.aws.endpoint.ms2fa.dispositivos.obtener.apikey.value}}</constant>
                           </setHeader>
                           <setHeader headerName="Content-Type" id="_setHeaderIsEnrolledDale2">
                               <constant>application/json</constant>
                           </setHeader>
                           <setHeader headerName="CamelHttpMethod" id="_setHeaderIsEnrolledDale3">
                               <constant>GET</constant>
                           </setHeader>
                           <setHeader headerName="CamelHttpPath" id="_setHeaderIsEnrolledDale4">
                               <simple>${property.RUT}</simple>
                           </setHeader>
                           <to id="restMsSegundoFactorDispositivosObtener2" uri="cxfrs://bean://restMsSegundoFactorDispositivosObtener"/>
                           <setProperty id="_setPropertyIsEnrolledDale15" propertyName="dalepassEnrolled">
                               <jsonpath resultType="String">$.dalepass.habilitado</jsonpath>
                           </setProperty>
                           <setProperty id="_setPropertyIsEnrolledDale16" propertyName="googleAuthEnrolled">
                               <jsonpath resultType="String">$.google-auth.habilitado</jsonpath>
                           </setProperty>
                           <log id="_logIsEnrolledDale18" loggingLevel = "INFO" message="2FA Dispositivos Obtener :: DATA CONSULTADA EXITOSAMENTE"/>
                          
                       <doCatch>
                           <exception>java.lang.Exception</exception>
                           <log id="_logIsEnrolledDale21" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Dispositivos Obtener"/>
                           <setProperty id="_setPropertyIsEnrolledDale3" propertyName="rut2fa">
                            <constant>false</constant>
                            </setProperty>
                            <to id="_toIsEnrolledDale1" uri="direct:responseIsEnrolled"/> 
                       </doCatch>
                       </doTry>
                        <choice>
                                <when>
                                    <simple>${property.dalepassEnrolled} == true || ${property.googleAuthEnrolled} == true</simple>
                                    <setProperty id="_setPropertyIsEnrolledDale17" propertyName="rut2fa">
                                        <simple>true</simple>
                                    </setProperty>
                                </when>
                                <otherwise>
                                    <setProperty id="_setPropertyIsEnrolledDale18" propertyName="rut2fa">
                                        <simple>false</simple>
                                    </setProperty>
                                </otherwise>
                           </choice>
                    <choice id="_choice2FAHabilitadoDALE">
                         <!--  2FAHabilitado :: True  -->
                        <when id="_when2FAHabilitadoDALE">
                            <simple>${property.rut2fa} == true</simple>
                            <log id="_logIsEnrolledDale8" loggingLevel= "INFO" message="*** VALIDACION 2FA DALE EXITOSA ***"/>
                            <setProperty id="_setPropertyIsEnrolledDale4" propertyName="estado">
                            <simple>0</simple>
                            </setProperty>
                            <setProperty id="_setPropertyIsEnrolledDale5" propertyName="AUTH_TYPE">
                            <simple>OOB</simple>
                            </setProperty>
                                <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                <log id="_logIsEnrolledDale9" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                <setProperty id="_setPropertyIsEnrolledDale6" propertyName="acsTxId_dale">
                                    <simple>${property.idTX}</simple>
                                </setProperty>
                                <setProperty id="_setPropertyIsEnrolledDale7" propertyName="rut_dale">
                                    <simple>${property.RUT}</simple>
                                </setProperty>
                                <setProperty id="_setPropertyIsEnrolledDale8" propertyName="numeroTarjeta_dale">
                                    <simple>${property.accountNumber}</simple>
                                </setProperty>
                                <doTry>
                                    <removeHeaders id="_removeHeadersIsEnrolledDale2" pattern="*"/>     
                                    <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderIsEnrolledDale5">
                                        <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                    </setHeader>
                                    <setHeader headerName="Content-Type" id="_setHeaderIsEnrolledDale6">
                                        <constant>application/json</constant>
                                    </setHeader>
                                    <setHeader headerName="CamelHttpMethod" id="_setHeaderIsEnrolledDale7">
                                        <constant>POST</constant>
                                    </setHeader>
                                    <setBody id="_setBodyIsEnrolledDale1">
                                        <simple>{
                                                "acsTxId": "${property.acsTxId_dale}", 
                                                "rutCliente": "${property.rut_dale}", 
                                                "acquirerBin": "${property.numeroTarjeta_dale}" 
                                                }
                                        </simple>
                                    </setBody>
                                    <to id="restMsSegundoFactorTransaccion3dsGuardar1" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                    <log id="_logIsEnrolledDale10" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA REGISTRADA EXITOSAMENTE"/>
                                <doCatch>
                                    <exception>java.lang.Exception</exception>
                                    <log id="_logIsEnrolledDale11" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Guardar"/>
                                    <setProperty id="_setPropertyIsEnrolledDale9" propertyName="rut2fa">
                                        <constant>false</constant>
                                    </setProperty>
                                    <to id="_toIsEnrolledDale2" uri="direct:responseIsEnrolled"/> 
                                </doCatch>
                                </doTry>
                            <to id="_toIsEnrolledDale3" uri="direct:responseIsEnrolled"/>
                            <stop id="_stopBodyIsEnrolledDale1"/>
                        </when>
                         <!--  2FAHabilitado :: False  -->
                        <otherwise id="_otherwise_2FA_Habilitado_DALE">
                            <log id="_logIsEnrolledDale12" loggingLevel= "INFO" message="***VALIDACION 2FA DALE FALLIDA***"/>
                            <!-- Registro Tablas Generales 3DS -->
                            <log id="_logIsEnrolledDale13" loggingLevel= "INFO" message="GUARDAR DATA :: BD 3DS GENERALES"/>
                            <setProperty id="_setPropertyIsEnrolledDale10" propertyName="codigo">
                            <simple>{{coopeuch.ws3ds.codigoError.ws3dsTarjetaDale}}</simple>
                            </setProperty>
                            <setProperty id="_setPropertyIsEnrolledDale11" propertyName="descripcion">
                            <simple>{{coopeuch.ws3ds.descripcionMensaje.cod11}}</simple>
                            </setProperty>
                            <to id="_toIsEnrolledDale4" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                            <log id="_logIsEnrolledDale14" loggingLevel= "INFO" message="DATA REGISTRADA EXITOSAMENTE"/>
                            <setProperty id="_setPropertyIsEnrolledDale12" propertyName="estado">
                            <simple>1</simple>
                            </setProperty>
                            <setProperty id="_setPropertyIsEnrolledDale13" propertyName="AUTH_TYPE">
                            <simple>OOB</simple>
                            </setProperty>
                            <to id="_toIsEnrolledDale5"  uri="direct:responseIsEnrolled"/>
                            <stop id="_stopBodyIsEnrolledDale2"/>
                        </otherwise>
                    </choice> 
                </when>
                <otherwise id="otherwiseIsEnrrolledDale">
                    <log id="logIsEnrrolledDaleValidacionErronea" loggingLevel= "INFO" message="VALIDACION IBS ERRONEA ::::: COD ${property.COD}"/>
                    <to id="toIsEnrrolledDaleAuditoriaEnrrolamiento" uri="direct:guardarAuditoriaEnrrolamiento"/>
                </otherwise>
            </choice>
        </route>
        <!-- *************************************************** -->
        <!-- ********** FIN FLUJO IS_ENROLLED DALE ************* -->
        <!-- *************************************************** -->
        <route errorHandlerRef="noErrorHandler" id="isEnrrolledDebito" streamCache="true">
            <from id="fromIsEnrrolledDebito" uri="direct:isEnrrolledDebito"/>
            <to id="toIsEnrrolledDebitoIsEnrrolledValidarEstado" uri="direct:isEnrrolledValidarEstado"/>
            <setProperty id="_setProperty193" propertyName="descripcion">
                <simple>Validar Estado IBS</simple>
            </setProperty>
            <to id="_to73" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
            <setProperty id="_setProperty14" propertyName="validacionIBS">
                <simple>true</simple>
            </setProperty>
            <log id="_log67" message="VALIDACION IBS EXITOSA ::::: COD ${property.validacionIBS}"/>
            <choice id="choiceIsEnrrolledDebito">
                <when id="whenIsEnrrolledDebito">
                    <simple>${property.validacionIBS} == true</simple>
                    <log id="logIsEnrrolledDebitoValidacionExitosa" message="VALIDACION IBS EXITOSA ::::: COD ${property.COD}"/>
                    <log id="logFromIsEnrrolledDebito" message="TARJETA NUMERO :: ${property.accountNumber}"/>
                    <marshal id="_marshal2">
                        <json library="Jackson"/>
                    </marshal>
                    <convertBodyTo id="_convertBodyTo20" type="String"/>
                    <setProperty id="_setProperty180" propertyName="Interfazzz">
                        <jsonpath resultType="String">$..SDK_INTERFACE</jsonpath>
                    </setProperty>
                    <setProperty id="_setProperty181" propertyName="Connection">
                        <constant>1</constant>
                    </setProperty>
                    <to id="_to62" uri="sql-stored:classpath:sql/PA_CONSULTAENROLAMIENTO3DS_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=consultaTarjetas"/>
                    <log id="_log74" message="Respuesta Consulta Enrolamiento3DS: ${body}"/>
                    <bean id="_bean6" method="procesarConsultarEstado" ref="beanRouteFacade"/>
                    <removeHeader headerName="consultaTarjetas" id="_removeHeader5"/>
                    <convertBodyTo id="_convertBodyTo21" type="String"/>
                    <log id="_log75" message="Codigo Respuesta PA ${property.COD}"/>
                    <log id="_log76" message="Glosa Respuesta PA ${property.GLOSA}"/>
                    <log id="_log77" message="BODY ${body}"/>
                    <choice id="_choice14">
                        <when id="_when35">
                            <simple>${property.COD} != '000'</simple>
                            <setProperty id="_setProperty182" propertyName="codigo">
                                <simple>{{coopeuch.ws3ds.codigoError.tarjetaBloqueada}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty183" propertyName="descripcion">
                                <simple>{{coopeuch.ws3ds.descripcionError.cod1}}</simple>
                            </setProperty>
                            <to id="_to70" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                            <bean id="_bean7"
                                method="ResponseEnrolamiento" ref="beanRouteFacade"/>
                            <log id="_log78" message="RESPONSE ENROLAMIENTO - ${body}"/>
                            <removeHeaders id="_removeHeaders42" pattern="responsePA"/>
                            <stop id="_stop29"/>
                        </when>
                        <otherwise id="_otherwise2">
                            <log id="_log79" message="VALIDACION IBS EXITOSA ::::: COD ${property.COD}"/>
                            <to
                                id="toIsEnrrolledDebitoFlujosYParametros" uri="direct:validarFlujosYParametros"/>
                            <to id="toIsEnrrolledDebitoValidarFactores" uri="direct:validarFactores"/>
                            <stop id="_stop30"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise id="otherwiseIsEnrrolledDebitoConsumirSoftToken">
                    <log id="logIsEnrrolledDebitoValidacionErronea" message="VALIDACION IBS ERRONEA ::::: COD ${property.COD}"/>
                    <to id="toIsEnrrolledDebitoAuditoriaEnrrolamiento" uri="direct:guardarAuditoriaEnrrolamiento"/>
                    <stop id="_stop31"/>
                </otherwise>
            </choice>
        </route>
        <route id="isEnrrolledCredito" streamCache="true">
            <from id="fromIsEnrrolledCredito" uri="direct:isEnrrolledCredito"/>
            <to id="toIsEnrrolledCredito" uri="direct:isEnrrolledValidarEstado"/>
            <setProperty id="_setProperty15" propertyName="validacionIBS">
                <simple>true</simple>
            </setProperty>
            <choice id="choiceIsEnrrolledCredito">
                <when id="whenTrueIsEnrrolledCredito">
                    <simple>${property.validacionIBS} == true</simple>
                    <log id="logIsEnrrolledCreditoValidacionExitosa" message="VALIDACION IBS EXITOSA ::::: COD ${property.COD}"/>
                    <to id="toIsEnrrolledCreditoServicioNexus" uri="direct:servicioNexus"/>
                    <setProperty id="_setProperty194" propertyName="descripcion">
                        <simple>Validar Estado Nexus</simple>
                    </setProperty>
                    <to id="_to74" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <choice>
	                	<when>
	                    	<simple>${exchangeProperty.validateNexus} == 'true'</simple>		                    		                
		                    <to id="toIsEnrrolledCreditoFlujosYParametros" uri="direct:validarFlujosYParametros"/>
		                    <setProperty id="_setProperty195" propertyName="descripcion">
		                        <simple>Validar Flujos</simple>
		                    </setProperty>
		                    <to id="_to76" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
		                    <to id="toIsEnrrolledCreditoValidarFactores" uri="direct:validarFactores"/>
		                    <setProperty id="_setProperty196" propertyName="descripcion">
		                        <simple>Validar Factores</simple>
		                    </setProperty>
		                    <to id="_to77" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
	                   	</when>
	                   	<otherwise>
	                   		<setProperty id="_setProperty195" propertyName="descripcion">
		                        <simple>Error Validar Flujos</simple>
		                    </setProperty>
		                    <to id="toErrorValidarFlujos" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
	                   		<bean id="errorExceptionResponseValidateEnrolamiento" method="ResponseEnrolamiento" ref="beanRouteFacade"/>
		            		<log id="logErrorExceptionResponseValidateEnrolamiento" message="RESPONSE ENROLAMIENTO - ${body}"/>
	                   	</otherwise>
		            </choice>
                    <stop id="_stop28"/>
                </when>
                <otherwise id="otherwiseIsEnrrolledCredito">
                    <log id="logIsEnrrolledCreditoErroneo" message="VALIDACION IBS ERRONEA ::::: COD ${property.COD}"/>
                    <to id="toIsEnrrolledCreditoAuditoriaEnrrolamiento" uri="direct:guardarAuditoriaEnrrolamiento"/>
                </otherwise>
            </choice>
            <stop id="stopisEnrrolledCredito"/>
        </route>
        <route errorHandlerRef="noErrorHandler" id="servicioNexus" streamCache="true">
            <from id="isEnrrolledServicioNexusFrom" uri="direct:servicioNexus"/>
            <bean id="isEnrro lledCreditoBeanRequestNexus"
                method="requestNexus" ref="beanRouteFacadeIsEnrrolled"/>
            <log id="logHomologacionPaisBodyRequest" loggingLevel="INFO" message="Request : ${body}"/>
            <to id="isEnrrolledCreditoToServicioNexus" uri="cxfrs:bean:endpointRSServicioNexus"/>
            <convertBodyTo
                id="isEnrrolledCreditoResponseHomologaConvertTo" type="java.lang.String"/>
            <bean id="isEnrrolledCreditoServicioNexusResponseBean"
                method="responseNexus" ref="beanRouteFacadeIsEnrrolled"/>
            <setProperty id="_setProperty16" propertyName="responseNexus">
                <simple>${body}</simple>
            </setProperty>
            <log id="logFromIsEnrrolledCredito" message="TARJETA NUMERO :: ${property.accountNumber}"/>
        </route>
        <route errorHandlerRef="noErrorHandler"
            id="validarFlujosYParametros" streamCache="true">
            <from id="validarFlujosYParametrosFrom" uri="direct:validarFlujosYParametros"/>
            <!-- 
            <log id="_log71" loggingLevel="INFO" message="antes pa"/>
             -->
            <to id="validarFlujosFlujosFactor" uri="sql-stored:classpath:sql/pa_selFlujosFactor.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=consultarFlujosFactorAut"/>
            <bean id="validarFlujosResponseFlujosFactor"
                method="procesarPaConsultarFlujosFactor" ref="beanRouteFacadeIsEnrrolled"/>
            <log id="_log80" loggingLevel="INFO" message="Resultado Consulta Flujos Factor ${body}, ${header.consultarFlujosFactorAut}"/>
            <removeHeader headerName="consultarFlujosFactorAut" id="removeHeaderFlujoFactor"/>
            <to id="validarFlujosParametrosFactor" uri="sql-stored:classpath:sql/pa_selParametrosFactor.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=consultarParametrosFactorAut"/>
            <log id="_log81" loggingLevel="INFO" message="ResponseParametrosFactor : ${body}"/>
            <bean id="validarFlujosResponseParametrosFactor"
                method="procesarPaConsultarParametrosFactor" ref="beanRouteFacadeIsEnrrolled"/>
            <log id="_log82" loggingLevel="INFO" message="Resultado Consulta Flujos Factor ${body}, ${header.consultarParametrosFactorAut}"/>
            <removeHeader headerName="consultarParametrosFactorAut" id="consultarParametrosFactorAut"/>
        </route>
        <route errorHandlerRef="noErrorHandler" id="validarFactores" streamCache="true">
            <from id="isEnrrolledvalidarFactoresFrom" uri="direct:validarFactores"/>
            <setProperty propertyName="factoresValidos">
            	<simple>true</simple>
            </setProperty>
            <bean id="isEnrrolledFactoresAutenticacionRequest"
                method="requestFactoresAutenticacion" ref="beanRouteFacadeIsEnrrolled"/>
            <log id="_log83" message="REQUEST FACTORES AUTENTICACION - ${body}"/>
            <to id="isEnrrolledCreditoToFactoresAutenticacion" uri="cxfrs:bean:endpointRSFactoresAutenticacion"/>
            <!-- 
            <log id="_log84" message="RESPONSE FACTORES AUTENTICACION - ${body}"/>
             -->
            <convertBodyTo
                id="isEnrrolledCreditoFactoresAutenticacionConvert" type="java.lang.String"/>
                <!--
            <log id="_log85" message="RESPONSE FACTORES AUTENTICACION TOSTRING - ${body}"/>
            -->
            <bean id="validarFactoresResponseFactores"
                method="responseFactoresAutenticacion" ref="beanRouteFacadeIsEnrrolled"/>
            <bean id="validarFactoresProcesarFlujosFactorOrdenados" method="procesarFlujosFactorOrdenados" ref="beanRouteFacadeIsEnrrolled"/>
            <when>
                <simple>${property.factoresValidos} == 'true'</simple>
	            <log id="_log86" loggingLevel="INFO" message="Factor A: ${header.factorA} , Factor B: ${header.factorB}"/>
	            <to id="_to71" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
	            <setProperty id="_setProperty184" propertyName="fechaCambio">
	                <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss}</simple>
	            </setProperty>
	            <setProperty id="_setProperty197" propertyName="estado">
	                <simple>0</simple>
	            </setProperty>
	            <to id="_to78" uri="direct:responseIsEnrolled"/>
	            <to id="_to79" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
	        </when>
	        <otherwise>
	        	<bean id="responseErrorValidarFactores" method="ResponseEnrolamiento" ref="beanRouteFacade"/>	        
	        </otherwise>
            <log id="tarjetaCreditoLogResponseEnrrolamiento" message="RESPONSE ENROLAMIENTO - ${body}"/>
        </route>
        <!-- Ruta para consumir SoftToken PASS COOPEUCH-->
        <route errorHandlerRef="noErrorHandler" id="Consumir-SoftToken" streamCache="true">
            <from id="_from3" uri="direct:consumirSoftToken"/>
            <setProperty id="passCoopeuchSetPropertyUserId" propertyName="userId">
                <simple>{{coopeuch.ws3ds.userId}}</simple>
            </setProperty>
            <setProperty id="passCoopeuchSetPropertyCanalLlamada" propertyName="canalLlamada">
                <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
            </setProperty>
            <bean id="ConsumirSofToken" method="consumirSofToken" ref="beanRouteFacade"/>
            <marshal id="_marshal3">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="_convertBodyTo4" type="java.lang.String"/>
            <removeHeaders id="_removeHeaders4" pattern="*"/>
            <setHeader headerName="Content-Type" id="_setHeader6">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="_setHeader7">
                <constant>POST</constant>
            </setHeader>
            <doTry id="_doTry1">
                <log id="_log17" message="FLUJO COOPEUCH - VALIDACION SOFTTOKEN..."/>
                <to id="wsSoftTokenConsultar-To" uri="cxfrs:bean:endpointSoftTokenConsultar"/>
                <doCatch id="_doCatch1">
                    <exception>java.lang.Exception</exception>
                    <handled>
                        <constant>true</constant>
                    </handled>
                    <log id="_log18" loggerRef="rh1"
                        loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <log id="_log19" loggerRef="rh1"
                        loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
                    <setProperty id="_setProperty31" propertyName="codigohttp">
                        <simple>{{coopeuch.ws3ds.codigoError.softTokenError}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty32" propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoError.consumirSoftToken}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty33" propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionError.cod2}}</simple>
                    </setProperty>
                    <wireTap id="respuestaError" uri="direct:excepcion"/>
                    <to id="_to7" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <bean id="_bean1" method="process" ref="respuestaErrorProcessor"/>
                    <removeHeaders id="_removeHeaders5" pattern="responsePA"/>
                    <stop id="_stop5"/>
                </doCatch>
            </doTry>
            <convertBodyTo id="_convertBodyTo5" type="String"/>
            <setProperty id="_setProperty34" propertyName="estado">
                <jsonpath>$.consultarResponse.estado</jsonpath>
            </setProperty>
            <setProperty id="_setProperty35" propertyName="descripcionSoftToken">
                <jsonpath>$.consultarResponse.descripcion</jsonpath>
            </setProperty>
            <choice id="_choice5">
                <when id="_when8">
                    <simple>${property.estado} == '0'</simple>
                    <setProperty id="_setProperty36" propertyName="AUTH_TYPE">
                        <simple>OOB</simple>
                    </setProperty>
                    <log id="_log20" message="VALIDACION EXITOSA ::: CLIENTE TIENE PASS COOPEUCH"/>
                    <to id="_to8" uri="direct:responseIsEnrolled"/>
                </when>
                <otherwise id="_otherwise5">
                    <log id="_log21" message="FLUJO COOPEUCH - ERROR AL VALIDAR EN SOFTTOKEN"/>
                    <to id="_to9" uri="direct:consumirAdministradorIDG"/>
                </otherwise>
            </choice>
            <stop id="_stop6"/>
        </route>
        <!-- Ruta para consumir RSAdministrador -->
        <route errorHandlerRef="noErrorHandler"
            id="Consumir-RsAdministradorIDG" streamCache="true">
            <from id="_from4" uri="direct:consumirAdministradorIDG"/>
            <bean id="consumeWSAdministradorIDG"
                method="consumeWSAdministradorIDG" ref="beanRouteFacade"/>
            <marshal id="_marshal4">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="_convertBodyTo6" type="java.lang.String"/>
            <removeHeaders id="_removeHeaders6" pattern="*"/>
            <setHeader headerName="Content-Type" id="_setHeader8">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="_setHeader9">
                <constant>POST</constant>
            </setHeader>
            <doTry id="_doTry2">
                <log id="_log22" message="FLUJO COOPEUCH - VALIDACION ADMINISTRADORIDG..."/>
                <to id="wsAdministradorIDGObtenerTarjeta-To" uri="cxfrs:bean:endpointAdministradorIDGObtenerTarjeta"/>
                <doCatch id="_doCatch2">
                    <exception>java.lang.Exception</exception>
                    <handled>
                        <constant>true</constant>
                    </handled>
                    <log id="_log23" loggerRef="rh1"
                        loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}"/>
                    <log id="_log24" loggerRef="rh1"
                        loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
                    <setProperty id="_setProperty37" propertyName="codigohttp">
                        <simple>{{coopeuch.ws3ds.codigoError.softTokenError}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty38" propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoError.softTokenError}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty39" propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionError.RsAdministradorIDG}}: ${exception.message} </simple>
                    </setProperty>
                    <wireTap id="_wireTap1" uri="direct:excepcion"/>
                    <to id="_to10" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <bean id="_bean2" method="process" ref="respuestaErrorProcessor"/>
                    <removeHeaders id="_removeHeaders7" pattern="responsePA"/>
                    <stop id="_stop7"/>
                </doCatch>
            </doTry>
            <convertBodyTo id="_convertBodyTo7" type="String"/>
            <choice id="_choice6">
                <when id="_when9">
                    <simple>${body} contains 'errores'</simple>
                    <setProperty id="_setProperty40" propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoError.administradorIDG}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty41" propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionError.cod3}}</simple>
                    </setProperty>
                    <to id="_to11" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <bean id="respuestaErrorEnrolled1"
                        method="ResponseEnrolamiento" ref="beanRouteFacade"/>
                    <log id="_log25" message="RESPONSE ENROLAMIENTO - ${body}"/>
                    <removeHeaders id="_removeHeaders8" pattern="responsePA"/>
                </when>
                <when id="_when10">
                    <simple>${body} contains 'codigo'</simple>
                    <setProperty id="_setProperty42" propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoError.administradorIDG}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty43" propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionError.cod3}}</simple>
                    </setProperty>
                    <to id="_to12" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                    <bean id="respuestaErrorEnrolled1"
                        method="ResponseEnrolamiento" ref="beanRouteFacade"/>
                    <log id="_log26" message="RESPONSE ENROLAMIENTO - ${body}"/>
                    <removeHeaders id="_removeHeaders9" pattern="responsePA"/>
                </when>
                <otherwise id="_otherwise6">
                    <setProperty id="_setProperty44" propertyName="estadoObtenerTarjeta">
                        <jsonpath>$..estado</jsonpath>
                    </setProperty>
                    <choice id="_choice7">
                        <when id="_when11">
                            <simple>${property.estadoObtenerTarjeta.get(0)} == 'CURRENT' || ${property.estadoObtenerTarjeta.get(0)} == 'PENDING' || ${property.estadoObtenerTarjeta.get(0)} == 'HOLD_PENDING'</simple>
                            <log id="_log27" message="VALIDACION EXITOSA :: CLIENTE TIENE TARJETA DE COORDENADAS"/>
                            <setProperty id="_setProperty45" propertyName="nTarjetaCoordenadas">
                                <jsonpath>$..numeroSerie</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty46" propertyName="nTarjetaCoordenadas">
                                <simple>${property.nTarjetaCoordenadas.get(0)}</simple>
                            </setProperty>
                            <setProperty id="_setProperty47" propertyName="AUTH_TYPE">
                                <simple>STATIC</simple>
                            </setProperty>
                            <setProperty id="_setProperty48" propertyName="estado">
                                <simple>0</simple>
                            </setProperty>
                            <to id="_to13" uri="direct:responseIsEnrolled"/>
                            <stop id="_stop8"/>
                        </when>
                        <otherwise id="_otherwise7">
                            <setProperty id="_setProperty49" propertyName="codigo">
                                <simple>{{coopeuch.ws3ds.codigoError.administradorIDG}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty50" propertyName="descripcion">
                                <simple>{{coopeuch.ws3ds.descripcionError.cod3}}</simple>
                            </setProperty>
                            <to id="_to14" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                            <bean id="respuestaErrorEnrolled1"
                                method="ResponseEnrolamiento" ref="beanRouteFacade"/>
                            <log id="_log28" message="RESPONSE ENROLAMIENTO - ${body}"/>
                            <removeHeaders id="_removeHeaders10" pattern="responsePA"/>
                            <log id="_log29" message="((((${body}))))"/>
                        </otherwise>
                    </choice>
                </otherwise>
            </choice>
            <log id="_log30" loggingLevel="ERROR" message="FLUJO COOPEUCH - ERROR AL VALIDAR EN ADMINISTRADORIDG"/>
            <stop id="_stop9"/>
        </route>
        <!-- ************************* IS_ENROLLED  RESPONSE ********************** -->
        <!-- En esta ruta se implementara la logica para la respuesta de IsEnrolled -->
        <route id="Route-AuthType">
            <from id="_from5" uri="direct:responseIsEnrolled"/>
            <choice id="_choice8">
                <when id="_when12">
                    <simple>${property.Interfaz} == ''</simple>
                    <setProperty id="_setProperty51" propertyName="ACS_INTERFACE">
                        <simple>HTML_UI</simple>
                    </setProperty>
                </when>
                <when id="_when13">
                    <simple>${property.Interfaz} == 'BOTH'</simple>
                    <setProperty id="_setProperty52" propertyName="ACS_INTERFACE">
                        <simple>HTML_UI</simple>
                    </setProperty>
                </when>
                <otherwise id="_otherwise8">
                    <setProperty id="_setProperty53" propertyName="ACS_INTERFACE">
                        <simple>${property.Interfaz}_UI</simple>
                    </setProperty>
                </otherwise>
            </choice>
            <setProperty id="_setProperty54" propertyName="ACS_UI_TEMPLATE">
                <simple>TEXT</simple>
            </setProperty>
            <removeHeader headerName="consultaTarjetas" id="_removeHeader2"/>
            <bean id="respuestaExitosaEnrolled"
                method="ResponseEnrolamiento" ref="beanRouteFacade"/>
            <log id="_log31" message="RESPONSE ENROLAMIENTO - ${body}"/>
            <setProperty id="_setProperty55" propertyName="bodyResponse">
                <simple>${body}</simple>
            </setProperty>
            <setHeader headerName="idTX" id="_setHeader10">
                <simple>${property.idTX}</simple>
            </setHeader>
            <setProperty id="_setProperty56" propertyName="idTX">
                <simple>${property.idTX}</simple>
            </setProperty>
            <setHeader headerName="rut" id="_setHeader11">
                <simple>${property.RUT}</simple>
            </setHeader>
            <setHeader headerName="tipoAutenticacion" id="_setHeader12">
                <simple>${body.getAuthDate()}</simple>
            </setHeader>
            <setHeader headerName="tipoInterfaz" id="_setHeader13">
                <simple>${property.Interfaz}</simple>
            </setHeader>
            <setHeader headerName="tipoUI" id="_setHeader14">
                <simple>${body.getAcsUiTemplate()}</simple>
            </setHeader>
            <log id="_log88" loggingLevel="INFO" message="Reintentos: ${property.cantidadReintentos}"/>
            <log loggingLevel="INFO" message="estadoMetodoAutenticacion: ${property.estadoMetodoAutenticacion}"/>
            <!--  <log loggingLevel="INFO" message="Usuario: ${property.usuarioCambio}"/>-->
            <to id="_to15" uri="sql-stored:classpath:sql/pa_insParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePAInsercion"/>
            <removeHeaders id="_removeHeaders11" pattern="rut|tipoAutenticacion|tipoInterfaz|tipoUI|idTX"/>
            <setProperty id="_setProperty57" propertyName="codigo">
                <simple>{{coopeuch.ws3ds.codigoError.ws3dsExitoso}}</simple>
            </setProperty>
            <setProperty id="_setProperty58" propertyName="descripcion">
                <simple>{{coopeuch.ws3ds.descripcionError.cod0}}</simple>
            </setProperty>
            <to id="_to16" uri="sql-stored:classpath:sql/pa_insAUDEnrolamiento.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
            <log id="_log32" message="((((${body}))))"/>
            <removeHeaders id="_removeHeaders12" pattern="responsePA|responsePAInsercion"/>
            <stop id="_stop10"/>
        </route>
        <!-- ******************************************************************************* -->
        <!-- ********************************** RBA_FILTER********************************** -->
        <!-- ******************************************************************************* -->
        <route id="rbaFilter">
            <!-- <marshal> -->
            <!-- <json library="Jackson" /> -->
            <!-- </marshal> -->
            <!-- <convertBodyTo type="java.lang.String"/> -->
            <from id="_from6" uri="direct:rbaFilter"/>
            <setBody id="_setBody2">
                <simple>{
			    "SCORE": "20",
			    "TX_STATUS": "C"
			}
			</simple>
            </setBody>
            <log id="_log33" message="((((${body}))))"/>
            <stop id="_stop11"/>
        </route>
        <!-- ******************************************************************************* -->
        <!-- ******************************* GET_CHALLENGE********************************** -->
        <!-- ******************************************************************************* -->
        <route errorHandlerRef="noErrorHandler" id="getChallenge" streamCache="true">
            <from id="_from1" uri="direct:getChallenge"/>
            <setProperty id="_setProperty59" propertyName="idTX">
                <simple>${body.getAcsTxId()}</simple>
            </setProperty>
            <setProperty id="_setProperty60" propertyName="currency">
                <simple>${body.getPurchaseCurrency()}</simple>
            </setProperty>
            <setProperty id="_setProperty61" propertyName="exponent">
                <simple>${body.getPurchaseExponent()}</simple>
            </setProperty>
            <setProperty id="_setProperty62" propertyName="monto">
                <simple>${body.getPurchaseAmount()}</simple>
            </setProperty>
            <setProperty id="_setProperty63" propertyName="comercio">
                <simple>${body.getMerchantName()}</simple>
            </setProperty>
            <setProperty id="_setProperty64" propertyName="franquicia">
                <simple>${body.getRequestorName()}</simple>
            </setProperty>
            <setProperty id="_setProperty65" propertyName="fechaHoy">
                <simple>${date:now:dd-MM-yyyy}</simple>
            </setProperty>
            <setProperty id="_setProperty66" propertyName="url">
                <simple>${body.getAcsChallengeUrl()}</simple>
            </setProperty>
            <setProperty id="_setProperty67" propertyName="IdTrxDS">
                <constant/>
            </setProperty>
            <!-- data extra para dale -->
            <setProperty id="_setPropertyBDDale01" propertyName="purchaseId">
                <simple>${body.getPurchaseXid()}</simple>
            </setProperty>
            <setProperty id="_setPropertyBDDale02" propertyName="requestorId">
                <simple>${body.getRequestorId()}</simple>
            </setProperty>
            <setProperty id="_setPropertyBDDale03" propertyName="merchantId">
                <simple>${body.getMerchantId()}</simple>
            </setProperty>
            <setProperty id="_setPropertyBDDale04" propertyName="merchantCountry">
                <simple>${body.getMerchantCountry()}</simple>
            </setProperty>
            <setProperty id="_setPropertyBDDale05" propertyName="merchantUrl">
                <simple>${body.getMerchantUrl()}</simple>
            </setProperty>
            <setProperty id="_setPropertyBDDale06" propertyName="acquirerBin">
                <simple>${body.getAcquirerBin()}</simple>
            </setProperty>
            <!-- data extra para dale -->
            <bean id="_bean9" method="mapeoMoneda" ref="beanRouteFacade"/>
            <marshal id="_marshal5">
                <json library="Jackson"/>
            </marshal>
            <log id="_log34" message="((${body}))"/>
            <to id="_to17" uri="sql-stored:classpath:sql/pa_selParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=consultarParametrosAut"/>
            <bean id="_bean10"
                method="procesarPaConsultarParametrosAutenticacion" ref="beanRouteFacade"/>
            <!-- Identificacion de factor de autenticacion -->
            <removeHeader headerName="consultarParametrosAut" id="_removeHeader3"/>
            <bean method="darFormatoCamposResumenPago" ref="beanRouteFacade"/>
            <choice id="_choice9">
                <!-- Flujo get_challenge para seleccion de Metodo de Autorizacion -->
                <when id="_when14">
                    <simple>${property.factorAutenticacion} == 'Seleccionar Factor'</simple>
                    <setProperty propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsSeleccionarFactor}}</simple>
                    </setProperty>
                    <setProperty propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionMensaje.cod9}}</simple>
                    </setProperty>
                    <to id="_to18" uri="velocity:etc/xsl/response/MetodosDeAutorizacion.vm"/>
                </when>
                <!-- Flujo get_challenge para PassCoopeuch -->
                <when id="_when15">
                    <simple>${property.factorAutenticacion} == 'PassCoopeuch'</simple>
                    <setProperty propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsPassCoopeuch}}</simple>
                    </setProperty>
                    <setProperty propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionMensaje.cod4}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty68" propertyName="pago">
                        <simple>CoopeuchPass</simple>
                    </setProperty>
                    <setProperty id="_setProperty69" propertyName="canalLlamada">
                        <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty70" propertyName="userId">
                        <simple>{{coopeuch.ws3ds.userId}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty71" propertyName="rut">
                        <simple>${property.RUT}</simple>
                    </setProperty>
                    <setProperty id="_setProperty72" propertyName="operacionId">
                        <simple>{{coopeuch.ws3ds.operacionId}}</simple>
                    </setProperty>
                    <to id="_to19" uri="velocity:etc/xsl/response/requestSoftTokenGenerar.vm"/>
                    <removeHeaders id="_removeHeaders13" pattern="*"/>
                    <setHeader headerName="Content-Type" id="_setHeader15">
                        <constant>application/json</constant>
                    </setHeader>
                    <setHeader headerName="CamelHttpMethod" id="_setHeader16">
                        <constant>POST</constant>
                    </setHeader>
                    <to id="_to20" uri="cxfrs:bean:endpointSoftTokenGenerar"/>
                    <convertBodyTo id="_convertBodyTo8" type="java.lang.String"/>
                    <setProperty id="_setProperty73" propertyName="codigoSoftToken">
                        <jsonpath resultType="String">$..codigo</jsonpath>
                    </setProperty>
                    <choice id="_choice10">
                        <!-- NATIVE - OOB  -->
                        <when id="_when16">
                            <simple>${property.TIPOINTERFAZ} == 'NATIVE'</simple>
                            <setProperty id="_setProperty74" propertyName="IssuerImageMedium">
                                <simple>{{coopeuch.ws3ds.IssuerImageMedium}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty75" propertyName="IssuerImageHigh">
                                <simple>{{coopeuch.ws3ds.IssuerImageHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty76" propertyName="IssuerImageExtraHigh">
                                <simple>{{coopeuch.ws3ds.IssuerImageExtraHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty77" propertyName="BrandImageMedium">
                                <simple>{{coopeuch.ws3ds.BrandImageMedium}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty78" propertyName="BrandImageHigh">
                                <simple>{{coopeuch.ws3ds.BrandImageHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty79" propertyName="BrandImageExtraHigh">
                                <simple>{{coopeuch.ws3ds.BrandImageExtraHigh}}</simple>
                            </setProperty>
                            <to id="_to21" uri="velocity:etc/xsl/response/ResponseNativeOOB.vm"/>
                            <stop id="_stop12"/>
                        </when>
                        <otherwise id="_otherwise4">
                            <to id="_to22" uri="velocity:etc/xsl/response/PassCoopeuch.vm"/>
                        </otherwise>
                    </choice>
                </when>
                <!-- Flujo get_challenge para Dale Pass -->
                <when id="_when17">
                    <simple>${property.factorAutenticacion} == 'OTP Dale'</simple>
                    <setProperty id="_setProperty80" propertyName="pago">
                        <simple>CoopeuchPass</simple>
                    </setProperty>
                    <setProperty id="_setProperty81" propertyName="canalLlamada">
                        <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty82" propertyName="userId">
                        <simple>{{coopeuch.ws3ds.userId}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty83" propertyName="rut">
                        <simple>${property.RUT}</simple>
                    </setProperty>
                    <setProperty id="_setProperty84" propertyName="operacionId">
                        <simple>{{coopeuch.ws3ds.operacionId}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty85" propertyName="binDale">
                        <simple>{{coopeuch.ws3ds.binDale}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty86" propertyName="bin">
                        <simple>${property.numeroTarjeta.substring(0,6)}</simple>
                    </setProperty>
                    
                    <!-- Bifurcacion Flujos Dale | Coopeuch para GetChallenge -->
                    <choice id="_choiceBinTarjeta2">
                        <!-- *************************************************** -->
                        <!-- ******** INICIO FLUJO GET_CHALLENGE DALE ********** -->
                        <!-- *************************************************** -->
                        <when id="_whenIsBinDale2">       
                            <simple>${property.bin} == {{coopeuch.ws3ds.binDale}}</simple>
                            <log id="_logGetChallengeCoopeuch-Dale" loggingLevel="INFO" message="*** INICIA GET CHALLENGE DALE ***"/>
                            <log id="_logGetChallengeDale3" loggingLevel= "INFO" message="VALIDACION EXITOSA :: TARJETA INGRESADA ES DALE***"/>
                            <setProperty id="_setPropertyGetChallengeDale1" propertyName="acsTxId_dale">
                                <simple>${property.idTX}</simple>
                            </setProperty>                                             
                            <!--  Logica Consulta Data API DALE 2do transaccion3DS Consultar  -->
                            <log id="_logGetChallengeDale4" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Consultar"/>
                            <doTry>
                                <removeHeaders id="_removeHeadersGetChallengeDale1" pattern="*"/>     
                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderGetChallengeDale1">
                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.value}}</constant>
                                </setHeader>
                                <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale2">
                                    <constant>application/json</constant>
                                </setHeader>
                                <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale3">
                                    <constant>GET</constant>
                                </setHeader>
                                <setHeader headerName="CamelHttpPath" id="_setHeaderGetChallengeDale4">
                                    <simple>${property.acsTxId_dale}</simple>
                                </setHeader>
                                <to id="restMsSegundoFactorTransaccion3dsConsultar1" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsConsultar"/>
                                <setProperty id="_setPropertyGetChallengeDale2" propertyName="loginDale">
                                    <jsonpath resultType="String">$.loginDale</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyGetChallengeDale3" propertyName="rutCliente_Dale">
                                    <jsonpath resultType="String">$.rutCliente</jsonpath>
                                </setProperty>
                                <log id="_logGetChallengeDale6" loggingLevel = "INFO" message="2FA Transaccion3DS Consultar :: DATA CONSULTADA EXITOSAMENTE"/>
                            <doCatch>
                                <exception>java.lang.Exception</exception>
                                <log id="_logGetChallengeDale7" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Consultar"/>
                            </doCatch>
                            </doTry>
                            <!-- Bifurcacion flujo loginDale = false  ** Flujo Login Dale|| loginDale = true  ** Flujo OTP Dale -->
                            <choice id="_choiceLoginDale">
                                <!-- Inicia flujo Login Dale HTML -->
                                <when id="_whenLoginDale">
                                    <simple>${property.loginDale} == false</simple>
                                    <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                    <log id="_logGetChallengeDale8" loggingLevel= "INFO" message="*** FLUJO LOGIN DALE GET CHALLENGE***"/>
                                    <log id="_logGetChallengeDale9" loggingLevel= "INFO" message="*** Consumo API DALE - 2FA Transaccion 3DS Guardar  ***"/>
                                    <doTry>
                                        <removeHeaders id="_removeHeadersGetChallengeDale2" pattern="*"/>     
                                        <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderGetChallengeDale5">
                                            <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                        </setHeader>
                                        <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale6">
                                            <constant>application/json</constant>
                                        </setHeader>
                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale7">
                                            <constant>POST</constant>
                                        </setHeader>
                                        <setBody id="_setBodyGetChallengeDale1">
                                            <simple>{
                                                    "acsTxId": "${property.acsTxId_dale}",
                                                    "merchantUrl": "${property.merchantUrl}", 
                                                    "purchaseAmount": "${property.monto}",
                                                    "purchaseXid": "${property.purchaseId}",
                                                    "purchaseCurrency": "${property.currency}",
                                                    "purchaseExponent": "${property.exponent}",
                                                    "requestId": "${property.requestorId}",
                                                    "requestName": "${property.franquicia}",
                                                    "merchantId": "${property.merchantId}",
                                                    "merchantName": "${property.comercio}",
                                                    "merchantCountry": "${property.merchantCountry}"
                                                    }
                                            </simple>
                                        </setBody>
                                        <to id="restMsSegundoFactorTransaccion3dsGuardar2" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                        <log id="_logGetChallengeDale10" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                    <doCatch>
                                        <exception>java.lang.Exception</exception>
                                        <log id="_logGetChallengeDale11" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                    </doCatch>
                                    </doTry>  
                                    <!-- Se Genera HTML de LOGIN DALE -->
                                    <log id="_logGetChallengeDale12" loggingLevel= "INFO" message="GENERA BASE64 HTML LOGIN DALE"/>
                                    <to id="_toGetChallengeDale1" uri="velocity:etc/xsl/response/daleLoginHTML.vm"/>
                                    <bean id="responseGetChallenge"
                                        method="responseGetChallenge" ref="beanRouteFacade"/>
                                    <stop id="_stopGetChallengeDale1"/>
                                </when>
                                <!-- Flujo OTP Dale -->
                                <otherwise id="_otherwiseLoginDale">
                                    <log id="_logGetChallengeDale88" loggingLevel= "INFO" message="FLUJO OTP DALE GET CHALLENGE"/>
                                    <!-- Consultar que dispositivo tiene habilitado como 2FA el usuario (DalePass o GoogleAuth) -->
                                    <!-- Consumo API DALE - 2FA Dispositivos Obtener -->
                                    <log id="_logGetChallengeDale14" loggingLevel= "INFO" message="CONSUMO API DALE :: 2FA Dispositivos Obtener"/>
                                    <doTry>
                                        <removeHeaders id="_removeHeadersGetChallengeDale3" pattern="*"/>     
                                        <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderGetChallengeDale8">
                                            <constant>{{amazon.aws.endpoint.ms2fa.dispositivos.obtener.apikey.value}}</constant>
                                        </setHeader>
                                        <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale9">
                                            <constant>application/json</constant>
                                        </setHeader>
                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale10">
                                            <constant>GET</constant>
                                        </setHeader>
                                        <setHeader headerName="CamelHttpPath" id="_setHeaderGetChallengeDale11">
                                            <simple>${property.rutCliente_Dale}</simple>
                                        </setHeader>
                                        <to id="restMsSegundoFactorDispositivosObtener1" uri="cxfrs://bean://restMsSegundoFactorDispositivosObtener"/>
                                        <setProperty id="_setPropertyGetChallengeDale4" propertyName="dalepass">
                                            <jsonpath resultType="String">$.dalepass.habilitado</jsonpath>
                                        </setProperty>
                                        <setProperty id="_setPropertyGetChallengeDale5" propertyName="googleAuth">
                                            <jsonpath resultType="String">$.google-auth.habilitado</jsonpath>
                                        </setProperty>
                                        <log id="_logGetChallengeDale17" loggingLevel = "INFO" message="2FA Dispositivos Obtener :: DATA CONSULTADA EXITOSAMENTE"/>
                                    <doCatch>
                                        <exception>java.lang.Exception</exception>
                                        <log id="_logGetChallengeDale18" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Dispositivos Obtener"/>
                                    </doCatch>
                                    </doTry>
                                     <!-- bufurcacion segun el tipo de OTP Dale -->
                                    <choice id="_choiceOTPDale">
                                    <!-- Flujo GetChallenge OTP Dale - DalePass -->
                                        <when id="_whenOTPDale">
                                            <simple>${property.dalepass} == true</simple>
                                            <!-- Guarda tipo OTP dale en BD -->
                                            <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                            <log id="_logGetChallengeDale19" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                            <doTry>
                                                <removeHeaders id="_removeHeadersGetChallengeDale4" pattern="*"/>     
                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderGetChallengeDale12">
                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                </setHeader>
                                                <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale13">
                                                    <constant>application/json</constant>
                                                </setHeader>
                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale14">
                                                    <constant>POST</constant>
                                                </setHeader>
                                                <setBody id="_setBodyGetChallengeDale2">
                                                    <simple>{
                                                            "acsTxId": "${property.acsTxId_dale}",
                                                            "daleOtp": "dalepass"
                                                            }
                                                    </simple>
                                                </setBody>
                                                <to id="restMsSegundoFactorTransaccion3dsGuardar15" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                <log id="_logGetChallengeDale20" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                            <doCatch>
                                                <exception>java.lang.Exception</exception>
                                                <log id="_logGetChallengeDale21" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                            </doCatch>
                                            </doTry>
                                            <!--  Logica Consulta Data API DALE 2do transaccion3DS Consultar  -->
                                            <log id="_logGetChallengeDale31" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Consultar"/>
                                            <doTry>
                                                <removeHeaders id="_removeHeadersGetChallengeDale8" pattern="*"/>     
                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderGetChallengeDale20">
                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.value}}</constant>
                                                </setHeader>
                                                <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale21">
                                                    <constant>application/json</constant>
                                                </setHeader>
                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale22">
                                                    <constant>GET</constant>
                                                </setHeader>
                                                <setHeader headerName="CamelHttpPath" id="_setHeaderGetChallengeDale23">
                                                    <simple>${property.acsTxId_dale}</simple>
                                                </setHeader>
                                                <to id="restMsSegundoFactorTransaccion3dsConsultar4" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsConsultar"/>
                                                <setProperty id="_setPropertyGetChallengeDale11" propertyName="loginDale2">
                                                    <jsonpath resultType="String">$.loginDale</jsonpath>
                                                </setProperty>
                                                <setProperty id="_setPropertyGetChallengeDale12" propertyName="rutCliente_Dale2">
                                                    <jsonpath resultType="String">$.rutCliente</jsonpath>
                                                </setProperty>
                                                <setProperty id="_setPropertyGetChallengeDale13" propertyName="token_Dale2">
                                                    <jsonpath resultType="String">$.token</jsonpath>
                                                </setProperty>
                                                <setProperty id="_setPropertyGetChallengeDale14" propertyName="daleOtp_Dale2">
                                                    <jsonpath resultType="String">$.daleOtp</jsonpath>
                                                </setProperty>
                                                <setProperty id="_setPropertyGetChallengeDale15" propertyName="purchaseAmount_Dale2">
                                                    <jsonpath resultType="String">$.purchaseAmount</jsonpath>
                                                </setProperty>
                                                <setProperty id="_setPropertyGetChallengeDale16" propertyName="merchantName_Dale2">
                                                    <jsonpath resultType="String">$.merchantName</jsonpath>
                                                </setProperty>
                                                <log id="_logGetChallengeDale32" loggingLevel = "INFO" message="2FA Transaccion3DS Consultar :: DATA CONSULTADA EXITOSAMENTE"/>
                                            <doCatch>
                                                <exception>java.lang.Exception</exception>
                                                <log id="_logGetChallengeDale33" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Consultar"/>
                                            </doCatch>
                                            </doTry>
                                            <log id="_logGetChallengeDale34" loggingLevel= "INFO" message="Consumo API DALE - 2FA Estado Iniciar"/>
                                            <doTry>
                                                <removeHeaders id="_removeHeadersGetChallengeDale9" pattern="*"/>     
                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.estado.iniciar.apikey.header}}" id="_setHeaderDoChallengeDale24">
                                                    <constant>{{amazon.aws.endpoint.ms2fa.estado.iniciar.apikey.value}}</constant>
                                                </setHeader>
                                                <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale25">
                                                    <constant>application/json</constant>
                                                </setHeader>
                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale26">
                                                    <constant>POST</constant>
                                                </setHeader>
                                                <setBody id="_setBodyGetChallengeDale4">
                                                    <simple>{
                                                            "rut": "${property.rutCliente_Dale2}",
                                                            "tipoAutorizador": "${property.daleOtp_Dale2}", 
                                                            "canal": "web",
                                                            "descripcion": "Autorización Transferencia 3DS",
                                                            "origen": "3DS",
                                                            "trackId": "${property.acsTxId_dale}",
                                                            "transaccion": {
                                                                "monto": "${property.purchaseAmount_Dale2}",
                                                                "descripcion": "${property.merchantName_Dale2}",
                                                                "token": "${property.token_Dale2}"
                                                                }
                                                            }
                                                    </simple>
                                                </setBody>
                                                <to id="restMsSegundoFactorEstadoIniciar1" uri="cxfrs://bean://restMsSegundoFactorEstadoIniciar"/>
                                                <setProperty id="_setPropertyGetChallengeDale15" propertyName="statusCodeVerificar">
                                                        <simple>${header.CamelHttpResponseCode}</simple>
                                                </setProperty>
                                                <log id="_logGetChallengeDale35" loggingLevel = "INFO" message="2FA Estado Iniciar :: NOTIFICACION ENVIADA A DISPOSITIVO"/>
                                            <doCatch>
                                                <exception>java.lang.Exception</exception>
                                                <log id="_logGetChallengeDale36" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Estado Iniciar"/>
                                            </doCatch>
                                            </doTry>
                                            <log id="_logGetChallengeDale23" loggingLevel= "INFO" message="GENERA BASE64 HTML DALEPASS"/>
                                            <to id="_toGetChallengeDale2" uri="velocity:etc/xsl/response/daleDalePassHTML.vm"/>
                                            <bean id="responseGetChallenge"
                                                method="responseGetChallenge" ref="beanRouteFacade"/>
                                            <setProperty id="_setPropertyGetChallengeDale6" propertyName="codigo">
                                            <!-- Registro Tablas Generales 3DS -->
                                            <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsTarjetaDale}}</simple>
                                            </setProperty>
                                            <setProperty id="_setPropertyGetChallengeDale7" propertyName="descripcion">
                                                <simple>{{coopeuch.ws3ds.descripcionMensaje.cod10}}</simple>
                                            </setProperty>
                                            <to id="_toGetChallengeDale3" uri="sql-stored:classpath:sql/pa_updateParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=updateParametrosAut"/>
                                            <log id="_logGetChallengeDale24" loggingLevel= "INFO" message="DATA REGISTRADA EXITOSAMENTE EN BD 3DS"/>
                                            <removeHeaders id="_removeHeadersGetChallengeDale5" pattern="responsePA"/>
                                            <stop id="_stopGetChallengeDale2"/>
                                        </when>
                                        <!-- Flujo GetChallenge OTP Dale - GoogleAuth -->
                                        <otherwise id="_otherwiseOTPDale">
                                            <!-- Guarda tipo OTP dale en BD -->
                                            <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                            <log id="_logGetChallengeDale25" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                            <doTry>
                                                <removeHeaders id="_removeHeadersGetChallengeDale6" pattern="*"/>     
                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderGetChallengeDale15">
                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                </setHeader>
                                                <setHeader headerName="Content-Type" id="_setHeaderGetChallengeDale16">
                                                    <constant>application/json</constant>
                                                </setHeader>
                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderGetChallengeDale17">
                                                    <constant>POST</constant>
                                                </setHeader>
                                                <setBody id="_setBodyGetChallengeDale3">
                                                    <simple>{
                                                            "acsTxId": "${property.acsTxId_dale}",
                                                            "daleOtp": "googleauth"
                                                            }
                                                    </simple>
                                                </setBody>
                                                <to id="restMsSegundoFactorTransaccion3dsGuardar4" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                <log id="_logGetChallengeDale26" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                            <doCatch>
                                                <exception>java.lang.Exception</exception>
                                                <log id="_logGetChallengeDale27" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                            </doCatch>
                                            </doTry>
                                            <log id="_logGetChallengeDale29" loggingLevel= "INFO" message="GENERA BASE64 HTML GOOGLE AUTH"/>
                                            <to id="_toGetChallengeDale4" uri="velocity:etc/xsl/response/daleGoogleAuthHTML.vm"/>
                                            <bean id="responseGetChallenge"
                                                method="responseGetChallenge" ref="beanRouteFacade"/>
                                            <!-- Registro Tablas Generales 3DS -->
                                            <setProperty id="_setPropertyGetChallengeDale8" propertyName="codigo">
                                            <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsTarjetaDale}}</simple>
                                            </setProperty>
                                            <setProperty id="_setPropertyGetChallengeDale9" propertyName="descripcion">
                                                <simple>{{coopeuch.ws3ds.descripcionMensaje.cod10}}</simple>
                                            </setProperty>
                                            <to id="_toGetChallengeDale5" uri="sql-stored:classpath:sql/pa_updateParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=updateParametrosAut"/>
                                            <log id="_logGetChallengeDale30" loggingLevel= "INFO" message="DATA REGISTRADA EXITOSAMENTE EN BD 3DS"/>
                                            <removeHeaders id="_removeHeadersGetChallengeDale7" pattern="responsePA"/>
                                            <stop id="_stopGetChallengeDale3"/>
                                        </otherwise>
                                    </choice>
                                </otherwise>
                            </choice>
                        </when>
                    </choice>
                    <!-- *************************************************** -->
                    <!-- ******** FIN FLUJO GET_CHALLENGE DALE ********** -->
                    <!-- *************************************************** -->
                </when>
                <!-- Flujo get_challenge para Tarjeta de Coordenadas -->
                <when id="_when18">
                    <simple>${property.factorAutenticacion} == 'Tarjeta de Coordenadas'</simple>
                    <setProperty propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsTarjetaCoordenadas}}</simple>
                    </setProperty>
                    <setProperty propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionMensaje.cod5}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty89" propertyName="pago">
                        <simple>TarjetaCoordenadas</simple>
                    </setProperty>
                    <bean id="_bean12"
                        method="wsDesafioSolicitarDesafio" ref="beanRouteFacade"/>
                    <marshal id="_marshal6">
                        <json library="Jackson"/>
                    </marshal>
                    <convertBodyTo id="_convertBodyTo9" type="java.lang.String"/>
                    <removeHeaders id="_removeHeaders15" pattern="*"/>
                    <setHeader headerName="Content-Type" id="_setHeader17">
                        <constant>application/json</constant>
                    </setHeader>
                    <setHeader headerName="CamelHttpMethod" id="_setHeader18">
                        <constant>POST</constant>
                    </setHeader>
                    <to id="_to26" uri="cxfrs:bean:endpointDesafioSolicitarDesafio"/>
                    <convertBodyTo id="_convertBodyTo10" type="java.lang.String"/>
                    <choice id="_choice11">
                        <!-- NATIVE - STATIC  -->
                        <when id="_when19">
                            <simple>${property.TIPOINTERFAZ} == 'NATIVE'</simple>
                            <setProperty id="_setProperty90" propertyName="coordenada1">
                                <jsonpath resultType="String">$.desafio1</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty91" propertyName="coordenada2">
                                <jsonpath resultType="String">$.desafio2</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty92" propertyName="coordenada3">
                                <jsonpath resultType="String">$.desafio3</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty93" propertyName="IssuerImageMedium">
                                <simple>{{coopeuch.ws3ds.IssuerImageMedium}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty94" propertyName="IssuerImageHigh">
                                <simple>{{coopeuch.ws3ds.IssuerImageHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty95" propertyName="IssuerImageExtraHigh">
                                <simple>{{coopeuch.ws3ds.IssuerImageExtraHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty96" propertyName="BrandImageMedium">
                                <simple>{{coopeuch.ws3ds.BrandImageMedium}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty97" propertyName="BrandImageHigh">
                                <simple>{{coopeuch.ws3ds.BrandImageHigh}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty98" propertyName="BrandImageExtraHigh">
                                <simple>{{coopeuch.ws3ds.BrandImageExtraHigh}}</simple>
                            </setProperty>
                            <to id="_to27" uri="velocity:etc/xsl/response/ResponseNativeSTATIC.vm"/>
                            <stop id="_stop14"/>
                        </when>
                        <otherwise id="_otherwise9">
                            <setProperty id="_setProperty99" propertyName="coordenada1">
                                <jsonpath resultType="String">$.desafio1</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty100" propertyName="coordenada2">
                                <jsonpath resultType="String">$.desafio2</jsonpath>
                            </setProperty>
                            <setProperty id="_setProperty101" propertyName="coordenada3">
                                <jsonpath resultType="String">$.desafio3</jsonpath>
                            </setProperty>
                            <to id="_to28" uri="velocity:etc/xsl/response/TarjetaCoordenadas.vm"/>
                        </otherwise>
                    </choice>
                </when>
                <!-- Flujo get_challenge para OTP SMS -->
                <when id="_when20">
                    <simple>${property.factorAutenticacion} == 'OTP SMS'</simple>
                    <setProperty propertyName="codigo">
                        <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsOTPSMS}}</simple>
                    </setProperty>
                    <setProperty propertyName="descripcion">
                        <simple>{{coopeuch.ws3ds.descripcionMensaje.cod8}}</simple>
                    </setProperty>
                    <setProperty id="_setProperty102" propertyName="pago">
                        <simple>CoopeuchPass</simple>
                    </setProperty>
                    <setProperty id="_setProperty103" propertyName="rut">
                        <simple>${property.RUT}</simple>
                    </setProperty>
                    <to id="_to29" uri="velocity:etc/xsl/response/requestServicioTercerFactorSolicitar.vm"/>
                    <removeHeaders id="_removeHeaders16" pattern="*"/>
                    <setHeader headerName="Content-Type" id="_setHeader19">
                        <constant>application/json</constant>
                    </setHeader>
                    <setHeader headerName="CamelHttpMethod" id="_setHeader20">
                        <constant>POST</constant>
                    </setHeader>
                    <to id="_to30" uri="cxfrs:bean:endpointServicioTercerFactorSolicitar"/>
                    <convertBodyTo id="_convertBodyTo11" type="java.lang.String"/>
                    <setProperty id="_setProperty104" propertyName="codigoTercerFactor">
                        <jsonpath resultType="String">$..otp</jsonpath>
                    </setProperty>
                    <to id="_to31" uri="velocity:etc/xsl/response/OTPSMS.vm"/>
                </when>
                <otherwise id="_otherwise10">
                    <throwException
                        exceptionType="cl.coopeuch.integracion.tresds.exceptions.ProcedureExcepcion"
                        id="_throwException1" message="El id de transacción ${property.idTX} no se encuentra registrado o el tiempo de registro supero 3 minutos."/>
                    <marshal id="_marshal7">
                        <json library="Jackson"/>
                    </marshal>
                    <log id="_log36" message="((((${body}))))"/>
                    <stop id="_stop15"/>
                </otherwise>
            </choice>
            <to uri="sql-stored:classpath:sql/pa_updateParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=updateParametrosAut"/>
            <to uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoGetChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
            <bean method="responseGetChallenge" ref="beanRouteFacade"/>
            <stop/>
        </route>
        <!-- ******************************************************************************* -->
        <!-- ********************************** DO_CHALLENGE ******************************* -->
        <!-- ******************************************************************************* -->
        <route id="doChallengePOST">
            <from id="_from8" uri="direct:doChallengePOST"/>
            <to id="_to33" uri="direct:doChallenge"/>
        </route>
        <route errorHandlerRef="noErrorHandler" id="doChallenge" streamCache="true">
            <!-- Nueva forma de filtrar desafios -->
            <from id="_from9" uri="direct:doChallenge"/>
            <!-- Fin Split para nuevos desafios -->
            <choice id="_choice13">
                <when id="_when24">
                    <simple>${property.operacion} == 'doChallengePOST'</simple>
                    <setProperty id="_setProperty121" propertyName="values">
                        <simple>${body.getValues()}</simple>
                    </setProperty>
                    <setProperty id="_setProperty122" propertyName="idTX">
                        <simple>${body.getAcsTxId()}</simple>
                    </setProperty>
                </when>
                <otherwise id="_otherwise12">
                    <!-- <stop/> -->
                    <bean id="captureParam" method="captureParam" ref="beanRouteFacade"/>
                    <setProperty id="_setProperty123" propertyName="values">
                        <simple>${property.Values}</simple>
                    </setProperty>
                    <setProperty id="_setProperty124" propertyName="idTX">
                        <simple>${property.Transaccion}</simple>
                    </setProperty>
                </otherwise>
            </choice>
            <marshal id="_marshal10">
                <json library="Jackson"/>
            </marshal>
            <to id="_to34" uri="sql-stored:classpath:sql/pa_selParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=consultarParametrosAut"/>
            <bean id="consultarPaDochallenge"
                method="procesarPaConsultarParametrosAutenticacion" ref="beanRouteFacade"/>
            <removeHeader headerName="consultarParametrosAut" id="_removeHeader4"/>
            <setProperty id="_setProperty125" propertyName="accountNumber">
                <simple>${property.numeroTarjeta}</simple>
            </setProperty>
            <setProperty id="_setProperty126" propertyName="CODIGO">
                <simple>${property.values}</simple>
            </setProperty>
            <!-- <setProperty propertyName="respuesta"><jsonpath resultType="String">$.mensaje</jsonpath></setProperty> -->
            <!-- <setProperty propertyName="respuesta"><jsonpath resultType="String">$.mensaje</jsonpath></setProperty> -->
            <setProperty id="_setProperty127" propertyName="RUT">
                <simple>${property.RUT}</simple>
            </setProperty>
            <setProperty id="_setProperty128" propertyName="binAccountNumber">
                <simple>${property.accountNumber.substring(0,6)}</simple>
            </setProperty>
            <setProperty id="_setProperty129" propertyName="binDale">
                <simple>{{coopeuch.ws3ds.binDale}}</simple>
            </setProperty>
            <setProperty id="_setProperty130" propertyName="Aumento">
                <simple>Antes</simple>
            </setProperty>
            <bean id="EstablecerReintentos"
                method="restablecerReintentos" ref="beanRouteFacade"/>
            <setProperty id="_setProperty131" propertyName="Aumento">
                <simple>Despues</simple>
            </setProperty>
            <choice id="_choice23">
                <!-- DO CHALLENGE **PASS COOPEUCH**  **DALE** -->
                <when id="_when41">
                    <simple>${property.TIPOAUTENTICACION} == 'OOB'</simple>
                    <choice id="_choice24">

                   <!-- *************************************************** -->
                    <!-- ******** INICIO FLUJO DO_CHALLENGE DALE ********** -->
                    <!-- *************************************************** -->
                        <when id="_whenIsBinDale3">                        
                            <simple>${property.binAccountNumber} == ${property.binDale}</simple>
                            <log id="_logDoChallengeDale0" loggingLevel= "INFO" message="*** INICIO FLUJO DO CHALLENGE DALE ***"/>
                            <log id="_logDoChallengeDale4" loggingLevel= "INFO" message="VALIDACION EXITOSA :: TARJETA INGRESADA ES DALE***"/>       
                            <setProperty id="_setPropertyDoChallengeDale1" propertyName="doAcsTxId_dale">
                                <simple>${property.idTX}</simple>
                            </setProperty>
                            <setProperty id="_setPropertyDoChallengeDale2" propertyName="doValues_dale">
                                <simple>${property.values}</simple>
                            </setProperty>
                            <!-- substring para values -->
                            <setProperty id="_setPropertyDoChallengeDale2" propertyName="subDoValues_daleLogin">
                                <simple>${property.values.replaceAll('.*?=(.*?)&amp;', '$1')}</simple>
                            </setProperty>
                            <setProperty id="_setPropertyDoChallengeDale2" propertyName="subDoValues_dalePass">
                                <simple>${property.values.replaceAll('.*?=(.*?)&amp;', '$1')}</simple>
                            </setProperty>
                            <setProperty id="_setPropertyDoChallengeDale2" propertyName="subDoValues_daleGoogleAuth">
                                <simple>${property.values.replaceAll('.*?=(.*?)&amp;', '$1')}</simple>
                            </setProperty>
                            <!--  Logica Consulta Data API DALE 2do transaccion3DS Consultar  -->
                            <log id="_logDoChallengeDale7" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Consultar"/>
                            <doTry>
                                <removeHeaders id="_removeHeadersDoChallengeDale1" pattern="*"/>     
                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderDoChallengeDale1">
                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.value}}</constant>
                                </setHeader>
                                <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale2">
                                    <constant>application/json</constant>
                                </setHeader>
                                <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale3">
                                    <constant>GET</constant>
                                </setHeader>
                                <setHeader headerName="CamelHttpPath" id="_setHeaderDoChallengeDale4">
                                    <simple>${property.doAcsTxId_dale}</simple>
                                </setHeader>
                                <to id="restMsSegundoFactorTransaccion3dsConsultar2" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsConsultar"/>
                                <setProperty id="_setPropertyDoChallengeDale3" propertyName="loginDale2">
                                    <jsonpath resultType="String">$.loginDale</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyDoChallengeDale4" propertyName="rutCliente_Dale2">
                                    <jsonpath resultType="String">$.rutCliente</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyDoChallengeDale5" propertyName="token_Dale2">
                                    <jsonpath resultType="String">$.token</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyDoChallengeDale6" propertyName="daleOtp_Dale2">
                                    <jsonpath resultType="String">$.daleOtp</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyDoChallengeDale7" propertyName="purchaseAmount_Dale2">
                                    <jsonpath resultType="String">$.purchaseAmount</jsonpath>
                                </setProperty>
                                <setProperty id="_setPropertyDoChallengeDale8" propertyName="merchantName_Dale2">
                                    <jsonpath resultType="String">$.merchantName</jsonpath>
                                </setProperty>
                                <log id="_logDoChallengeDale8" loggingLevel = "INFO" message="2FA Transaccion3DS Consultar :: DATA CONSULTADA EXITOSAMENTE"/>
                            <doCatch>
                                <exception>java.lang.Exception</exception>
                                <log id="_logDoChallengeDale9" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Consultar"/>
                            </doCatch>
                            </doTry>
                            <!-- Bifurcacion Login Dale :: flujo Login o flujo OTP -->
                            <choice id="_choiceLogin_o_OTP">
                                <!-- flujo Login -->
                                <when id="_whenLogin_o_OTP">
                                    <simple>${property.loginDale2} == false</simple>
                                        <!-- Bifurcacion Login Dale :: Si seleccionan en HTML el Login o Boton Cancelar -->
                                        <choice id="_choiseProcesoLoginDale">
                                            <when id="_whenProcesoLoginDale">
                                                <!-- Flujo si el usuario selecciona cancelar en el HTML -->
                                                <simple>${property.subDoValues_daleLogin} == 'cancelado'</simple>
                                                <log id="_logDoChallengeDale12" loggingLevel= "ERROR" message="*** CANCELADO desde HTML - FIN 3DS ***"/>
                                                <!-- Guardar Data BD 3DS -  transaccion_confirmada -->
                                                <log id="_logDoChallengeDale13" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                <doTry>
                                                    <removeHeaders id="_removeHeadersDoChallengeDale2" pattern="*"/>     
                                                    <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale5">
                                                        <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                    </setHeader>
                                                    <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale6">
                                                        <constant>application/json</constant>
                                                    </setHeader>
                                                    <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale7">
                                                        <constant>POST</constant>
                                                    </setHeader>
                                                    <setBody id="_setBodyDoChallengeDale1">
                                                        <simple>{
                                                                "acsTxId": "${property.doAcsTxId_dale}",
                                                                "transaccionConfirmada": "canceladoPorUsuario"
                                                                }
                                                        </simple>
                                                    </setBody>
                                                    <to id="restMsSegundoFactorTransaccion3dsGuardar5" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                    <log id="_logDoChallengeDale14" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA GUARDADA EXITOSAMENTE"/>
                                                <doCatch>
                                                    <exception>java.lang.Exception</exception>
                                                    <log id="_logDoChallengeDale15" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Guardar"/>
                                                </doCatch>
                                                </doTry>
                                                <to id="_toDoChallengeDale1" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                <stop id="_stopDoChallengeDale1"/>
                                            </when>
                                            <!-- Flujo si el usuario ingresa credenciales de login -->
                                            <otherwise id="_otherwiseProcesoLoginDale">
                                                <!--  Logica Consulta Data API DALE Auth GetToken  -->
                                                <log id="_logDoChallengeDale16" loggingLevel= "INFO" message="Consumo API DALE - Auth GetToken"/>
                                                <doTry>
                                                    <removeHeaders id="_removeHeadersDoChallengeDale3" pattern="*"/>     
                                                    <setHeader headerName="{{amazon.aws.endpoint.msauth.interno.getToken.apikey.header}}" id="_setHeaderDoChallengeDale8">
                                                        <constant>{{amazon.aws.endpoint.msauth.interno.getToken.apikey.value}}</constant>
                                                    </setHeader>
                                                    <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale9">
                                                        <constant>application/json</constant>
                                                    </setHeader>
                                                    <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale10">
                                                        <constant>POST</constant>
                                                    </setHeader>
                                                    <setBody id="_setBodyDoChallengeDale2">
                                                        <simple>{
                                                                "rut": "${property.rutCliente_Dale2}",
                                                                "password": "${property.subDoValues_daleLogin}", 
                                                                "origen": "Backend3DS",
                                                                "canal": "web"
                                                                }
                                                        </simple>
                                                    </setBody>
                                                    <to id="restMsAuthInternoGetToken1" uri="cxfrs://bean://restMsAuthInternoGetToken"/>
                                                    <setProperty id="_setPropertyDoChallengeDale9" propertyName="statusCode">
                                                        <simple>${header.CamelHttpResponseCode}</simple>
                                                    </setProperty>
                                                    <!-- Logica Respuesta API segun su status code -->
                                                    <choice id="_choiseStatusCodeGetToken">
                                                        <when id="_whenStatusCodeGetToken1">
                                                            <simple>${property.statusCode} == 401 </simple>
                                                            <log id="_logDoChallengeDale17" loggingLevel="ERROR" message="ERROR DE API DALE :: 401"/>
                                                            <setProperty id="_setPropertyDoChallengeDale10" propertyName="errorMSA_Dale">
                                                                <jsonpath resultType="String">$.errorCode</jsonpath>
                                                            </setProperty>
                                                            <log id="_logDoChallengeDale18" loggingLevel= "ERROR" message="RESPUESTA :: ${property.errorMSA_Dale} "/>
                                                            <setProperty id="_setPropertyDoChallengeDale11" propertyName="getToken_Dale">
                                                                <simple>false</simple>
                                                            </setProperty>
                                                        </when>
                                                        <when id="_whenStatusCodeGetToken2">
                                                            <simple>${property.statusCode} == 201 </simple>
                                                            <log id="_logDoChallengeDale19" loggingLevel="INFO" message="OK DE API :: 201"/>
                                                            <setProperty id="_setPropertyDoChallengeDale12" propertyName="aToken_Dale">
                                                                <jsonpath resultType="String">$.accessToken</jsonpath>
                                                            </setProperty>
                                                            <setProperty id="_setPropertyDoChallengeDale13" propertyName="getToken_Dale">
                                                                <simple>true</simple>
                                                            </setProperty>
                                                            <log id="_logDoChallengeDale22" loggingLevel= "INFO" message="Finalizó Consumo API :: Auth Interno GetToken "/>
                                                        </when>
                                                    </choice>
                                                <doCatch>
                                                    <exception>java.lang.Exception</exception>
                                                    <log id="_logDoChallengeDale23" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: Auth Interno GetToken"/>
                                                </doCatch>
                                                </doTry>
                                                <!-- Logica de Verificacion una vez realizado el Login segun este fue fallido o exitoso -->
                                                <choice id="_choiceResultadoLoginDale">
                                                    <when id="_whenLoginDaleOk">
                                                        <simple>${property.getToken_Dale} == true </simple>
                                                        <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                                        <log id="_logDoChallengeDale24" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                        <doTry>
                                                            <removeHeaders id="_removeHeadersDoChallengeDale4" pattern="*"/>     
                                                            <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale11">
                                                                <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                            </setHeader>
                                                            <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale12">
                                                                <constant>application/json</constant>
                                                            </setHeader>
                                                            <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale13">
                                                                <constant>POST</constant>
                                                            </setHeader>
                                                            <setBody id="_setBodyDoChallengeDale3">
                                                                <simple>{
                                                                        "acsTxId": "${property.doAcsTxId_dale}",
                                                                        "token": "${property.aToken_Dale}",
                                                                        "loginDale": true
                                                                        }
                                                                </simple>
                                                            </setBody>
                                                            <to id="restMsSegundoFactorTransaccion3dsGuardar6" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                            <log id="_logDoChallengeDale25" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA GUARDADA EXITOSAMENTE"/>
                                                        <doCatch>
                                                            <exception>java.lang.Exception</exception>
                                                            <log id="_logDoChallengeDale26" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Guardar"/>
                                                        </doCatch>
                                                        </doTry>
                                                        <!-- END_FLOW en false por lo que ACS vuelve a get_CHallenge -->
                                                        <to id="_toDoChallengeDale2" uri="velocity:etc/xsl/response/doChallengeDaleLoop.vm"/>
                                                        <stop id="_stopDoChallengeDale2"/>
                                                    </when>
                                                    <when id="_whenLoginError">
                                                        <simple>${property.getToken_Dale} == false </simple>
                                                        <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                                        <log id="_logDoChallengeDale27" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                        <doTry>
                                                            <removeHeaders id="_removeHeadersDoChallengeDale5" pattern="*"/>     
                                                            <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale14">
                                                                <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                            </setHeader>
                                                            <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale15">
                                                                <constant>application/json</constant>
                                                            </setHeader>
                                                            <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale16">
                                                                <constant>POST</constant>
                                                            </setHeader>
                                                            <setBody id="_setBodyDoChallengeDale4">
                                                                <simple>{
                                                                        "acsTxId": "${property.doAcsTxId_dale}",
                                                                        "transaccionConfirmada": "errorEnLogin"
                                                                        }
                                                                </simple>
                                                            </setBody>
                                                            <to id="restMsSegundoFactorTransaccion3dsGuardar7" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                            <log id="_logDoChallengeDale28" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA GUARDADA EXITOSAMENTE"/>
                                                        <doCatch>
                                                            <exception>java.lang.Exception</exception>
                                                            <log id="_logDoChallengeDale29" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Guardar"/>
                                                        </doCatch>
                                                        </doTry>
                                                        <to id="_toDoChallengeDale3" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                        <stop id="_stopDoChallengeDale3"/>
                                                    </when>
                                                </choice>
                                            </otherwise>
                                        </choice>
                                </when>
                                <!-- flujo OTP -->
                                <otherwise id="_otherwiseLogin_o_OTP">  
                                        <!--  Logica Consulta Data API DALE 2do transaccion3DS Consultar  -->
                                        <doTry>
                                            <log id="_logDoChallengeDale2811" loggingLevel= "INFO" message="*** DALE - PROCESO OTP ***"/>
                                            <log id="_logDoChallengeDale281" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Consultar"/>
                                            <removeHeaders id="_removeHeadersDoChallengeDale6" pattern="*"/>     
                                            <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.header}}" id="_setHeaderDoChallengeDale17">
                                                <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.consultar.apikey.value}}</constant>
                                            </setHeader>
                                            <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale18">
                                                <constant>application/json</constant>
                                            </setHeader>
                                            <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale19">
                                                <constant>GET</constant>
                                            </setHeader>
                                            <setHeader headerName="CamelHttpPath" id="_setHeaderDoChallengeDale20">
                                                <simple>${property.doAcsTxId_dale}</simple>
                                            </setHeader>
                                            <to id="restMsSegundoFactorTransaccion3dsConsultar3" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsConsultar"/>
                                            <setProperty id="_setPropertyDoChallengeDale14" propertyName="otpValidacionDale">
                                                <jsonpath resultType="String">$.daleOtp</jsonpath>
                                            </setProperty>
                                            <log id="_logDoChallengeDale291" loggingLevel = "INFO" message="OTP DALE :: ${property.otpValidacionDale}"/>
                                            <log id="_logDoChallengeDale30" loggingLevel = "INFO" message="2FA Transaccion3DS Consultar :: DATA CONSULTADA EXITOSAMENTE"/>
                                        <doCatch>
                                            <exception>java.lang.Exception</exception>
                                            <log id="_logDoChallengeDale31" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Consultar"/>
                                        </doCatch>
                                        </doTry>
                                    <!-- VALIDACION DALE OTP DALEPASS -->
                                    <choice id="_choisevalidacionOtpDale">
                                        <!-- OTP CLIENTE DALE DALEPASS -->
                                        <when id="_whenOTPDalePass">
                                            <simple>${property.otpValidacionDale} == 'dalepass'</simple>
                                            <choice id="_choiseOTPDalePass">
                                                <when id="_whenOTPDalePassCancelado">
                                                    <simple>${property.subDoValues_dalePass} == 'cancelado'</simple>
                                                    <log id="_logDoChallengeDale32" loggingLevel= "ERROR" message="*** CANCELADO desde HTML - FIN 3DS ***"/>
                                                        <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                                        <log id="_logDoChallengeDale33" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                        <doTry>
                                                        <removeHeaders id="_removeHeadersDoChallengeDale7" pattern="*"/>     
                                                        <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale21">
                                                            <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                        </setHeader>
                                                        <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale22">
                                                            <constant>application/json</constant>
                                                        </setHeader>
                                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale23">
                                                            <constant>POST</constant>
                                                        </setHeader>
                                                        <setBody id="_setBodyDoChallengeDale5">
                                                            <simple>{
                                                                    "acsTxId": "${property.doAcsTxId_dale}",
                                                                    "transaccionConfirmada": "canceladoPorUsuario"
                                                                    }
                                                            </simple>
                                                        </setBody>
                                                        <to id="restMsSegundoFactorTransaccion3dsGuardar8" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                        <log id="_logDoChallengeDale34" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                    <doCatch>
                                                        <exception>java.lang.Exception</exception>
                                                        <log id="_logDoChallengeDale35" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                    </doCatch>
                                                    </doTry>
                                                    <to id="_toDoChallengeDale4" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                    <stop id="_stopDoChallengeDale4"/>
                                                </when>
                                                <!-- Usuario Inicia Autorizacion por DalePass -->
                                                <otherwise id="_otherwiseOTPDalePassIniciado">
                                                    <log id="_logDoChallengeDale39" loggingLevel= "INFO" message="INICIA AUTORIZACION DALEPASS"/>
                                                    <log id="_logDoChallengeDale48" loggingLevel= "INFO" message="Consumo API DALE - 2FA Estado Validar"/>
                                                    <doTry>
                                                        <removeHeaders id="_removeHeadersDoChallengeDale10" pattern="*"/>     
                                                        <setHeader headerName="{{amazon.aws.endpoint.ms2fa.estado.validar.apikey.header}}" id="_setHeaderDoChallengeDale30">
                                                            <constant>{{amazon.aws.endpoint.ms2fa.estado.validar.apikey.value}}</constant>
                                                        </setHeader>
                                                        <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale31">
                                                            <constant>application/json</constant>
                                                        </setHeader>
                                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale32">
                                                            <constant>POST</constant>
                                                        </setHeader>
                                                        <setBody id="_setBodyDoChallengeDale8">
                                                            <simple>{
                                                                    "rut": "${property.rutCliente_Dale2}",
                                                                    "origenAutorizacion": "Autorizar 3DS - DalePass", 
                                                                    "trackId": "${property.doAcsTxId_dale}"
                                                                    }
                                                            </simple>
                                                        </setBody>
                                                        <to id="restMsSegundoFactorEstadoValidar1" uri="cxfrs://bean://restMsSegundoFactorEstadoValidar"/>
                                                        <setProperty id="_setPropertyDoChallengeDale20" propertyName="estadoValidacionDalePass">
                                                            <jsonpath resultType="String">$.estado</jsonpath>
                                                        </setProperty>
                                                        <doCatch>
                                                        <exception>java.lang.Exception</exception>
                                                        <log id="_logDoChallengeDale49" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Estado Validar"/>
                                                        </doCatch>
                                                    </doTry>
                                                    <choice id="_choiseLoopDaleEstado">
                                                        <when id="_whenLoopDaleEstado">
                                                            <simple>${property.estadoValidacionDalePass} == 'Trx_Aprobada'</simple>
                                                                <log id="_logDoChallengeDale50" loggingLevel = "INFO" message="TRX_APROBADA :: VALIDACION EXITOSA"/>
                                                                <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                                                <log id="_logDoChallengeDale51" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                                <doTry>
                                                                <removeHeaders id="_removeHeadersDoChallengeDale11" pattern="*"/>     
                                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale33">
                                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                                </setHeader>
                                                                <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale34">
                                                                    <constant>application/json</constant>
                                                                </setHeader>
                                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale35">
                                                                    <constant>POST</constant>
                                                                </setHeader>
                                                                <setBody id="_setBodyDoChallengeDale9">
                                                                    <simple>{
                                                                            "acsTxId": "${property.doAcsTxId_dale}",
                                                                            "transaccionConfirmada": "TrxAprobada" 
                                                                            }
                                                                    </simple>
                                                                </setBody>
                                                                <to id="restMsSegundoFactorTransaccion3dsGuardar10" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                                <log id="_logDoChallengeDale52" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                            <doCatch>
                                                                <exception>java.lang.Exception</exception>
                                                                <log id="_logDoChallengeDale53" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                            </doCatch>
                                                            </doTry>
                                                            <to id="_toDoChallengeDale6" uri="velocity:etc/xsl/response/doChallengeDaleTrue.vm"/>
                                                            <stop id="_stopDoChallengeDale6"/>
                                                        </when>
                                                        <otherwise id="_otherwiseLoopDaleEstado">
                                                            <log id="_logDoChallengeDale54" loggingLevel = "INFO" message="TRX_RECHAZADA :: VALIDACION RECHAZADA"/>  
                                                            <!-- Consumo API DALE - 2FA Transaccion 3DS Guardar -->
                                                            <log id="_logDoChallengeDale57" loggingLevel= "INFO" message="Consumo API DALE - 2FA Transaccion 3DS Guardar"/>
                                                            <doTry>
                                                                <removeHeaders id="_removeHeadersDoChallengeDale12" pattern="*"/>     
                                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale36">
                                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                                </setHeader>
                                                                <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale37">
                                                                    <constant>application/json</constant>
                                                                </setHeader>
                                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale38">
                                                                    <constant>POST</constant>
                                                                </setHeader>
                                                                <setBody id="_setBodyDoChallengeDale10">
                                                                    <simple>{
                                                                            "acsTxId": "${property.doAcsTxId_dale}",
                                                                            "transaccionConfirmada": "TrxRechazada"
                                                                            }
                                                                    </simple>
                                                                </setBody>
                                                                <to id="restMsSegundoFactorTransaccion3udsGuardar11" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                                <log id="_logDoChallengeDale58" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                                <doCatch>
                                                                    <exception>java.lang.Exception</exception>
                                                                    <log id="_logDoChallengeDale59" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                                </doCatch>
                                                            </doTry>
                                                            <to id="_toDoChallengeDale7" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                            <stop id="_stopDoChallengeDale7"/>
                                                        </otherwise>
                                                    </choice>  
                                                </otherwise>     
                                            </choice>
                                        </when>
                                        <!-- VALIDACION DALE OTP GOOGLEAUTH -->
                                        <otherwise id="_otherwiseOTPGoogleAuth">
                                             <!-- Usuario Cancela desde HTML -->
                                            <choice id="_choiceOTPGoogleAuth">
                                                <when id="_whenOTPGoogleAuthCancelado">
                                                    <simple>${property.subDoValues_daleGoogleAuth} == 'cancelado'</simple>
                                                    <log id="_logDoChallengeDale60" loggingLevel= "ERROR" message="*** CANCELADO desde HTML - FIN 3DS ***"/>
                                                     <doTry>
                                                        <removeHeaders id="_removeHeadersDoChallengeDale13" pattern="*"/>     
                                                        <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale39">
                                                            <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                        </setHeader>
                                                        <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale40">
                                                            <constant>application/json</constant>
                                                        </setHeader>
                                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale41">
                                                            <constant>POST</constant>
                                                        </setHeader>
                                                        <setBody id="_setBodyDoChallengeDale11">
                                                            <simple>{
                                                                    "acsTxId": "${property.doAcsTxId_dale}",
                                                                    "transaccionConfirmada": "canceladoPorUsuario"
                                                                    }
                                                            </simple>
                                                        </setBody>
                                                        <to id="restMsSegundoFactorTransaccion3dsGuardar12" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                        <log id="_logGetChallengeDale10fin88488454" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                    <doCatch>
                                                        <exception>java.lang.Exception</exception>
                                                        <log id="_logDoChallengeDale61" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                    </doCatch>
                                                    </doTry>
                                                    <to id="_toDoChallengeDale8" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                    <stop id="_stopDoChallengeDale8"/>
                                                </when>
                                                <!-- Usuario Inicia Autorizacion por GoogleAuth -->
                                                <otherwise id="_otherwiseOTPGoogleAuthAutorizar">
                                                    <!-- Consumo API DALE - 2FA Verificado -->
                                                    <log id="_logDoChallengeDale63" loggingLevel= "INFO" message="INICIA AUTORIZACION GOOGLEAUTH"/>
                                                    <log id="_logDoChallengeDale62" loggingLevel= "INFO" message="Consumo API DALE - 2FA Autorizar"/>
                                                    <doTry>
                                                        <removeHeaders id="_removeHeadersDoChallengeDale14" pattern="*"/>     
                                                        <setHeader
                                                            headerName="{{amazon.aws.endpoint.ms2fa.estado.autorizar.apikey.header}}" id="_setHeaderDoChallengeDale42">
                                                        <constant>{{amazon.aws.endpoint.ms2fa.estado.autorizar.apikey.value}}</constant>
                                                        </setHeader>
                                                        <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale43">
                                                            <constant>application/json</constant>
                                                        </setHeader>
                                                        <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale44">
                                                            <constant>POST</constant>
                                                        </setHeader>
                                                        <setBody id="_setBodyDoChallengeDale12">
                                                        <simple>{
                                                                "rut": "${property.rutCliente_Dale2}",
                                                                "codigo": "${property.subDoValues_daleGoogleAuth}",
                                                                "tipoAutorizador": "google-auth",
                                                                "canal": "web",
                                                                "descripcion": "Autorización Transferencia 3DS",
                                                                "origen": "3DS",
                                                                "trackId": "${property.doAcsTxId_dale}"
                                                                }
                                                        </simple>
                                                        </setBody>
                                                        <to id="restMsSegundoFactorEstadoAutorizar" uri="cxfrs://bean://restMsSegundoFactorEstadoAutorizar"/>
                                                        <setProperty id="_setPropertyDoChallengeDale22" propertyName="statusCodeVerificar">
                                                            <simple>${header.CamelHttpResponseCode}</simple>
                                                        </setProperty>
                                                    <doCatch>
                                                        <exception>java.lang.Exception</exception>
                                                        <log id="_logDoChallengeDale64" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Verificar"/>
                                                    </doCatch>
                                                    </doTry>
                                                    <choice id="_choiceStatusVerificar">
                                                        <when id="_whenStatusVerificar1">
                                                            <simple>${property.statusCodeVerificar} == 400 </simple>
                                                            <log id="_logDoChallengeDale65" loggingLevel="ERROR" message="ERROR DE API DALE :: 400"/>
                                                            <setProperty id="_setPropertyDoChallengeDale23" propertyName="errorMS_Dale">
                                                                <jsonpath resultType="String">$.code</jsonpath>
                                                            </setProperty>
                                                            <log id="_logDoChallengeDale66" loggingLevel= "INFO" message="RESPUESTA :: ${property.errorMS_Dale} "/>
                                                            <doTry>
                                                                <removeHeaders id="_removeHeadersDoChallengeDale15" pattern="*"/>     
                                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale45">
                                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                                </setHeader>
                                                                <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale46">
                                                                    <constant>application/json</constant>
                                                                </setHeader>
                                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale47">
                                                                    <constant>POST</constant>
                                                                </setHeader>
                                                                <setBody id="_setBodyDoChallengeDale13">
                                                                    <simple>{
                                                                            "acsTxId": "${property.doAcsTxId_dale}",
                                                                            "transaccionConfirmada": "TrxRechazada" 
                                                                            }
                                                                    </simple>
                                                                </setBody>
                                                                <to id="restMsSegundoFactorTransaccion3dsGuardar13" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                                <log id="_logDoChallengeDale67" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                            <doCatch>
                                                                <exception>java.lang.Exception</exception>
                                                                <log id="_logDoChallengeDale68" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                            </doCatch>
                                                            </doTry>
                                                            <to id="_toDoChallengeDale9" uri="velocity:etc/xsl/response/doChallengeDaleFalse.vm"/>
                                                            <stop id="_stopDoChallengeDale9"/>
                                                        </when>
                                                        <when id="_whenStatusVerificar2">
                                                            <simple>${property.statusCodeVerificar} == 201 </simple>
                                                            <log id="_logDoChallengeDale69" loggingLevel = "INFO" message="OK DE API"/>
                                                            <doTry>
                                                                <removeHeaders id="_removeHeadersDoChallengeDale16" pattern="*"/>     
                                                                <setHeader headerName="{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.header}}" id="_setHeaderDoChallengeDale48">
                                                                    <constant>{{amazon.aws.endpoint.ms2fa.transaccion3ds.guardar.apikey.value}}</constant>
                                                                </setHeader>
                                                                <setHeader headerName="Content-Type" id="_setHeaderDoChallengeDale49">
                                                                    <constant>application/json</constant>
                                                                </setHeader>
                                                                <setHeader headerName="CamelHttpMethod" id="_setHeaderDoChallengeDale50">
                                                                    <constant>POST</constant>
                                                                </setHeader>
                                                                <setBody id="_setBodyDoChallengeDale14">
                                                                    <simple>{
                                                                            "acsTxId": "${property.doAcsTxId_dale}",
                                                                            "transaccionConfirmada": "TrxAprobada" 
                                                                            }
                                                                    </simple>
                                                                </setBody>
                                                                <to id="restMsSegundoFactorTransaccion3dsGuardar14" uri="cxfrs://bean://restMsSegundoFactorTransaccion3dsGuardar"/>
                                                                <log id="_logDoChallengeDale71" loggingLevel = "INFO" message="2FA Transaccion3DS Guardar :: DATA ACTUALIZADA EXITOSAMENTE"/>
                                                            <doCatch>
                                                                <exception>java.lang.Exception</exception>
                                                                <log id="_logDoChallengeDale72" loggingLevel = "ERROR" message="ERROR: No se pudo conectar con la API :: 2FA Transaccion3DS Actualizar"/>
                                                            </doCatch>
                                                            </doTry>
                                                            <to id="_toDoChallengeDale10" uri="velocity:etc/xsl/response/doChallengeDaleTrue.vm"/>
                                                            <stop id="_stopDoChallengeDale10"/>
                                                        </when>
                                                    </choice>
                                                </otherwise>
                                            </choice>
                                        </otherwise>   
                                    </choice>
                                </otherwise>
                            </choice>
                        </when>
                        <!-- *************************************************** -->
                        <!-- ******** FIN FLUJO DO_CHALLENGE DALE ********** -->
                        <!-- *************************************************** -->


                        <otherwise id="_otherwise13">
                            <!-- DO CHALLENGE PASS COOPEUCH  -->
                            <log id="_log50" message="DO CHALLENGE PASS COOPEUCH"/>
                            <setProperty id="_setProperty139" propertyName="canalLlamada">
                                <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty140" propertyName="userId">
                                <simple>{{coopeuch.ws3ds.userId}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty141" propertyName="rut">
                                <simple>${property.RUT}</simple>
                            </setProperty>
                            <setProperty id="_setProperty142" propertyName="operacionId">
                                <simple>{{coopeuch.ws3ds.operacionId}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty143" propertyName="fechaHoy">
                                <simple>${date:now:dd-MM-yyyy}</simple>
                            </setProperty>
                            <bean id="_bean3" method="transformAccount" ref="beanRouteFacade"/>
                            <to id="_to42" uri="velocity:etc/xsl/response/requestSoftTokenValidar.vm"/> 
                            <removeHeaders id="_removeHeaders29" pattern="*"/>
                            <setHeader headerName="Content-Type" id="_setHeader36">
                                <constant>application/json</constant>
                            </setHeader>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader37">
                                <constant>POST</constant>
                            </setHeader>
                            <setProperty id="_setProperty144" propertyName="minutosAhora">
                                <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZ}</simple>
                            </setProperty>
                            <setProperty id="_setProperty145" propertyName="codigoResponse">
                                <simple/>
                            </setProperty>
                            <loop copy="true" doWhile="true" id="_loop1">
                                <simple>${property.codigoResponse} != '0'</simple>
                                <to id="wsSoftTokenValidar2-To" uri="cxfrs:bean:endpointSoftTokenValidar"/>
                                <convertBodyTo id="_convertBodyTo17" type="java.lang.String"/>
                                <setProperty id="_setProperty146" propertyName="codigoArray">
                                    <jsonpath>$..codigo</jsonpath>
                                </setProperty>
                                <setProperty id="_setProperty147" propertyName="codigoResponse">
                                    <simple>${property.codigoArray.get(0)}</simple>
                                </setProperty>
                                <setProperty id="_setProperty148" propertyName="minutosTranscurrido">
                                    <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZ}</simple>
                                </setProperty>
                                <bean id="diferenciaMinutos"
                                    method="diferenciaMinutos" ref="beanRouteFacade"/>
                                <log id="_log51" message="(${property.codigoArray}===(((${property.codigoResponse}))))"/>
                                <choice id="_choice17">
                                    <when id="_when30">
                                    <simple>${property.codigoResponse} != '25' and ${property.codigoResponse} != '0'</simple>
                                    <choice id="_choice18">
                                    <when id="_when31">
                                    <simple>${property.REINTENTOS} &gt;= 3</simple>
                                    <to id="_to43" uri="velocity:etc/xsl/response/errorDoChallengePassFin.vm"/>
                                    <bean
                                    id="restablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty149" propertyName="codigoResponse">
                                    <simple>0</simple>
                                    </setProperty>
                                    <marshal id="_marshal11">
                                    <json library="Jackson"/>
                                    </marshal>
                                    <log id="_log52" message="((((${body}))))"/>
                                    <setProperty
                                    id="_setProperty150" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty151" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to44" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders30" pattern="responsePA"/>
                                    <stop id="_stop18"/>
                                    </when>
                                    </choice>
                                    <to id="_to45" uri="velocity:etc/xsl/response/errorDoChallengePass.vm"/>
                                    <setProperty
                                    id="_setProperty152" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty153" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to46" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders31" pattern="responsePA"/>
                                    <log id="_log53" message="((((${body}))))"/>
                                    <stop id="_stop19"/>
                                    </when>
                                    <when id="_when32">
                                    <simple>${property.codigoResponse} == '0'</simple>
                                    <setProperty
                                    id="_setProperty154" propertyName="Aumento">
                                    <simple>Exitoso</simple>
                                    </setProperty>
                                    <bean id="EstablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty155" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsAprobado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty156" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod6}}</simple>
                                    </setProperty>
                                    <to id="_to47" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders32" pattern="responsePA"/>
                                    <to id="_to48" uri="velocity:etc/xsl/response/responseDoChallengePass.vm"/>
                                    <log id="_log54" message="((((${body}))))"/>
                                    <stop id="_stop20"/>
                                    </when>
                                    <when id="_when33">
                                    <simple>${property.tiempo} &gt;= '2'</simple>
                                    <choice id="_choice19">
                                    <when id="_when34">
                                    <simple>${property.REINTENTOS} &gt;= 3</simple>
                                    <to id="_to49" uri="velocity:etc/xsl/response/errorDoChallengePassFin.vm"/>
                                    <bean
                                    id="restablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty157" propertyName="codigoResponse">
                                    <simple>0</simple>
                                    </setProperty>
                                    <marshal id="_marshal12">
                                    <json library="Jackson"/>
                                    </marshal>
                                    <setProperty
                                    id="_setProperty158" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty159" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to50" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders33" pattern="responsePA"/>
                                    <log id="_log55" message="((((${body}))))"/>
                                    <stop id="_stop21"/>
                                    </when>
                                    </choice>
                                    <setProperty
                                    id="_setProperty160" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty161" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to51" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders34" pattern="responsePA"/>
                                    <to id="_to52" uri="velocity:etc/xsl/response/errorDoChallengePass.vm"/>
                                    <log id="_log56" message="((((${body}))))"/>
                                    <stop id="_stop22"/>
                                    </when>
                                </choice>
                                <delay id="_delay1">
                                    <constant>4000</constant>
                                </delay>
                            </loop>
                            <stop id="_stop23"/>
                        </otherwise>
                    </choice>
                </when>
                <when id="_when40">
                    <simple>${property.TIPOAUTENTICACION} != 'OOB'</simple>
                    <choice id="_choice3">
                        <when id="_when2">
                            <simple>${exchangeProperty.values} contains 'desafio'</simple>
                            <!-- DO CHALLENGE TARJETA COORDENADAS  -->
                            <log id="_log57" message="DO CHALLENGE TARJETA COORDENADAS"/>
                            <bean id="splitDesafios"
                                method="splitDesafiosValue" ref="beanRouteFacade"/>
                            <to id="_to53" uri="velocity:etc/xsl/response/requestValidarDesafio.vm"/>
                            <removeHeaders id="_removeHeaders35" pattern="*"/>
                            <setHeader headerName="Content-Type" id="_setHeader38">
                                <constant>application/json</constant>
                            </setHeader>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader39">
                                <constant>POST</constant>
                            </setHeader>
                            <to id="wsDesafioValidarDesafio2-To" uri="cxfrs:bean:endpointDesafioValidarDesafio"/>
                            <convertBodyTo id="_convertBodyTo18" type="java.lang.String"/>
                            <log id="_log58" message="((((${body}))))"/>
                            <choice id="_choice20">
                                <when id="_when36">
                                    <simple>${body} contains 'Autentificacion Valida'</simple>
                                    <setProperty id="_setProperty162" propertyName="Aumento">
                                    <simple>Exitoso</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty173" propertyName="estadoEnrolamiento">
                                    <constant>1</constant>
                                    </setProperty>
                                    <bean id="EstablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty id="_setProperty163" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsAprobado}}</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty164" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod6}}</simple>
                                    </setProperty>
                                    <to id="_to54" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders id="_removeHeaders36" pattern="responsePA"/>
                                    <!-- Actualizar factores en tabla parametrosAutenticacion -->
                                    <setProperty propertyName="factorA">
                                        <simple>Tarjeta de Coordenadas OK</simple>
                                    </setProperty>
                                    <setProperty propertyName="factorB">
                                        <constant>OTP SMS</constant>
                                    </setProperty>
                                    <setProperty propertyName="factorC">
                                        <constant>0</constant>
                                    </setProperty>
                                    <setProperty propertyName="factorD">
                                        <constant>0</constant>
                                    </setProperty>
                                    <setProperty propertyName="factorE">
                                        <constant>0</constant>
                                    </setProperty>
                                    <setProperty propertyName="factorF">
                                        <constant>0</constant>
                                    </setProperty>
                                    <to uri="sql-stored:classpath:sql/pa_updateFactoresParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer"/>
                                    <to id="_to55" uri="velocity:etc/xsl/response/responseDoChallengeTarjeta.vm"/>
                                    <log id="_log59" message="DESAFIO VALIDADO CORRECTAMENTE"/>
                                </when>
                                <otherwise id="_otherwise14">
                                    <choice id="_choice21">
                                    <when id="_when37">
                                    <simple>${property.REINTENTOS} &gt;= ${property.cantidadReintentos}</simple>
                                    <to id="_to56" uri="velocity:etc/xsl/response/errorDoChallengeTarjetaFin.vm"/>
                                    <log id="_log60" message="ERROR AL VALIDAR DESAFIO"/>
                                    <setProperty
                                    id="_setProperty174" propertyName="estadoEnrolamiento">
                                    <constant>0</constant>
                                    </setProperty>
                                    <bean
                                    id="restablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <marshal id="_marshal13">
                                    <json library="Jackson"/>
                                    </marshal>
                                    <setProperty
                                    id="_setProperty165" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty166" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to57" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders37" pattern="responsePA"/>
                                    <log id="_log61" message="((((${body}))))"/>
<!--                                     <stop id="_stop24"/> -->
                                    </when>
                                    </choice>
                                    <log id="_log62" message="ERROR AL VALIDAR DESAFIO"/>
                                    <to id="_to58" uri="velocity:etc/xsl/response/errorDoChallengeTarjeta.vm"/>
                                    <setProperty id="_setProperty175" propertyName="estadoEnrolamiento">
                                    <constant>0</constant>
                                    </setProperty>
                                    <setProperty id="_setProperty167" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty168" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to59" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders id="_removeHeaders38" pattern="responsePA"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when id="_when3">
                            <simple>${exchangeProperty.values} contains 'digito'</simple>
                            <log id="_log68" message="DO CHALLENGE  OTP via SMS ${exchangeProperty.values} ${exchangeProperty.RUT}"/>
                            <to id="_to5" uri="velocity:etc/xsl/response/requestValidarTercerFactor.vm"/>
                            <removeHeaders id="_removeHeaders2" pattern="*"/>
                            <setHeader headerName="Content-Type" id="_setHeader40">
                                <constant>application/json</constant>
                            </setHeader>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader41">
                                <constant>POST</constant>
                            </setHeader>
                            <to id="_to6" uri="cxfrs:bean:endpointTercerFactorValidar"/>
                            <convertBodyTo id="_convertBodyTo19" type="java.lang.String"/>
                            <unmarshal id="_unmarshal1" ref="responseTerverFactor"/>
                            <log id="_log69" message="((((${body}))))"/>
                            <choice id="_choice20">
                                <when id="_when4">
                                    <simple>${body.salida.codigo} == '00'</simple>
                                    <setProperty id="_setProperty185" propertyName="Aumento">
                                    <simple>Exitoso</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty176" propertyName="estadoEnrolamiento">
                                    <constant>1</constant>
                                    </setProperty>
                                    <bean id="_bean4"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty id="_setProperty17" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsAprobado}}</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty20" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod6}}</simple>
                                    </setProperty>
                                    <to id="_to60" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders id="_removeHeaders39" pattern="responsePA"/>
                                    <to id="_to61" uri="velocity:etc/xsl/response/responseDoChallengeTercerFactor.vm"/>
                                    <log id="_log70" message="TERCER FACTOR VALIDADO CORRECTAMENTE"/>
                                </when>
                                <otherwise id="_otherwise1">
                                    <choice id="_choice22">
                                    <when id="_when5">
                                    <simple>${property.REINTENTOS} &gt;= ${property.cantidadReintentos}</simple>
                                    <log id="_log87" message="ERROR AL VALIDAR TERCER FACTOR1 ${property.REINTENTOS}"/>
                                    <to id="_to75" uri="velocity:etc/xsl/response/errorDoChallengeTercerFactoFin.vm"/>
                                    <setProperty
                                    id="_setProperty172" propertyName="estadoEnrolamiento">
                                    <constant>0</constant>
                                    </setProperty>
                                    <bean id="_bean5"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty21" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty27" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to63" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders40" pattern="responsePA"/>
                                    <log id="_log72" message="((((${body}))))"/>
                                    <stop id="_stop3"/>
                                    </when>
                                    </choice>
                                    <log id="_log73" message="ERROR AL VALIDAR TERCER FACTOR2"/>
                                    <to id="_to64" uri="velocity:etc/xsl/response/errorDoChallengeTercerFactor.vm"/>
                                    <setProperty id="_setProperty177" propertyName="estadoEnrolamiento">
                                    <constant>0</constant>
                                    </setProperty>
                                    <setProperty id="_setProperty28" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty id="_setProperty171" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to65" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders id="_removeHeaders41" pattern="responsePA"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when id="_when6">
                            <simple>${exchangeProperty.values} contains 'SIN INFORMACION'</simple>
                            <log id="_log50" message="DO CHALLENGE PASS COOPEUCH"/>
                            <setProperty id="_setProperty139" propertyName="canalLlamada">
                                <simple>{{coopeuch.ws3ds.canalLlamada}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty140" propertyName="userId">
                                <simple>{{coopeuch.ws3ds.userId}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty141" propertyName="rut">
                                <simple>${property.RUT}</simple>
                            </setProperty>
                            <setProperty id="_setProperty142" propertyName="operacionId">
                                <simple>{{coopeuch.ws3ds.operacionId}}</simple>
                            </setProperty>
                            <setProperty id="_setProperty143" propertyName="fechaHoy">
                                <simple>${date:now:dd-MM-yyyy}</simple>
                            </setProperty>
                            <bean id="_bean3" method="transformAccount" ref="beanRouteFacade"/>
                            <to id="_to42" uri="velocity:etc/xsl/response/requestSoftTokenValidar.vm"/>
                            <removeHeaders id="_removeHeaders29" pattern="*"/>
                            <setHeader headerName="Content-Type" id="_setHeader36">
                                <constant>application/json</constant>
                            </setHeader>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader37">
                                <constant>POST</constant>
                            </setHeader>
                            <setProperty id="_setProperty144" propertyName="minutosAhora">
                                <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZ}</simple>
                            </setProperty>
                            <setProperty id="_setProperty145" propertyName="codigoResponse">
                                <simple/>
                            </setProperty>
                            <loop copy="true" doWhile="true" id="_loop1">
                                <simple>${property.codigoResponse} != '0'</simple>
                                <to id="wsSoftTokenValidar2-To" uri="cxfrs:bean:endpointSoftTokenValidar"/>
                                <convertBodyTo id="_convertBodyTo17" type="java.lang.String"/>
                                <setProperty id="_setProperty146" propertyName="codigoArray">
                                    <jsonpath>$..codigo</jsonpath>
                                </setProperty>
                                <setProperty id="_setProperty147" propertyName="codigoResponse">
                                    <simple>${property.codigoArray.get(0)}</simple>
                                </setProperty>
                                <setProperty id="_setProperty148" propertyName="minutosTranscurrido">
                                    <simple>${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZ}</simple>
                                </setProperty>
                                <bean id="diferenciaMinutos"
                                    method="diferenciaMinutos" ref="beanRouteFacade"/>
                                <log id="_log51" message="(${property.codigoArray}===(((${property.codigoResponse}))))"/>
                                <choice id="_choice17">
                                    <when id="_when30">
                                    <simple>${property.codigoResponse} != '25' and ${property.codigoResponse} != '0'</simple>
                                    <choice id="_choice18">
                                    <when id="_when31">
                                    <simple>${property.REINTENTOS} &gt;= ${property.cantidadReintentos}</simple>
                                    <to id="_to43" uri="velocity:etc/xsl/response/errorDoChallengePassFin.vm"/>
                                    <bean
                                    id="restablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty149" propertyName="codigoResponse">
                                    <simple>0</simple>
                                    </setProperty>
                                    <marshal id="_marshal11">
                                    <json library="Jackson"/>
                                    </marshal>
                                    <log id="_log52" message="((((${body}))))"/>
                                    <setProperty
                                    id="_setProperty150" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty151" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to44" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders30" pattern="responsePA"/>
                                    <stop id="_stop18"/>
                                    </when>
                                    </choice>
                                    <to id="_to45" uri="velocity:etc/xsl/response/errorDoChallengePass.vm"/>
                                    <setProperty
                                    id="_setProperty152" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty153" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to46" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders31" pattern="responsePA"/>
                                    <log id="_log53" message="((((${body}))))"/>
                                    <stop id="_stop19"/>
                                    </when>
                                    <when id="_when32">
                                    <simple>${property.codigoResponse} == '0'</simple>
                                    <setProperty
                                    id="_setProperty154" propertyName="Aumento">
                                    <simple>Exitoso</simple>
                                    </setProperty>
                                    <bean id="EstablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty155" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsAprobado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty156" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod6}}</simple>
                                    </setProperty>
                                    <to id="_to47" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders32" pattern="responsePA"/>
                                    <to id="_to48" uri="velocity:etc/xsl/response/responseDoChallengePass.vm"/>
                                    <log id="_log54" message="((((${body}))))"/>
                                    <stop id="_stop20"/>
                                    </when>
                                    <when id="_when33">
                                    <simple>${property.tiempo} &gt;= '2'</simple>
                                    <choice id="_choice19">
                                    <when id="_when34">
                                    <simple>${property.REINTENTOS} &gt;= ${property.cantidadReintentos}</simple>
                                    <to id="_to49" uri="velocity:etc/xsl/response/errorDoChallengePassFin.vm"/>
                                    <bean
                                    id="restablecerReintentos"
                                    method="restablecerReintentos" ref="beanRouteFacade"/>
                                    <setProperty
                                    id="_setProperty157" propertyName="codigoResponse">
                                    <simple>0</simple>
                                    </setProperty>
                                    <marshal id="_marshal12">
                                    <json library="Jackson"/>
                                    </marshal>
                                    <setProperty
                                    id="_setProperty158" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty159" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to50" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders33" pattern="responsePA"/>
                                    <log id="_log55" message="((((${body}))))"/>
                                    <stop id="_stop21"/>
                                    </when>
                                    </choice>
                                    <setProperty
                                    id="_setProperty160" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty161" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to51" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders34" pattern="responsePA"/>
                                    <to id="_to52" uri="velocity:etc/xsl/response/errorDoChallengePass.vm"/>
                                    <log id="_log56" message="((((${body}))))"/>
                                    <stop id="_stop22"/>
                                    </when>
                                </choice>
                                <delay id="_delay1">
                                    <constant>4000</constant>
                                </delay>
                            </loop>
                            <stop id="_stop23"/>
                        </when>
                        <when id="_when25">
                            <simple>${exchangeProperty.values} regex '\d{6}'</simple>
                            <choice id="_choice15">
                                <when id="_when26">           
                                    <simple>${property.binAccountNumber} == ${property.binDale}</simple>
                                    <log id="_log42" message="DO CHALLENGE DALE"/>
                                    <to id="_to35" uri="velocity:etc/xsl/response/requestVerificar2faDale.vm"/>
                                    <removeHeaders id="_removeHeaders22" pattern="*"/>
                                    <setHeader
                                    headerName="{{amazon.aws.endpoint.ms2fa.segundoFactorVerificado.apikey.header}}" id="_setHeader27">
                                    <constant>{{amazon.aws.endpoint.ms2fa.segundoFactorVerificado.apikey.value}}</constant>
                                    </setHeader>
                                    <setHeader headerName="Content-Type" id="_setHeader28">
                                    <constant>application/json</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader29">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <to
                                    id="restMsSegundoFactorVerificado" uri="cxfrs://bean://restMsSegundoFactorVerificado"/>
                                    <setProperty id="_setProperty132" propertyName="statusCode">
                                    <simple>${header.CamelHttpResponseCode}</simple>
                                    </setProperty>
                                    <log id="_log43" message="STATUSCODE DALE API 2FA :: ${property.statusCode}"/>
                                    <choice id="_choice16">
                             
                                    <when id="_when27">
                                    <simple>${property.statusCode} == 403 </simple>
                                    <log id="_log44" message="MAXIMO DE INTENTOS PERMITIDOS"/>
                                    <setProperty
                                    id="_setProperty133" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty134" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to36" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders23" pattern="responsePA"/>
                                    <to id="_to37" uri="velocity:etc/xsl/response/errorDoChallengeDale.vm"/>
                                    <removeHeaders
                                    id="_removeHeaders24" pattern="*"/>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader30">
                                    <constant>application/json</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader31">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <log id="_log45" message="(RESPONSE DALE (((${body}))))"/>
                                    </when>
                                    <when id="_when28">
                                    <simple>${property.statusCode} == 400 </simple>
                                    <log id="_log46" message="CODIGO INVALIDO}"/>
                                    <setProperty
                                    id="_setProperty135" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsRechazado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty136" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod7}}</simple>
                                    </setProperty>
                                    <to id="_to38" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders25" pattern="responsePA"/>
                                    <to id="_to39" uri="velocity:etc/xsl/response/errorDoChallengeDaleFin.vm"/>
                                    <removeHeaders
                                    id="_removeHeaders26" pattern="*"/>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader32">
                                    <constant>application/json</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader33">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <log id="_log47" message="(RESPONSE DALE (((${body}))))"/>
                                    </when>
                                    <when id="_when29">
                                    <simple>${property.statusCode} == 201 </simple>
                                    <log id="_log48" message="CODIGO VALIDO"/>
                                    <setProperty
                                    id="_setProperty137" propertyName="codigo">
                                    <simple>{{coopeuch.ws3ds.codigoMensaje.ws3dsAprobado}}</simple>
                                    </setProperty>
                                    <setProperty
                                    id="_setProperty138" propertyName="descripcion">
                                    <simple>{{coopeuch.ws3ds.descripcionMensaje.cod6}}</simple>
                                    </setProperty>
                                    <to id="_to40" uri="sql-stored:classpath:sql/pa_insAUDEnrolamientoDoChallenge.sql?dataSource=#dataSourceSqlServer&amp;outputHeader=responsePA"/>
                                    <removeHeaders
                                    id="_removeHeaders27" pattern="responsePA"/>
                                    <to id="_to41" uri="velocity:etc/xsl/response/responseDoChallengeDale.vm"/>
                                    <removeHeaders
                                    id="_removeHeaders28" pattern="*"/>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader34">
                                    <constant>application/json</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader35">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <log id="_log49" message="(RESPONSE DALE (((${body}))))"/>
                                    </when>
                                    </choice>
                                </when>
                            </choice>
                        </when>
                        <when id="_when38">
                            <simple>${exchangeProperty.values} contains 'Tarjeta de Coordenadas'</simple>
                            <setProperty id="_setProperty198" propertyName="factorA">
                                <constant>Tarjeta de Coordenadas</constant>
                            </setProperty>
                            <setProperty id="_setProperty199" propertyName="factorB">
                                <constant>OTP SMS</constant>
                            </setProperty>
                            <setProperty id="_setProperty200" propertyName="factorC">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty id="_setProperty201" propertyName="factorD">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty id="_setProperty202" propertyName="factorE">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty id="_setProperty203" propertyName="factorF">
                                <constant>0</constant>
                            </setProperty>
                            <to uri="sql-stored:classpath:sql/pa_updateFactoresParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer"/>
                            <to uri="velocity:etc/xsl/response/responseOpcionTipoValidacion.vm"/>
                        </when>
                        <when>
                            <simple>${exchangeProperty.values} contains 'PassCoopeuch'</simple>
                            <setProperty propertyName="factorA">
                                <constant>PassCoopeuch</constant>
                            </setProperty>
                            <setProperty propertyName="factorB">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty propertyName="factorC">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty propertyName="factorD">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty propertyName="factorE">
                                <constant>0</constant>
                            </setProperty>
                            <setProperty propertyName="factorF">
                                <constant>0</constant>
                            </setProperty>
                            <to uri="sql-stored:classpath:sql/pa_updateFactoresParametrosAutenticacion.sql?dataSource=#dataSourceSqlServer"/>
                            <to uri="velocity:etc/xsl/response/responseOpcionTipoValidacion.vm"/>
                        </when>
                        <!-- <setProperty propertyName="respuesta"><jsonpath resultType="String">$.mensaje</jsonpath></setProperty> -->
                    </choice>
                </when>
                <otherwise id="_otherwise15">
                    <throwException
                        exceptionType="cl.coopeuch.integracion.tresds.exceptions.ProcedureExcepcion"
                        id="_throwException4" message="El id de transaccion ${property.idTX} no se encuentra registrado o el tiempo de registro supero 3 minutos."/>
                    <marshal id="_marshal14">
                        <json library="Jackson"/>
                    </marshal>
                    <log id="_log63" message="((((${body}))))"/>
                    <stop id="_stop25"/>
                </otherwise>
            </choice>
            <log id="_log64" message="(FINAL(((${body}))))"/>
            <stop id="_stop26"/>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <bean id="beanRouteFacade" method="excepcionAmq" ref="beanRouteFacade"/>
            <setProperty id="_setProperty169" propertyName="Connection">
                <constant>0</constant>
            </setProperty>
            <marshal id="excepcionMarshalJson">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
            <log id="excepcionLogAMQ" loggingLevel="ERROR" message="Excepcion: ${body}"/>
            <to id="wireTap-exceptionToLogPlataformas" uri="direct:wsLogPlataformasGuardar"/>
            <!--<to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/> -->
        </route>
        <route id="wsLogPlataformasGuardar">
            <from id="wsLogPlataformasGuardar-From" uri="direct:wsLogPlataformasGuardar"/>
            <doTry id="wsLogPlataformasGuardar-doTry">
                <setProperty id="_setProperty170" propertyName="nivelLog">
                    <simple>ERRO</simple>
                </setProperty>
                <bean id="wsLogPlataformasGuardar-Bean"
                    method="guardarLogRequest" ref="beanRouteFacade"/>
                <to id="wsLogPlataformasGuardar-To" uri="cxfrs:bean:endpointLogPlataformas"/>
                <doCatch id="wsLogPlataformasGuardar-doCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="_setBody3">
                        <simple>ERROR-logPlataformas: ${exception}-${body}</simple>
                    </setBody>
                    <log id="_log65" message="${body}"/>
                </doCatch>
            </doTry>
        </route>
        <route id="options">
            <from id="_from10" uri="direct:doChallengeOptions"/>
            <setBody id="_setBody4">
                <simple>OK</simple>
            </setBody>
            <stop id="_stop27"/>
        </route>
    </camelContext>
</blueprint>
