<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyWsPensionAlimentos"
        persistent-id="wspensionalimentos" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.creditos]]"/>
        <property name="password" value="[[jdbc.db2.password.creditos]]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{jdbc.db2.timeBetweenEvictionRunsMillis.pensionalimentos}]"/>
        <property name="numTestsPerEvictionRun" value="[{jdbc.db2.numTestsPerEvictionRun.pensionalimentos}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{jdbc.db2.minEvictableIdleTimeMillis.pensionalimentos}]"/>
        <property name="maxActive" value="[{jdbc.db2.maxActive.pensionalimentos}]"/>
    </bean>
    <bean
        class="cl.coopeuch.integracion.pensionalimentos.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSPensionAlimentos"
        id="endpointWSPensionAlimentos"
        serviceClass="cl.coopeuch.integracion.pensionalimentos.wsdl.WSPensionAlimentosSOAPPortType" wsdlURL="etc/wsdl/WSPensionAlimentos.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsClient address="[{apigateway.registrocivil.endpoint}]"
        id="endpointApiGateWayRegistroCivilRndpa" loggingFeatureEnabled="true">
        <camelcxf:properties>
            <entry key="throwExceptionOnFailure" value="true"/>
        </camelcxf:properties>
        <camelcxf:providers>
            <ref component-id="jsonProvider"/>
        </camelcxf:providers>
    </camelcxf:rsClient>
    <http-conf:conduit name="*.http-conduit">
        <http-conf:client ConnectionTimeout="25000" ReceiveTimeout="25000"/>
    </http-conf:conduit>
    <camelcxf:rsServer address="/RSPensionAlimentos"
        id="endpointRSPensionAlimentos" serviceClass="cl.coopeuch.integracion.pensionalimentos.wsdl.WSPensionAlimentosSOAPPortType"/>
    <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProvider"/>
    <camelContext id="servicio-pension-alimentos" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSPensionAlimentos"/>
            <to id="soapToInicioWs" uri="direct:soapRestInicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSPensionAlimentos"/>
            <to id="restToInicioWs" uri="direct:soapRestInicio"/>
        </route>
        <route id="inicio-soap-rest">
            <from id="soapRestInicio" uri="direct:soapRestInicio"/>
            <setProperty id="soapRestInicioSetRequest" propertyName="requestEntrada">
                <simple>${body}</simple>
            </setProperty>
            <setProperty id="soapRestInicioSetTipoRequest" propertyName="tipoRequest">
                <simple>$simple{body.get(0).class.getSimpleName()}</simple>
            </setProperty>
            <setBody id="soapRestInicioSetBody">
                <simple>$simple{body.get(0)}</simple>
            </setBody>
            <to id="soapRestToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-amq">
            <from id="amqInicio" uri="beanAMQ:{{amq.wspensionalimentos.req}}"/>
            <unmarshal id="inicioAmqMarshal">
                <jaxb contextPath="cl.coopeuch.integracion.pensionalimentos.wsdl"/>
            </unmarshal>
            <setProperty id="inicioAmqSetRequest" propertyName="requestEntrada">
                <simple>${body}</simple>
            </setProperty>
            <setProperty id="inicioAmqSetTipoRequest" propertyName="tipoRequest">
                <simple>$simple{body.class.getSimpleName()}</simple>
            </setProperty>
            <to id="amqToInicioWs" uri="direct:cxf-inicio"/>
            <convertBodyTo id="inicioAmqConvertTo" type="java.lang.String"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionConsultar">
                        <simple>${property.tipoRequest} == 'ConsultarRequest'</simple>
                        <to id="toConsultar" uri="direct:consultar"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultar">
            <from id="consultarFrom" uri="direct:consultar"/>
            <doTry id="consultarTry">
                <bean id="validaEntrada" method="validaEntrada" ref="beanRouteFacade"/>
                <choice id="consultarChoiceEsGestion">
                    <when id="WhenEsGestion">
                        <simple>${property.esGestion} == 'S'</simple>
                        <to id="toConsultarPa" uri="direct:procedimiento-almacenado-consultar"/>
                        <choice id="consultarPaChoice">
                            <when id="consultarPawhen">
                                <simple>${property.montoValido}</simple>
                                <to id="callTpsRegistroCivil" uri="direct:tps-registro-civil"/>
                                <to id="toIoc0395FromSiGestion" uri="direct:llamada-ioc-0395"/>
                            </when>
                        </choice>
                    </when>
                    <otherwise id="otherwhiseConsultaNoGestion">
                        <to id="callTpsRegistroCivilNoGestion" uri="direct:tps-registro-civil"/>
                        <to id="toIoc0395FromNoGestion" uri="direct:llamada-ioc-0395"/>
                    </otherwise>
                </choice>
                <doCatch id="consultarIODoCatch">
                    <exception>java.io.IOException</exception>
                    <to id="toConsultarIOExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="toConsultarExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="procedimiento-almacenado-consultar">
            <from id="paConsultarFrom" uri="direct:procedimiento-almacenado-consultar"/>
            <to id="paConsultarToPa" uri="sql-stored:classpath:etc/sql/PA_SEL_PENSIONALIMENTOS_CONSULTAR_WS.sql?dataSource=dataSourceSqlDb2"/>
            <bean id="respuestaPaConsultar"
                method="respuestaPaConsultar" ref="beanRouteFacade"/>
        </route>
        <route id="tps-registro-civil">
            <from id="tpsRegistroCivilFrom" uri="direct:tps-registro-civil"/>
            <doTry id="tpsRegistroCivilTry">
                <throttle id="_throttle1" rejectExecution="true" timePeriodMillis="1000">
                    <constant>1</constant>
                    <to id="callRegistroCivil" uri="direct:registro-civil"/>
                </throttle>
                <doCatch id="doCatchTpsCallToRC">
                    <exception>org.apache.camel.processor.ThrottlerRejectedExecutionException</exception>
                    <setProperty id="registroCivilCodigoErrorLimiteTps" propertyName="codigoError">
                        <constant>3</constant>
                    </setProperty>
                    <bean id="responseLimitTpsException"
                        method="responseRegistroCivil" ref="beanRouteFacade"/>
                </doCatch>
                <doCatch id="doCatchExceptionTps">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="registroCivilCodigoErrorTps" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="toRegistroCivilExcepcionTps" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="registro-civil">
            <from id="registroCivilFrom" uri="direct:registro-civil"/>
            <doTry id="registroCivilTry">
                <bean id="crearRequestRndpa" method="crearRequestRndpa" ref="beanRouteFacade"/>
                <to id="callRegistroCivilRndpa" uri="cxfrs://bean://endpointApiGateWayRegistroCivilRndpa"/>
                <unmarshal id="unmarshallResponseRndpa">
                    <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.pensionalimentos.pojo.RndpaResponse"/>
                </unmarshal>
                <bean id="responseRegistroCivil"
                    method="responseRegistroCivil" ref="beanRouteFacade"/>
                <doCatch id="doCatchTimeoutRC">
                    <exception>java.net.ConnectException</exception>
                    <exception>java.net.SocketTimeoutException</exception>
                    <setProperty id="registroCivilCodigoErrorRC" propertyName="codigoError">
                        <constant>7</constant>
                    </setProperty>
                    <bean id="responseRCTimeout"
                        method="responseRegistroCivil" ref="beanRouteFacade"/>
                </doCatch>
                <doCatch id="doCatchErrorEjecucion">
                    <exception>org.apache.camel.CamelException</exception>
                    <setProperty id="registroCivilCodigoEjecucion" propertyName="codigoError">
                        <constant>2</constant>
                    </setProperty>
                    <bean id="responseRCEjecucion"
                        method="responseRegistroCivil" ref="beanRouteFacade"/>
                </doCatch>
                <doCatch id="doCatchExceptionRC">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="registroCivilCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="toRegistroCivilExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="llamada-ioc-0395">
            <from id="ioc0395From" uri="direct:llamada-ioc-0395"/>
            <bean id="consultarDetalleCVUUID"
                method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
            <bean id="entradaIOC0395" method="entradaIOC0395" ref="beanRouteFacade"/>
            <to id="ioc0395TramaEntrada" uri="xslt://etc/xsl/request/IOC039501I_consultar.xsl"/>
            <log id="consultarTramaRequest" loggingLevel="INFO" message="trama generada: |${body}|"/>
            <to id="consultarToAmq" uri="beanAMQ:{{amq.queue.temp.int}}?preserveMessageQos=true&amp;jmsMessageType=Text&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false&amp;replyToDeliveryPersistent=false"/>
            <log id="consultarTramaResponse" loggingLevel="INFO" message="trama recibida: |${body}|"/>
            <bean id="responseConsultar" method="responseConsultar" ref="beanRouteFacade"/>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
