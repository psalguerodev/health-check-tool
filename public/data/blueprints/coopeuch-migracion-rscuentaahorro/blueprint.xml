<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wscuentaahorro" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.cuentas]]"/>
        <property name="password" value="[[jdbc.db2.password.cuentas]]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{jdbc.db2.timeBetweenEvictionRunsMillis.cuentaahorro}]"/>
        <property name="numTestsPerEvictionRun" value="[{jdbc.db2.numTestsPerEvictionRun.cuentaahorro}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{jdbc.db2.minEvictableIdleTimeMillis.cuentaahorro}]"/>
        <property name="maxActive" value="[{jdbc.db2.maxActive.cuentaahorro}]"/>
    </bean>
    <bean class="cl.coopeuch.integracion.cuentahorro.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSCuentaAhorro"
        id="endpointWSCuentaAhorro"
        serviceClass="cl.coopeuch.integracion.cuentahorro.wsdl.WSCuentaAhorroSOAPPortType" wsdlURL="etc/wsdl/WSCuentaAhorro.wsdl"/>
    <camelcxf:rsServer address="/RSCuentaAhorro"
        id="endpointRSCuentaAhorro" serviceClass="cl.coopeuch.integracion.cuentahorro.wsdl.WSCuentaAhorroSOAPPortType"/>
    <camelContext id="servicio-cuenta-ahorro" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromServicio" uri="cxf:bean:endpointWSCuentaAhorro"/>
            <to id="soapToInicioWs" uri="direct:inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSCuentaAhorro"/>
            <choice id="restRuteoOperaciones">
                <when id="restRutaListar">
                    <simple>${header.operationName} == 'listar'</simple>
                    <to id="restToInicioWsListar" uri="direct:inicio"/>
                    <marshal id="listarMarshalRest">
                        <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.cuentahorro.wsdl.ListarResponse"/>
                    </marshal>
                </when>
                <when id="restRutaConsultar">
                    <simple>${header.operationName} == 'consultar'</simple>
                    <to id="restToInicioWsConsultar" uri="direct:inicio"/>
                    <marshal id="consultarMarshalRest">
                        <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.cuentahorro.wsdl.ConsultarResponse"/>
                    </marshal>
                </when>
                <when id="restRutaConsultarMovimientos">
                    <simple>${header.operationName} == 'consultarMovimientos'</simple>
                    <to id="restToInicioWsConsultarMovimientos" uri="direct:inicio"/>
                    <marshal id="consultarMovimientosMarshalRest">
                        <json include="NON_NULL" library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.cuentahorro.wsdl.ConsultarMovimientosResponse"/>
                    </marshal>
                </when>
                <otherwise id="otherwiseRest">
                    <to id="restToInicioWs" uri="direct:inicio"/>
                </otherwise>
            </choice>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <bean id="validarDatosOperacionBean"
                    method="validarDatosOperacion" ref="beanRouteFacade"/>
                <choice id="validaErrorChoice">
                    <when id="validaErrorWhen">
                        <simple>${exchangeProperty.ERROR} == ''</simple>
                        <choice id="inicioChoiceOperacion">
                            <when id="inicioWhenOperacionCrear">
                                <simple>${header.operationName} == 'crear'</simple>
                                <to id="toCrear" uri="direct:crear"/>
                            </when>
                            <when id="inicioWhenOperacionMigrarCuenta">
                                <simple>${header.operationName} == 'migrarCuenta'</simple>
                                <to id="toMigrarCuenta" uri="direct:migrarCuenta"/>
                            </when>
                            <when id="inicioWhenOperacionListar">
                                <simple>${header.operationName} == 'listar'</simple>
                                <to id="toListar" uri="direct:listar"/>
                            </when>
                            <when id="inicioWhenOperacionConsultar">
                                <simple>${header.operationName} == 'consultar'</simple>
                                <to id="toConsultar" uri="direct:consultar"/>
                            </when>
                            <when id="inicioWhenOperacionAbonar">
                                <simple>${header.operationName} == 'abonar'</simple>
                                <setBody id="abonarSetBody">
                                    <simple>$simple{body.get(0)}</simple>
                                </setBody>
                                <to id="toAbonar" uri="direct:abonar"/>
                            </when>
                            <when id="inicioWhenOperacionConsultarMovimientos">
                                <simple>${header.operationName} == 'consultarMovimientos'</simple>
                                <to id="toConsultarMovimientos" uri="direct:consultarMovimientos"/>
                            </when>
                            <otherwise id="inicioOtherwise">
                                <throwException
                                    exceptionType="java.lang.Exception"
                                    id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise id="otherwiseError">
                        <setProperty id="codigoErrorDatos" propertyName="codigoError">
                            <constant>300</constant>
                        </setProperty>
                        <throwException
                            exceptionType="java.lang.UnsupportedOperationException"
                            id="throwExceptionOperacionInvalida_error" message="Falta completar datos de entrada"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch-UnsupportedOperationException">
                    <exception>java.lang.UnsupportedOperationException</exception>
                    <setProperty
                        id="inicioCodigoError-UnsupportedOperationException" propertyName="codigoError">
                        <constant>300</constant>
                    </setProperty>
                    <to
                        id="toInicioExcepcion-UnsupportedOperationException" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="crear">
            <from id="crearFrom" uri="direct:crear"/>
            <doTry id="crearTry">
                <setBody id="crearSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="crearMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <convertBodyTo id="crearConvertBodyToString" type="java.lang.String"/>
                <bean id="crearUUID" method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <bean id="crearFormatoAhorroBean"
                    method="formatoVivienda" ref="beanRouteFacade"/>
                <to id="crearToXSLTrama" uri="xslt://etc/xsl/request/IOC749001I_crear.xsl"/>
                <log id="crearTrama" loggingLevel="TRACE" message="Trama generada = ${body}"/>
                <to id="crearToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="crearTramaResponse" loggingLevel="TRACE" message="Trama recibida = ${body}"/>
                <transform id="crearTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="crearToXSLSOAP" uri="xslt://etc/xsl/response/IOC749001O_crear.xsl?saxon=true"/>
                <unmarshal id="crearUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </unmarshal>
                <doCatch id="crearDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="crearCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toCrearExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="crearDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="crearCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="crearToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="migrarCuenta">
            <from id="migrarCuentaFrom" uri="direct:migrarCuenta"/>
            <doTry id="migrarCuentaTry">
                <setBody id="migrarCuentaSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="migrarCuentaMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <convertBodyTo id="migrarCuentaConvertBodyToString" type="java.lang.String"/>
                <bean id="migrarCuentaUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="migrarCuentaToXSLTrama" uri="xslt://etc/xsl/request/IOC749501I_migrarCuenta.xsl"/>
                <log id="migrarCuentaTrama" message="Trama generada = ${body}"/>
                <to id="migrarCuentaToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="migrarCuentaTramaResponse" loggingLevel="TRACE" message="Trama recibida = ${body}"/>
                <transform id="migrarCuentaTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="migrarCuentaToXSLSOAP" uri="xslt://etc/xsl/response/IOC749501O_migrarCuenta.xsl?saxon=true"/>
                <unmarshal id="migrarCuentaUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </unmarshal>
                <doCatch id="migrarCuentaDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="migrarCuentaCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="tomigrarCuentaExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="migrarCuentaDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="migrarCuentaCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="migrarCuentaToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="listar">
            <from id="listarFrom" uri="direct:listar"/>
            <doTry id="listarTry">
                <setBody id="listarSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="listarMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <bean id="rellenaRequestListar"
                    method="rellenaRequestListar" ref="beanRouteFacade"/>
                <to id="listarToStoreProcedure" uri="sql-stored:classpath:etc/sql/PA_SEL_WSCUENTAAHORRO_LISTAR_WS.sql?dataSource=dataSourceSqlDb2"/>
                <bean id="rellenaResponseListar"
                    method="rellenaResponseListar" ref="beanRouteFacade"/>
                <doCatch id="listarDoCatchIOException">
                    <exception>java.io.IOException</exception>
                    <to id="listarToIOExcepcion" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="listarDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="listarCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="tolistarExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="listarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="listarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="listarToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultar">
            <from id="consultarFrom" uri="direct:consultar"/>
            <doTry id="consultarTry">
                <setBody id="consultarSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="consultarMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <convertBodyTo id="consultarConvertBodyToString" type="java.lang.String"/>
                <bean id="rellenaRequestConsultar"
                    method="rellenaRequestConsultar" ref="beanRouteFacade"/>
                <to id="consultarToStoreProcedure" uri="sql-stored:classpath:etc/sql/PA_SEL_WSCUENTAAHORRO_CONSULTAR_WS.sql?dataSource=dataSourceSqlDb2"/>
                <bean id="rellenaResponseConsultar"
                    method="rellenaResponseConsultar" ref="beanRouteFacade"/>
                <doCatch id="consultarDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="consultarCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toconsultarExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="consultarToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="routeCola">
            <from id="fromCola" uri="beanAMQ:queue:{{colas.servicio.cuentaahorro.in.temp}}?preserveMessageQos=true"/>
            <choice id="choiceCola">
                <when id="whenCola">
                    <simple>${body} contains 'abonar'</simple>
                    <marshal id="abonarMarshalCola">
                        <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                    </marshal>
                    <bean id="abonarBeanCola" method="abonarRequest" ref="beanRouteFacade"/>
                    <to id="inicioAbonar" uri="direct:abonar"/>
                </when>
            </choice>
        </route>
        <route id="abonar">
            <from id="abonarFrom" uri="direct:abonar"/>
            <doTry id="abonarTry">
                <marshal id="abonarMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <convertBodyTo id="abonarConvertBodyToString" type="java.lang.String"/>
                <bean id="abonarUUID" method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <bean id="abonarObtenerDatosOperacionBean"
                    method="datosOperacionAbonoCuentaAhorro" ref="beanRouteFacade"/>
                <to id="abonarToXSLTrama" uri="xslt://etc/xsl/request/IOC528001I_abonar.xsl"/>
                <log id="abonarTrama" message="Trama generada = ${body}"/>
                <to id="abonarToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="abonarTramaResponse" loggingLevel="TRACE" message="Trama recibida = ${body}"/>
                <transform id="abonarTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="abonarToXSLSOAP" uri="xslt://etc/xsl/response/IOC528001O_abonar.xsl?saxon=true"/>
                <unmarshal id="abonarUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </unmarshal>
                <doCatch id="abonarDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="abonarCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toAbonarExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="abonarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="abonarCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="abonarToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="consultarMovimientos">
            <from id="consultarMovimientosFrom" uri="direct:consultarMovimientos"/>
            <doTry id="consultarMovimientosTry">
                <setBody id="consultarMovimientosSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="consultarMovimientosMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </marshal>
                <bean id="transformConsultarMovimientosBean"
                    method="transformConsultarMovimientos" ref="beanRouteFacade"/>
                <choice id="consultarMovimientos-choice">
                    <when id="consultarMovimientos-when">
                        <simple>${property.cantErr} == 0 </simple>
                        <setProperty id="_setProperty1" propertyName="userId">
                            <xpath resultType="String">substring(//userId, 0, 11)</xpath>
                        </setProperty>
                        <setProperty id="_setProperty2" propertyName="canal">
                            <xpath resultType="String">substring(//canalLlamada, 0, 5)</xpath>
                        </setProperty>
                        <to id="consultarMovimientos-To" uri="sql-stored:classpath:etc/sql/PA_SEL_CUENTAAHORRO_CONSULTARMOVIMIENTOS_WS.sql?dataSource=dataSourceSqlDb2&amp;outputHeader=responseConsultarMovimientos"/>
                        <bean id="validarConsultarMovimientosBean"
                            method="procesarConsultarMovimientos" ref="beanRouteFacade"/>
                        <removeHeaders id="removeHeaders_01" pattern="*"/>
                    </when>
                </choice>
                <unmarshal id="consultarMovimientosUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cuentahorro.wsdl"/>
                </unmarshal>
                <doCatch id="consultarMovimientosDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="consultarMovimientosCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toconsultarMovimientosExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="consultarMovimientosDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="consultarMovimientosCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="consultarMovimientosToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
