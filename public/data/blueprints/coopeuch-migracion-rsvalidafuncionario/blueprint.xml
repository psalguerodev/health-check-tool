<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd              http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <!-- Property Placeholder -->
    <cm:property-placeholder persistent-id="serviceProperties" update-strategy="reload"/>
    <!-- Configure CXF endpoint -->
    <cxf:cxfEndpoint address="/ServicioValidaFuncionario"
        id="validaFuncionarioEndpoint"
        serviceClass="cl.coopeuch.core.validafuncionario.serviciovalidafuncionario.ValidaFuncionarioPortType" wsdlURL="wsdl/ServicioValidaFuncionario.wsdl"/>
    <!-- Configure Active MQ connection factory -->
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="AMQ">
        <property name="brokerURL" value="${amq.broker.url}"/>
        <property name="userName" value="${amq.username}"/>
        <property name="password" value="${amq.password}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <!-- Configure JDBC connection -->
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSource">
        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
        <property name="url" value="${jdbc.sybase.url.validafuncionario}/Coopeuch;charset=iso_1"/>
        <property name="username" value="${jdbc.sybase.username.validafuncionario}"/>
        <property name="password" value="${jdbc.sybase.password.validafuncionario}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.sybase.timeBetweenEvictionRunsMillis.validafuncionario}"/>
        <property name="numTestsPerEvictionRun" value="${jdbc.sybase.numTestsPerEvictionRun.validafuncionario}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.sybase.minEvictableIdleTimeMillis.validafuncionario}"/>
        <property name="maxActive" value="${jdbc.sybase.maxActive.validafuncionario}"/>        
    </bean>
    <!-- Local Beans -->
    <bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean class="cl.coopeuch.util.db.StoredProcedureBean" id="pa_selpersonalvigcoopeuch">
        <argument ref="dataSource"/>
        <argument value="java.sql.Types"/>
        <argument value="pa_selpersonalvigcoopeuch"/>
        <argument value="false"/>
        <argument>
            <list>
                <map>
                    <entry key="name" value="RUT"/>
                    <entry key="mode" value="in"/>
                    <entry key="type" value="integer"/>
                </map>
                <map>
                    <entry key="name" value="resultSet"/>
                    <entry key="mode" value="out"/>
                    <entry key="type" value="ResultSet"/>
                </map>
            </list>
        </argument>
    </bean>
    <camelContext id="servicio-valida-funcionario-context" xmlns="http://camel.apache.org/schema/blueprint">
        <dataFormats>
            <jacksonxml id="jack" prettyPrint="true"/>
        </dataFormats>
        <route id="cx-RuteoOperaciones">
            <from id="validaFuncionarioEndpointListener" uri="cxf:bean:validaFuncionarioEndpoint?DataFormat=MESSAGE"/>
            <doTry id="ruteoOperacionesTry">
                <convertBodyTo id="ruteoOperacionesBodyTo" type="java.lang.String"/>
                <bean beanType="cl.coopeuch.util.other.BodyBackup"
                    id="backupBody" method="backupBody"/>
                <choice id="ruteoOperaciones">
                    <when id="rutaconsultaVigencia">
                        <simple>${body} contains 'consultaVigencia'</simple>
                        <to id="consultaVigenciaValidator" uri="validator:xsd/soapConsultaVigencia.xsd"/>
                        <to id="consultaVigenciaTo" uri="direct:consultaVigencia"/>
                    </when>
                </choice>
                <doCatch id="ruteoOperacionesCatch">
                    <exception>java.lang.Exception</exception>
                    <exception>java.io.IOException</exception>
                    <bean beanType="cl.coopeuch.util.other.BodyBackup"
                        id="ruteoOperacionesRestoreBody" method="restoreBody"/>
                    <setBody id="ruteoOperacionesSetBodyError">
                        <simple>ERROR:${exception}:${body}</simple>
                    </setBody>
                    <to id="ruteoOperacionesFault" uri="AMQ:{{amq.queue.amq.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                    <bean beanType="cl.coopeuch.util.error.SetBodyError"
                        id="ruteoOperacionesBodyError" method="setBodyError"/>
                </doCatch>
                <doFinally id="ruteoOperacionesFinally"/>
            </doTry>
        </route>
        <route id="consultaVigencia">
            <from id="consultaVigenciaFrom" uri="direct:consultaVigencia"/>
            <doTry id="consultaVigenciaTry">
                <setHeader headerName="RUT" id="consultaVigenciaHeaderRUT">
                    <xpath resultType="java.lang.String">//rut/text()</xpath>
                </setHeader>
                <to id="pa_selpersonalvigcoopeuch" uri="bean:pa_selpersonalvigcoopeuch"/>
                <marshal id="consultaVigenciaResultset2xml" ref="jack"/>
                <to id="consultaVigenciaXml2xml" uri="xslt://transformations/out/resultset2xml_consultaVigencia.xsl?saxon=true"/>
                <doCatch id="consultaVigenciaCatch">
                    <exception>java.lang.Exception</exception>
                    <exception>java.io.IOException</exception>
                    <bean beanType="cl.coopeuch.util.other.BodyBackup"
                        id="consultaVigenciaRestoreBody" method="restoreBody"/>
                    <setBody id="consultaVigenciaSetBodyError">
                        <simple>ERROR:${exception}:${body}</simple>
                    </setBody>
                    <to id="consultaVigenciaFault" uri="AMQ:{{amq.queue.amq.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                    <bean beanType="cl.coopeuch.util.error.SetBodyError"
                        id="consultaVigenciaSetBodyError" method="setBodyError"/>
                </doCatch>
                <doFinally id="consultaVigenciaFinally"/>
            </doTry>
        </route>
    </camelContext>
</blueprint>
