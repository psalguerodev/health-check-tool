<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:http="http://cxf.apache.org/transports/http/configuration"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
                             placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal" persistent-id="wsinversiones"
                             placeholder-prefix="{{" placeholder-suffix="}}" update-strategy="reload"/>
    
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    
    <bean class="cl.coopeuch.integracion.entidad.inversiones.util.RouteFacade"
          id="beanRouteFacade"/>
    
    <camelcxf:cxfEndpoint address="/WSInversiones"
                          id="endpointWSInversiones"
                          serviceClass="cl.coopeuch.integracion.entidad.inversiones.wsdl.WSInversionesSOAPPortType"
                          wsdlURL="etc/wsdl/WSInversiones.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    
    <camelcxf:rsServer id="endpointRSInversiones"
                       address="/RSInversiones"
                       serviceClass="cl.coopeuch.integracion.entidad.inversiones.wsdl.WSInversionesSOAPPortType">
        <camelcxf:providers>
            <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
                <property name="serializeAsArray" value="true"/>
                <property name="arrayKeys">
                    <list>
                        <value>fondos</value>
                        <value>solicitudes</value>
                    </list>
                </property>
            </bean>
        </camelcxf:providers>
    </camelcxf:rsServer>
    
    <camelContext id="servicio-inversiones" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSInversiones"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSInversiones"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionConsultarBalance">
                        <simple>${header.operationName} == 'consultarBalance'</simple>
                        <to id="toConsultarBalance" uri="direct:consultarBalance"/>
                    </when>
                    <when id="inicioWhenOperacionConsultarSolicitudes">
                        <simple>${header.operationName} == 'consultarSolicitudes'</simple>
                        <to id="toConsultarSolicitudes" uri="direct:consultarSolicitudes"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>

        <route id="consultarBalance">
            <from id="consultarBalanceFrom" uri="direct:consultarBalance"/>
            <doTry>
                <log message="Request: ${body}"/>
                <bean method="validarRequestConsultarBalance" ref="beanRouteFacade"/>
                <removeHeaders pattern="*"/>
                <setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>GET</constant>
                </setHeader>
                <setHeader headerName="{{inversiones.apigateway.crm.apikey.header}}">
                    <constant>{{inversiones.apigateway.crm.apikey.value}}</constant>
                </setHeader>
                <marshal>
                    <json include="NON_NULL" library="Jackson"/>
                </marshal>
                <convertBodyTo type="java.lang.String"/>
                <!-- Llamado a MsCliente para obtener nombre el id de su perfil -->
                <toD uri="cxfrs:{{inversiones.apigateway.crm.mscliente}}/api/mscliente/crm/usuario/v1/obtener/${property.rut}?loggingFeatureEnabled=true"/>
                <unmarshal>
                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.dto.mscliente.ObtenerUsuarioResponse"/>
                </unmarshal>
                <bean method="generarResponseObtenerUsuario" ref="beanRouteFacade"/>
                <choice>
                    <when>
                        <simple>${property.idPerfil} == null</simple>
                        <throwException exceptionType="java.lang.InterruptedException" message=""/>
                    </when>
                </choice>
                <!-- Llamado a MsPerfil para obtener nombre del perfil -->
                <toD uri="cxfrs:{{inversiones.apigateway.crm.msperfil}}/api/msperfil/crm/perfil/v1/obtener/${property.idPerfil}?loggingFeatureEnabled=true"/>
                <unmarshal>
                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.dto.msperfil.ObtenerPerfilResponse"/>
                </unmarshal>
                <bean method="generarResponseObtenerPerfil" ref="beanRouteFacade"/>
                <!-- Llamado a MsOperaciones para obtener las metas del cliente -->
                <toD uri="cxfrs:{{inversiones.apigateway.crm.msoperaciones}}/api/msoperaciones/crm/operacion/v1/meta/obtener/${property.rut}?loggingFeatureEnabled=true"/>
                <unmarshal>
                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.dto.msoperaciones.ObtenerMetasResponse"/>
                </unmarshal>
                <bean method="generarResponseObtenerMetas" ref="beanRouteFacade"/>
                <!-- Llamado a MsOperaciones para obtener los fondos de las metas del cliente -->
                <toD uri="cxfrs:{{inversiones.apigateway.crm.msoperaciones}}/api/msoperaciones/crm/operacion/v1/meta/detalle/obtener/${property.idMeta}/${property.rut}?loggingFeatureEnabled=true"/>
                <unmarshal>
                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.dto.msoperaciones.ObtenerDetalleMetasResponse"/>
                </unmarshal>
                <bean method="generarResponseConsultarBalance" ref="beanRouteFacade"/>
                <unmarshal>
                    <jaxb contextPath="cl.coopeuch.integracion.entidad.inversiones.wsdl"/>
                </unmarshal>
                <doCatch>
                    <exception>java.lang.IllegalArgumentException</exception>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch>
                    <exception>java.lang.InterruptedException</exception>
                    <setProperty propertyName="codigoError">
                        <constant>4034</constant>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch>
                    <exception>java.io.IOException</exception>
                    <setProperty propertyName="codigoError">
                        <constant>504</constant>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <setProperty propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        
        <route id="consultarSolicitudes">
            <from id="consultarSolicitudesFrom" uri="direct:consultarSolicitudes"/>
            <doTry>
                <log message="Request: ${body}"/>
                <bean method="validarRequestConsultarSolicitudes" ref="beanRouteFacade"/>
                <bean method="generarRequestObtenerMovimientosMeta" ref="beanRouteFacade"/>
                <removeHeaders pattern="*"/>
                <setHeader headerName="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="{{inversiones.apigateway.crm.apikey.header}}">
                    <constant>{{inversiones.apigateway.crm.apikey.value}}</constant>
                </setHeader>
                <marshal>
                    <json include="NON_NULL" library="Jackson"/>
                </marshal>
                <convertBodyTo type="java.lang.String"/>
                <!-- Llamado a MsOperaciones para obtener solicitudes filtradas -->
                <toD uri="cxfrs:{{inversiones.apigateway.crm.msoperaciones}}/api/msoperaciones/crm/operacion/v1/meta/movimientos/obtener/filtrar?loggingFeatureEnabled=true"/>
                <unmarshal>
                    <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.dto.msoperaciones.ObtenerMovimientosMetaResponse"/>
                </unmarshal>
                <bean method="generarResponseConsultarSolicitudes" ref="beanRouteFacade"/>
                <unmarshal>
                    <jaxb contextPath="cl.coopeuch.integracion.entidad.inversiones.wsdl"/>
                </unmarshal>
                <doCatch>
                    <exception>java.lang.IllegalArgumentException</exception>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch>
                    <exception>java.io.IOException</exception>
                    <setProperty propertyName="codigoError">
                        <constant>504</constant>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <setProperty propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <log message="Error: ${exception.stacktrace}"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                      method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
