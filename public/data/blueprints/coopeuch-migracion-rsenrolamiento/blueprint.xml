<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <!-- Servicio creacion socios -->
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wsenrolamiento" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.enrolamiento.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSEnrolamiento"
        continuationTimeout="30000" id="endpointWsEnrolamiento"
        serviceClass="cl.coopeuch.integracion.enrolamiento.wsdl.WSEnrolamientoSOAPPortType" wsdlURL="etc/wsdl/WSEnrolamiento.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:cxfEndpoint
        address="[{enrolamiento.servicio.persona.endpoint}]"
        id="endpointServicioPersona"
        serviceClass="cl.coopeuch.integracion.enrolamiento.wsdl.serviciopersona.PersonaPortType" wsdlURL="etc/wsdl/ServicioPersona.wsdl"/>
    <camelcxf:cxfEndpoint
        address="[{enrolamiento.servicio.parametro.endpoint}]"
        id="endpointServicioParametro" loggingFeatureEnabled="true"
        serviceClass="cl.coopeuch.integracion.enrolamiento.wsdl.parametro.ParametroPortType" wsdlURL="etc/wsdl/ServicioParametro.wsdl"/>
    <camelcxf:cxfEndpoint
        address="[{enrolamiento.servicio.listanegra.endpoint}]"
        id="endpointServicioListasNegras" loggingFeatureEnabled="true"
        serviceClass="cl.coopeuch.integracion.enrolamiento.wsdl.listasnegras.WSListasNegrasSOAPPortType" wsdlURL="etc/wsdl/WSListasNegras.wsdl"/>
    <camelcxf:cxfEndpoint
        address="[{enrolamiento.servicio.pagos.endpoint}]"
        id="endpointServicioPago"
        serviceClass="cl.coopeuch.integracion.enrolamiento.wsdl.serviciopago.PagoPortType" wsdlURL="etc/wsdl/ServicioPago.wsdl"/>
    <camelContext id="servicio-enrolamiento" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="cxf:bean:endpointWsEnrolamiento"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetBody" propertyName="bodyEntrada">
                    <simple>${body.get(0)}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionEnrolar">
                        <simple>${header.operationName} == 'enrolarCliente'</simple>
                        <setProperty id="inicioPropertyUsuario" propertyName="usuario">
                            <simple>$simple{body.get(0).userid}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyCanal" propertyName="canal">
                            <simple>$simple{body.get(0).canalLlamada}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyRut" propertyName="rut">
                            <simple>$simple{body.get(0).rut.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyOrigen" propertyName="tipoCuentaOrigen">
                            <simple>$simple{body.get(0).tipoCuenta}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyOrigen" propertyName="cuentaOrigen">
                            <simple>$simple{body.get(0).cuentaOrigen}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyCuotas" propertyName="cantidadCuotas">
                            <simple>$simple{body.get(0).cantCuotasMensual}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyCuotasApertura" propertyName="cantidadApertura">
                            <simple>$simple{body.get(0).cantCuotasApertura}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyCuotas" propertyName="diaCobro">
                            <simple>$simple{body.get(0).diaCobro}</simple>
                        </setProperty>
                        <setProperty id="inicioPropertyNotificacion" propertyName="notificacion">
                            <simple>$simple{body.get(0).notificacion}</simple>
                        </setProperty>
                        <bean id="inicioValidateBean"
                            method="validarRequest" ref="beanRouteFacade"/>
                        <log id="logTraceInicio" loggingLevel="TRACE" message="Se ha iniciado el servicio, rut = ${exchangeProperty.rut} y cuenta = ${exchangeProperty.cuentaOrigen}"/>
                        <to id="toServicioPersona" uri="direct:servicioPersona"/>
                    </when>
                    <when id="inicioWhenOperacionAsociar">
                        <simple>${header.operationName} == 'asociarCuentaDebito'</simple>
                        <to id="toAsociarCuenta" uri="direct:asociarCuenta"/>
                    </when>
                    <when id="inicioWhenOperacionCrearCliente">
                        <simple>${header.operationName} == 'crearCliente'</simple>
                        <setProperty id="_setProperty1" propertyName="userid">
                            <simple>$simple{body.get(0).userid}</simple>
                        </setProperty>
                        <setProperty id="_setProperty3" propertyName="canalLlamada">
                            <simple>$simple{body.get(0).canalLlamada}</simple>
                        </setProperty>
                        <setProperty id="_setProperty4" propertyName="rutCliente">
                            <simple>$simple{body.get(0).rutCliente.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty5" propertyName="primerNombre">
                            <simple>$simple{body.get(0).primerNombre.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty6" propertyName="segundoNombre">
                            <simple>$simple{body.get(0).segundoNombre.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty7" propertyName="apellidoPaterno">
                            <simple>$simple{body.get(0).apellidoPaterno.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty8" propertyName="apellidoMaterno">
                            <simple>$simple{body.get(0).apellidoMaterno.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty11" propertyName="sexo">
                            <simple>$simple{body.get(0).sexo.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty12" propertyName="estadoCivil">
                            <simple>$simple{body.get(0).estadoCivil}</simple>
                        </setProperty>
                        <setProperty id="_setProperty9" propertyName="nacionalidad">
                            <simple>$simple{body.get(0).nacionalidad.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty10" propertyName="celular">
                            <simple>$simple{body.get(0).celular}</simple>
                        </setProperty>
                        <setProperty id="_setProperty13" propertyName="fechaNacimiento">
                            <simple>$simple{body.get(0).fechaNacimiento}</simple>
                        </setProperty>
                        <setProperty id="_setProperty14" propertyName="ejecutivoPrincipal">
                            <simple>$simple{body.get(0).ejecutivoPrincipal.toUpperCase()}</simple>
                        </setProperty>
                        <setProperty id="_setProperty15" propertyName="email">
                            <simple>$simple{body.get(0).email}</simple>
                        </setProperty>
                        <bean id="_bean4"
                            method="validarCrearClienteRequest" ref="beanRouteFacade"/>
                        <to id="_to8" uri="direct:crearCliente"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <removeHeaders id="_removeHeaders4" pattern="*"/>
                <setProperty id="_setProperty19" propertyName="Exchange.CONTENT_TYPE">
                    <constant>text/xml;charset=utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty20" propertyName="Exchange.HTTP_CHARACTER_ENCODING">
                    <constant>utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty21" propertyName="Exchange.CONTENT_ENCODING">
                    <constant>utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty22" propertyName="Exchange.CHARSET_NAME">
                    <constant>utf-8</constant>
                </setProperty>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioPropertyCodigo" propertyName="codigoError">
                        <simple>1</simple>
                    </setProperty>
                    <to id="toInicioExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="servicioPersona">
            <from id="servicioPersonafrom" uri="direct:servicioPersona"/>
            <doTry id="servicioPersonaTry">
                <removeHeaders id="servicioPersonaRemoveHeaders" pattern="*"/>
                <setProperty id="servicioPersonaSetPropertyUserId" propertyName="userIdServicePersona">
                    <simple>{{enrolamiento.servicio.persona.userid}}</simple>
                </setProperty>
                <setHeader headerName="operationName" id="servicioPersonaSetHeaderOpName">
                    <constant>traerDatosBasicos</constant>
                </setHeader>
                <setHeader headerName="SOAPAction" id="servicioPersonaSetHeaderSoapAction">
                    <constant>persona.core.coopeuch.cl/serviciopersona/traerDatosBasicos</constant>
                </setHeader>
                <setHeader headerName="operationNamespace" id="servicioPersonaSetHeaderOpNamespace">
                    <constant>persona.core.coopeuch.cl/serviciopersona</constant>
                </setHeader>
                <bean id="servicioPersonaRequestBean"
                    method="requestServicioPersona" ref="beanRouteFacade"/>
                <to id="servicioPersonaTo" uri="cxf:bean:endpointServicioPersona"/>
                <bean id="servicioPersonaResponseBean"
                    method="responseServicioPersona" ref="beanRouteFacade"/>
                <choice id="servicioPersonaChoice">
                    <when id="servicioPersonaWhen">
                        <simple>${body} == 'OK'</simple>
                        <log id="logTraceServicioPersonaOk"
                            loggingLevel="TRACE" message="Servicio Persona respondio satisfactoriamente"/>
                        <to id="toListasNegras" uri="direct:servicioListasNegras"/>
                    </when>
                </choice>
                <doCatch id="responseServicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="servicioPersonaPropertyCodigo" propertyName="codigoError">
                        <simple>2</simple>
                    </setProperty>
                    <to id="toResponseServicioPersonaExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="servicioListasNegras">
            <from id="servicioListasNegrasfrom" uri="direct:servicioListasNegras"/>
            <doTry id="servicioListasNegrasTry">
                <removeHeaders id="servicioListasNegrasRemoveHeaders" pattern="*"/>
                <setHeader headerName="operationName" id="servicioListasNegrasSetHeaderOpName">
                    <constant>consultar</constant>
                </setHeader>
                <setHeader headerName="SOAPAction" id="servicioListasNegrasSetHeaderSoapAction">
                    <constant>http://integracion.coopeuch.cl/WSListasNegras/consultar</constant>
                </setHeader>
                <setHeader headerName="operationNamespace" id="servicioListasNegrasSetHeaderOpNamespace">
                    <constant>http://integracion.coopeuch.cl/WSListasNegras/</constant>
                </setHeader>
                <bean id="servicioListasNegrasRequestBean"
                    method="requestServicioListasNegras" ref="beanRouteFacade"/>
                <to id="servicioListasNegrasTo" uri="cxf:bean:endpointServicioListasNegras"/>
                <bean id="servicioListasNegrasResponseBean"
                    method="responseServicioListasNegras" ref="beanRouteFacade"/>
                <choice id="servicioListasNegrasChoice">
                    <when id="servicioListasNegrasWhen">
                        <simple>${body} == 'OK'</simple>
                        <log id="logTraceServicioListaNegraOk"
                            loggingLevel="TRACE" message="Servicio lista negra respondio satisfactoriamente"/>
                        <to id="toCuotaParticipacion" uri="direct:crearCuota"/>
                    </when>
                </choice>
                <doCatch id="servicioListasNegrasDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="servicioListasNegrasPropertyCodigo" propertyName="codigoError">
                        <simple>3</simple>
                    </setProperty>
                    <to id="toServicioListasNegrasExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="crear-cta-participacion">
            <from id="crearParticipacionFrom" uri="direct:crearCuota"/>
            <doTry id="crearParticipacionTry">
                <removeHeaders id="crearParticipacionRemoveHeaders" pattern="*"/>
                <setBody id="crearParticipacionXMLSetBody">
                    <simple>&lt;trama&gt;&lt;/trama&gt;</simple>
                </setBody>
                <setHeader headerName="requestUser" id="headerUserParticipacion">
                    <simple>${exchangeProperty.usuario}</simple>
                </setHeader>
                <setHeader headerName="requestCanalLlamada" id="headerCanalLlamadaParticipacion">
                    <simple>${exchangeProperty.canal}</simple>
                </setHeader>
                <setHeader headerName="requestRut" id="headerRutParticipacion">
                    <simple>${exchangeProperty.rut}</simple>
                </setHeader>
                <setHeader headerName="requestDiaCobro" id="headerDiaCobroParticipacion">
                    <simple>${exchangeProperty.diaCobro}</simple>
                </setHeader>
                <setHeader headerName="requestCuotas" id="headerCuotasParticipacion">
                    <simple>${exchangeProperty.cantidadCuotas}</simple>
                </setHeader>
                <setHeader headerName="requestNumeroCuenta" id="headerNumeroCuenta">
                    <simple>${exchangeProperty.cuentaOrigen}</simple>
                </setHeader>
                <bean id="crearParticipacionUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="crearParticipacionToXSLTrama" uri="xslt://etc/xsl/request/IOC712001I_crear_participacion.xsl"/>
                <log id="logTraceTramaParticipacion"
                    loggingLevel="TRACE" message="trama generada = ${body}"/>
                <to id="crearParticipacionToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="logTraceTramaParticipacionResponse"
                    loggingLevel="TRACE" message="trama recibida = ${body}"/>
                <choice id="crearParticipacionChoice">
                    <when id="correctoParticipacionWhen">
                        <simple>${body} contains 'IOC712001O'</simple>
                        <bean id="crearParticipacionBean"
                            method="procesarCrearParticipacion" ref="beanRouteFacade"/>
                        <to id="toServicioPago" uri="direct:servicioPago"/>
                    </when>
                    <otherwise id="errorParticipacionIOC">
                        <transform id="crearParticipacionTransform">
                            <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                        </transform>
                        <to id="crearParticipacionToXSLSOAP" uri="xslt://etc/xsl/response/IOC712001O_crear_participacion.xsl?saxon=true"/>
                        <convertBodyTo
                            id="crearParticipacionConvertBodyToResponse" type="cl.coopeuch.integracion.enrolamiento.wsdl.EnrolarClienteResponse"/>
                    </otherwise>
                </choice>
                <doCatch id="crearParticipacionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="crearParticipacionPropertyCodigo" propertyName="codigoError">
                        <simple>4</simple>
                    </setProperty>
                    <to id="toCrearParticipacionExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="servicioPago">
            <from id="servicioPagofrom" uri="direct:servicioPago"/>
            <doTry id="servicioPagoTry">
                <removeHeaders id="servicioPagoRemoveHeaders" pattern="*"/>
                <setHeader headerName="operationName" id="servicioPagoSetHeaderOpName">
                    <constant>pagoCuotasParticipacion</constant>
                </setHeader>
                <setHeader headerName="SOAPAction" id="servicioPagoSetHeaderSoapAction">
                    <constant>http://www.example.org/Pago/pagoCuotasParticipacion</constant>
                </setHeader>
                <setHeader headerName="operationNamespace" id="servicioPagoSetHeaderOpNamespace">
                    <constant>pago.core.coopeuch.cl/serviciopago</constant>
                </setHeader>
                <bean id="servicioPagoRequestBean"
                    method="requestServicioPago" ref="beanRouteFacade"/>
                <to id="servicioPagoTo" uri="cxf:bean:endpointServicioPago"/>
                <bean id="servicioPagoResponseBean"
                    method="responseServicioPago" ref="beanRouteFacade"/>
                <choice id="servicioPagoChoice">
                    <when id="servicioPagoWhenOk">
                        <simple>${body} == 'OK'</simple>
                        <log id="logTraceServicioPagoOk"
                            loggingLevel="TRACE" message="Servicio pago respondio satisfactoriamente"/>
                        <to id="toCrearSocio" uri="direct:crearSocio"/>
                    </when>
                    <otherwise id="errorServicioPago">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionServicioPago" message="No se puedo realizar el pago, el servicio pagos ha retornado un(os) error(es)"/>
                    </otherwise>
                </choice>
                <doCatch id="responseServicioPagoDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="servicioPagoPropertyCodigo" propertyName="codigoError">
                        <simple>5</simple>
                    </setProperty>
                    <to id="toResponseServicioPagoExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="crear-socio">
            <from id="crearSocioFrom" uri="direct:crearSocio"/>
            <doTry id="crearSocioTry">
                <removeHeaders id="crearSocioRemoveHeaders" pattern="*"/>
                <setBody id="crearSocioXMLSetBody">
                    <simple>&lt;trama&gt;&lt;/trama&gt;</simple>
                </setBody>
                <setHeader headerName="requestUser" id="headerUserSocio">
                    <simple>${exchangeProperty.usuario}</simple>
                </setHeader>
                <setHeader headerName="requestRut" id="headerRutSocio">
                    <simple>${exchangeProperty.rut}</simple>
                </setHeader>
                <setHeader headerName="requestCanalLlamada" id="headerCanalSocio">
                    <simple>${exchangeProperty.canal}</simple>
                </setHeader>
                <setHeader headerName="requestNroCuota" id="headerCuentaSocio">
                    <simple>${exchangeProperty.nroCuota}</simple>
                </setHeader>
                <bean id="crearSocioUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="crearSocioToXSLTrama" uri="xslt://etc/xsl/request/IOC713001I_crear_socio.xsl"/>
                <log id="logTraceSocio" loggingLevel="TRACE" message="trama generada = ${body}"/>
                <to id="crearSocioToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="logTraceSocioResponse" loggingLevel="TRACE" message="trama recibida = ${body}"/>
                <transform id="crearSocioTransform">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="crearSocioToXSLSOAP" uri="xslt://etc/xsl/response/IOC713001O_crear_socio.xsl?saxon=true"/>
                <convertBodyTo id="crearSocioConvertBodyToResponse" type="cl.coopeuch.integracion.enrolamiento.wsdl.EnrolarClienteResponse"/>
                <log id="logTraceSocioFin" loggingLevel="TRACE" message="Ejecucion servicio enrolamiento metodo enrolar terminada satisfactoriamente"/>
                <doCatch id="crearSocioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="crearSocioPropertyCodigo" propertyName="codigoError">
                        <simple>6</simple>
                    </setProperty>
                    <to id="toCrearSocioExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="asociarCuenta">
            <from id="asociarCuentafrom" uri="direct:asociarCuenta"/>
            <doTry id="asociarCuentaTry">
                <setBody id="asociarCuentaSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <marshal id="asociarCuentaMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.enrolamiento.wsdl"/>
                </marshal>
                <convertBodyTo id="asociarCuentaConvertBodyToString" type="java.lang.String"/>
                <bean id="asociarCuentaUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="asociarCuentaToXSLTrama" uri="xslt://etc/xsl/request/IOC712002I_asociar.xsl"/>
                <log id="tramaAsociar" loggingLevel="TRACE" message="Trama generada = ${body}"/>
                <to id="asociarCuentaToAmq" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                <log id="tramaAsociarResponse" loggingLevel="TRACE" message="Trama recibida = ${body}"/>
                <transform id="asociarCuentaTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="asociarCuentaToXSLSOAP" uri="xslt://etc/xsl/response/IOC712002O_asociar.xsl?saxon=true"/>
                <convertBodyTo id="asociarCuentaConvertBodyToResponse" type="cl.coopeuch.integracion.enrolamiento.wsdl.AsociarCuentaDebitoResponse"/>
                <removeHeaders id="_removeHeaders5" pattern="*"/>
                <setProperty id="_setProperty23" propertyName="Exchange.CONTENT_TYPE">
                    <constant>text/xml;charset=utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty24" propertyName="Exchange.HTTP_CHARACTER_ENCODING">
                    <constant>utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty25" propertyName="Exchange.CONTENT_ENCODING">
                    <constant>utf-8</constant>
                </setProperty>
                <setProperty id="_setProperty26" propertyName="Exchange.CHARSET_NAME">
                    <constant>utf-8</constant>
                </setProperty>
                <doCatch id="asociarCuentaDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="asociarCuentaPropertyCodigo" propertyName="codigoError">
                        <simple>900</simple>
                    </setProperty>
                    <to id="toAsociarCuentaExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="crear-cliente">
            <from id="crearClienteFrom" uri="direct:crearCliente"/>
            <doTry id="_doTry1">
                <setHeader headerName="datoNacionalidad" id="_setHeader8">
                    <simple>{{enrolamiento.servicio.parametro.nacionalidad}}</simple>
                </setHeader>
                <setHeader headerName="datoDescripcionNacionalidad" id="_setHeader9">
                    <simple>{{enrolamiento.servicio.parametro.nacionalidad.descripcion}}</simple>
                </setHeader>
                <choice id="_choice2">
                    <when id="_when2">
                        <simple>${exchangeProperty.nacionalidad} == ${headers.datoNacionalidad}</simple>
                        <setProperty id="_setProperty17" propertyName="descripcionNacionalidad">
                            <simple>${headers.datoDescripcionNacionalidad}</simple>
                        </setProperty>
                    </when>
                    <otherwise id="_otherwise2">
                        <to id="_to10" uri="direct:servicioParametro"/>
                        <setProperty id="_setProperty18" propertyName="descripcionNacionalidad">
                            <simple>${body}</simple>
                        </setProperty>
                    </otherwise>
                </choice>
                <to id="_to5" uri="direct:servicioListasNegras-verificar"/>
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${body} == 'OK'</simple>
                        <log id="_log7" loggingLevel="TRACE" message="Servicio lista negra respondio satisfactoriamente"/>
                        <removeHeaders id="_removeHeaders1" pattern="*"/>
                        <setBody id="_setBody1">
                            <simple>&lt;trama&gt;&lt;/trama&gt;</simple>
                        </setBody>
                        <setBody id="setBodyEntrada">
                            <simple>${exchangeProperty.bodyEntrada}</simple>
                        </setBody>
                        <log id="_log1" message="body 2: ${body}"/>
                        <to id="_to1" uri="xslt://etc/xsl/request/IOC719001I_crear_cliente.xsl"/>
                        <log id="_log2" message="body: ${body}"/>
                        <bean id="_bean1"
                            method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                        <to id="_to2" uri="beanAMQ:{{amq.queue.req}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyTo={{amq.queue.res}}&amp;replyToType=Shared&amp;replyToOverride={{amq.queue.res}}&amp;synchronous=true&amp;exchangePattern=InOut"/>
                        <transform id="_transform1">
                            <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                        </transform>
                        <setHeader headerName="rutCliente" id="_setHeader1">
                            <simple>${exchangeProperty.rutCrearCliente}</simple>
                        </setHeader>
                        <to id="_to3" uri="xslt://etc/xsl/response/IOC719001O_crear_cliente.xsl?saxon=true"/>
                        <convertBodyTo id="_convertBodyTo1" type="cl.coopeuch.integracion.enrolamiento.wsdl.CrearClienteResponse"/>
                    </when>
                    <otherwise id="_otherwise1">
                        <transform id="_transform1">
                            <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                        </transform>
                        <to id="_to3" uri="xslt://etc/xsl/response/IOC719001O_crear_cliente.xsl?saxon=true"/>
                        <convertBodyTo id="_convertBodyTo1" type="cl.coopeuch.integracion.enrolamiento.wsdl.CrearClienteResponse"/>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch1">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty40" propertyName="codigoError">
                        <simple>4</simple>
                    </setProperty>
                    <to id="_to4" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="_route1">
            <from id="_from2" uri="direct:servicioParametro"/>
            <doTry id="_doTry3">
                <removeHeaders id="_removeHeaders3" pattern="*"/>
                <setHeader headerName="operationName" id="_setHeader5">
                    <constant>consultaParametros</constant>
                </setHeader>
                <setHeader headerName="SOAPAction" id="_setHeader6">
                    <constant>http://www.example.org/Parametro/consultaParametros</constant>
                </setHeader>
                <setHeader headerName="operationNamespace" id="_setHeader7">
                    <constant>parametro.core.coopeuch.cl/parametro</constant>
                </setHeader>
                <bean id="_bean5" method="requestServicioParametro" ref="beanRouteFacade"/>
                <to id="_to11" uri="cxf:bean:endpointServicioParametro"/>
                <bean id="servicioParametroResponseBean"
                    method="responseServicioParametro" ref="beanRouteFacade"/>
                <doCatch id="_doCatch2">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty2" propertyName="codigoError">
                        <simple>3</simple>
                    </setProperty>
                    <to id="_to7" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="servicioListasNegras-verificar">
            <from id="_from1" uri="direct:servicioListasNegras-verificar"/>
            <doTry id="_doTry2">
                <removeHeaders id="_removeHeaders2" pattern="*"/>
                <setHeader headerName="operationName" id="_setHeader2">
                    <constant>verificar</constant>
                </setHeader>
                <setHeader headerName="SOAPAction" id="_setHeader3">
                    <constant>http://integracion.coopeuch.cl/WSListasNegras/verificar</constant>
                </setHeader>
                <setHeader headerName="operationNamespace" id="_setHeader4">
                    <constant>http://integracion.coopeuch.cl/WSListasNegras/</constant>
                </setHeader>
                <bean id="_bean2"
                    method="requestServicioListasNegrasVerificar" ref="beanRouteFacade"/>
                <to id="_to6" uri="cxf:bean:endpointServicioListasNegras"/>
                <bean id="_bean3"
                    method="responseServicioListasNegrasVerificar" ref="beanRouteFacade"/>
                <doCatch id="_doCatch3">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty16" propertyName="codigoError">
                        <simple>3</simple>
                    </setProperty>
                    <to id="_to9" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
