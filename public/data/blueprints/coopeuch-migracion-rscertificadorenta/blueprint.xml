<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd              http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <!-- Property Placeholder -->
    <cm:property-placeholder id="property"
        persistent-id="serviceProperties" update-strategy="reload"/>
    <!-- Configure CXF endpoint -->
    <cxf:cxfEndpoint address="/ServicioCertificadoRenta"
        id="servicioCertificadoRentaEndpoint"
        serviceClass="cl.coopeuch.core.certificadorenta.serviciocertificadorenta.CertificadoRentaPortType" wsdlURL="wsdl/ServicioCertificadoRenta.wsdl"/>
    <!-- Configure Active MQ connection factory -->
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="AMQ">
        <property name="brokerURL" value="${amq.broker.url}"/>
        <property name="userName" value="${amq.username}"/>
        <property name="password" value="${amq.password}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSybase">
        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
        <property name="url" value="${jdbc.sybase.url.certificadorenta}/DepositoPlazo;charset=iso_1"/>
        <property name="username" value="${jdbc.sybase.username.certificadorenta}"/>
        <property name="password" value="${jdbc.sybase.password.certificadorenta}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.sybase.timeBetweenEvictionRunsMillis.certificadorenta}"/>
        <property name="numTestsPerEvictionRun" value="${jdbc.sybase.numTestsPerEvictionRun.certificadorenta}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.sybase.minEvictableIdleTimeMillis.certificadorenta}"/>
        <property name="maxActive" value="${jdbc.sybase.maxActive.certificadorenta}"/>        
    </bean>
    <bean class="cl.coopeuch.util.db.StoredProcedureBean" id="pa_selcertifdeclaradet_new">
        <argument ref="dataSourceSybase"/>
        <argument value="java.sql.Types"/>
        <argument value="pa_selcertifdeclaradet_new"/>
        <argument value="false"/>
        <argument>
            <list>
                <map>
                    <entry key="name" value="Rut"/>
                    <entry key="mode" value="in"/>
                    <entry key="type" value="integer"/>
                </map>
                <map>
                    <entry key="name" value="Ano"/>
                    <entry key="mode" value="in"/>
                    <entry key="type" value="integer"/>
                </map>
                <map>
                    <entry key="name" value="resultSet"/>
                    <entry key="mode" value="out"/>
                    <entry key="type" value="ResultSet"/>
                </map>
            </list>
        </argument>
    </bean>
    <camelContext id="servicio-certificado-renta-context" xmlns="http://camel.apache.org/schema/blueprint">
        <dataFormats>
            <xmljson elementName="resultado" id="xmljsonJson2Xml" rootName="salida"/>
            <json id="gsonMap2Json" library="Gson" prettyPrint="true"/>
        </dataFormats>
        <route id="getListaRentas">
            <from id="servicioCertificadoRentaEndpointListener" uri="cxf:bean:servicioCertificadoRentaEndpoint?DataFormat=MESSAGE"/>
            <doTry id="getListaRentasTry">
                <convertBodyTo id="getListaRentasBodyTo1" type="java.lang.String"/>
                <bean beanType="cl.coopeuch.util.other.BodyBackup"
                    id="backupBody" method="backupBody"/>
                <to id="getListaRentasValidator" uri="validator:xsd/soapGetListaRentas.xsd"/>
                <setHeader headerName="Rut" id="getListaRentasHeaderRut">
                    <xpath resultType="java.lang.String">//rut/text()</xpath>
                </setHeader>
                <setHeader headerName="Ano" id="getListaRentasHeaderAno">
                    <xpath resultType="java.lang.String">//anio/text()</xpath>
                </setHeader>
                <to id="pa_selcertifdeclaradet_new" uri="bean:pa_selcertifdeclaradet_new"/>
                <marshal id="getListaRentasMarshal" ref="gsonMap2Json"/>
                <convertBodyTo id="getListaRentasBodyTo" type="java.lang.String"/>
                <transform id="eliminarTokenTransform">
                    <simple>${in.body.replaceAll('\.0000','')}</simple>
                </transform>
                <unmarshal id="getListaRentasUnMarshal" ref="xmljsonJson2Xml"/>
                <to id="getListaRentasXml2xml" uri="xslt://transformations/out/resultset2xml_getListaRentas.xsl?saxon=true"/>
                <doCatch id="getListaRentasCatch">
                    <exception>java.lang.Exception</exception>
                    <exception>java.io.IOException</exception>
                    <bean beanType="cl.coopeuch.util.other.BodyBackup"
                        id="getListaRentasRestoreBody" method="restoreBody"/>
                    <setBody id="getListaRentasSetBodyError">
                        <simple>ERROR:${exception}:${body}</simple>
                    </setBody>
                    <to id="getListaRentasFault" uri="AMQ:{{amq.queue.amq.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                    <bean beanType="cl.coopeuch.util.error.SetBodyError"
                        id="getListaRentasSetBodyError" method="setBodyError"/>
                </doCatch>
                <doFinally id="getListaRentasFinally"/>
            </doTry>
        </route>
    </camelContext>
</blueprint>
