<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    
    
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    
    <cm:property-placeholder id="propertyGlobalDb2"
        persistent-id="globalDb2" placeholder-prefix="[["
        placeholder-suffix="]]" update-strategy="reload"/>
    
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wscartolaconsumo" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
        

    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="AMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.cartola.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSCartolaConsumo" id="endpointWSCartola"
        serviceClass="cl.coopeuch.integracion.cartola.wsdl.WSCartolaSOAPPortType" wsdlURL="etc/wsdl/WSCartolaConsumo.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSCartolaConsumo" id="endpointRSCartola" loggingFeatureEnabled="true" serviceClass="cl.coopeuch.integracion.cartola.wsdl.WSCartolaSOAPPortType"/>
    
    <camelcxf:cxfEndpoint
        address="[{wscartolaconsumo.servicio.wsdocumento.endpoint}]"
        id="endpointWsdocumento" loggingFeatureEnabled="true"
        serviceClass="cl.coopeuch.integracion.cartola.wsdl.wsdocumento.WSDocumentoSOAPPortType" wsdlURL="etc/wsdl/WSDocumento.wsdl"/>
        
    <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProvider"/>
    
    <bean class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" id="dataSourceSqlDb2">
        <property name="driverClassName" value="com.ibm.as400.access.AS400JDBCDriver"/>
        <property name="url" value="[[jdbc.db2.url.servicio]]"/>
        <property name="username" value="[[jdbc.db2.username.convenios]]"/>
        <property name="password" value="[[jdbc.db2.password.convenios]]"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="numTestsPerEvictionRun" value="5"/>
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="maxActive" value="5"/>
    </bean>
    
    
    <camelContext id="servicio-cartola-consumo" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="soapInicio" uri="cxf:bean:endpointWSCartola"/>
            <to id="soapToInicioWs" uri="direct:iniciows"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSCartola"/>
            <to id="restToInicioWs" uri="direct:iniciows"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:iniciows"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionBuscar">
                        <simple>${header.operationName} == 'consultarExistencia'</simple>
                        <to id="toBuscar" uri="direct:consultarExistencia"/>
                    </when>
                     <when id="inicioWhenOperacionCrear">
                        <simple>${header.operationName} == 'crear'</simple>
                        <to id="toBuscar" uri="direct:crear"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
 
        <route id="consultarExistencia" >

            <from id="fromconsultarExistencia" uri="direct:consultarExistencia"/>

            <doTry>
                
                <setProperty id="setPropertyConsultarExistenciaUserId" propertyName="userId">
                    <simple>$simple{body.get(0).userId}</simple>
                </setProperty>
              
                <setProperty id="setPropertyConsultarExistenciaCanal" propertyName="canalLlamada">
                    <simple>$simple{body.get(0).canalLlamada}</simple>
                </setProperty>
               
                <setProperty id="setPropertyConsultarExistenciaRut" propertyName="rut">
                    <simple>$simple{body.get(0).rut}</simple>
                </setProperty>
               
                <setProperty id="setPropertyConsultarExistenciaNumeroOperacion" propertyName="numeroOperacion">
                    <simple >$simple{body.get(0).numeroOperacion}</simple>
                </setProperty>
                
                <to id="toSqlStoredConsultarExistencia" uri="sql-stored:classpath:etc/sql/paSelCartolaConsumoConsultarExistenciaWS.sql?dataSource=dataSourceSqlDb2"/>

                <setBody id="setBodyConsultarExistencia">
                    <simple>${body[#result-set-1]}</simple>
                </setBody>
                <bean method="processDBResultConsultarExistencia" ref="beanRouteFacade"/>

                <unmarshal id="unmarshalConsultarExistencia">
                    <jaxb contextPath="cl.coopeuch.integracion.cartola.wsdl"/>
                </unmarshal>

                <doCatch>
                    <exception>java.lang.Exception</exception>
					<log message="Body = ${body}" />
					<log message="Execepcion ${exception.message}" />    
                    <setProperty id="setPropertyConsultarExistenciaCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>

                    <to id="toDirectExcepcionConsultarExistencia" uri="direct:excepcion"/>

                </doCatch>
            </doTry>
    </route>
        
        
        <route id="crear" >
			<from id="fromconsultarExistencia" uri="direct:crear"/>
			
			<bean id="routeCrearToMethodCrearRequestDatosDocumento" method="requestDatosDocumento" ref="beanRouteFacade"/>
		 
		    <setHeader headerName="operationName" id="crearSetHeaderOpName">
                <constant>consultar</constant>
            </setHeader>
            <setHeader headerName="SOAPAction" id="crearSetHeaderSoapAction">
                <constant>http://integracion.coopeuch.cl/WSDatosDocumento/consultar</constant>
            </setHeader>
            <setHeader headerName="operationNamespace" id="crearSetHeaderOpNamespace">
                <constant>http://integracion.coopeuch.cl/WSDatosDocumento/</constant>
            </setHeader>
			
			<to id="routeCrearToWSDatosDocumento" uri="AMQ:{{colas.servicio.datos.documento.in.temp}}??preserveMessageQos=true&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false"/>
			
			<bean id="routeCrearToMethodCrearRequestGenerar" method="requestDocumento" ref="beanRouteFacade" />
			
			
			 <setHeader headerName="operationName" id="wsdocumentoSetHeaderOpName">
            <constant>generarPDF</constant>
        </setHeader>
        <setHeader headerName="SOAPAction" id="wsdocumentoSetHeaderSoapAction">
            <constant>http://integracion.coopeuch.cl/WSDocumento/generarPDF</constant>
        </setHeader>
        <setHeader headerName="operationNamespace" id="wsdocumentoSetHeaderOpNamespace">
            <constant>http://integracion.coopeuch.cl/WSDocumento/</constant>
        </setHeader>
        
        
			<to id="routeCrearToWebserviceWSDocumento" uri="cxf:bean:endpointWsdocumento"/>
			
			<bean id="routeCrearBeanMethodResponseCrear" method="responseCrear" ref="beanRouteFacade" />
			<unmarshal id="routeCrearUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.cartola.wsdl"/>
                </unmarshal>
		</route>
        
        
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="AMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
        
        
        
        
    </camelContext>
</blueprint>
