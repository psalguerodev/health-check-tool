<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wsverificasolicitudes" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean
        class="cl.coopeuch.integracion.servicioverificacionsolicitudes.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSVerificaSolicitudes"
        id="endpointWSVerificaSolicitudes"
        serviceClass="cl.coopeuch.integracion.servicios.wsdl.WSVerificaSolicitudesSOAPPortType" wsdlURL="etc/wsdl/WSVerificaSolicitudes.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSVerificaSolicitudes"
        id="endpointRSVerificaSolicitudes" serviceClass="cl.coopeuch.integracion.servicios.wsdl.WSVerificaSolicitudesSOAPPortType"/>
    <camelContext id="servicio-wsverificacionsolicitudes" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSVerificaSolicitudes"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSVerificaSolicitudes"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionCrear">
                        <simple>${header.operationName} == 'enviar'</simple>
                        <to id="toCrear" uri="direct:enviar"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="enviar" streamCache="true">
            <from id="consultarFrom" uri="direct:enviar"/>
            <doTry id="_doTry1">
                <setProperty id="_setProperty1" propertyName="Origen">
                    <simple>${body.getOrigen()}</simple>
                </setProperty>
                <setProperty id="_setProperty2" propertyName="NumeroSolicitud">
                    <simple>${body.getNumeroSolicitud()}</simple>
                </setProperty>
                <setProperty id="_setProperty3" propertyName="IndicadorCurseDG">
                    <simple resultType="java.lang.Boolean">${body.isIndicadorCurseDG()}</simple>
                </setProperty>
                <setProperty id="_setProperty4" propertyName="FechaMarca">
                    <simple>${body.getFechaMarca()}</simple>
                </setProperty>
                <bean method="ajusteFecha" ref="beanRouteFacade"/>             
                <to id="_to1" uri="velocity:etc/xsl/request/RequestSoap.vm"/>
                <convertBodyTo id="_convertBodyTo2" type="String"/>
                <setHeader headerName="Content-Type" id="_setHeader4">
                    <constant>application/xml</constant>
                </setHeader>
                <to id="_to2" uri="{{wscredito.endpoit}}?httpClient.connectTimeout=10000&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=true&amp;httpMethod=POST"/>
                <choice>
                	<when>
                		<xpath>//*[name() = 'error']</xpath>
                		
                		<log message="TIENE ERROR"/>
                		<setProperty propertyName="descripcion">
		                    <xpath resultType="String">//*[name() = 'descripcion']</xpath>
		                </setProperty>
		                <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionErrorWsGestionCredito" message="${property.descripcion}"/>
                	</when>
                	<otherwise>
                		<setProperty  propertyName="estado">
		                    <xpath resultType="String">//*[name() = 'estado']</xpath>
		                </setProperty>
		                <bean id="_bean1" method="validarEstado" ref="beanRouteFacade"/>
		                <choice id="_choice1">
		                    <when id="_when1">
		                        <simple>${property.estadonook}</simple>
		                        <bean id="_bean1" method="reponseSolicitudes" ref="beanRouteFacade"/>
		                        <stop id="_stop1"/>
		                    </when>
		                </choice>
		                 <to id="_to5" uri="direct:envioSQS"/>
                	</otherwise>
                </choice>
				
                <doCatch id="_doCatch2">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty8" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty id="_setProperty9" propertyName="awserror">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="_to4" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
           
        </route>
        <route id="_route1">
            <from id="_from1" uri="direct:envioSQS"/>
            <doTry id="_doTry2">
                <to id="_to3" uri="velocity:etc/xsl/response/ResponseRestjms.vm"/>
                <log id="_log2" loggingLevel="INFO" message="Mensaje enviado a la COLA :::::::::  ${body}"/>
                <bean id="enviaMensajeSQS" method="enviaMensajeSQS" ref="beanRouteFacade"/>
                <bean id="_bean2" method="reponseSolicitudes" ref="beanRouteFacade"/>
                <stop id="_stop2"/>
                <doCatch id="_doCatch1">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty6" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty id="_setProperty7" propertyName="awserror">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="simularExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <bean id="enviaMensajeerrorSQS" method="excepcionAmqSQS" ref="beanRouteFacade"/>
                <log id="_log1" loggingLevel="ERROR" message="!!!!!!!!!   ${body}"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
            <stop/>
        </route>
    </camelContext>
</blueprint>
