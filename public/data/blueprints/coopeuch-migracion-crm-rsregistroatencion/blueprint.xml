<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
        
    <cm:property-placeholder id="propertyService" persistent-id="wsregistroatencioncrm"
        placeholder-prefix="{{" placeholder-suffix="}}" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.wsregistroatencioncrm.util.RouteFacade" id="beanRouteFacade"/>
    <bean class="cl.coopeuch.integracion.wsregistroatencioncrm.exception.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    
    <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="cxfJsonProvider">
        <property name="dropRootElement" value="true"/>
        <property name="supportUnwrapped" value="true"/>
    </bean>
    
    <camelcxf:cxfEndpoint address="/crm/WSRegistroAtencion"
        id="endpointWSRegistroAtencionCRM"
        serviceClass="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl.WSRegistroAtencionCRMSOAPPortType" wsdlURL="etc/wsdl/WSRegistroAtencionCRM.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    
	<camelcxf:rsServer address="/crm/RSRegistroAtencion"
        id="endpointRSRegistroAtencionCRM" serviceClass="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl.WSRegistroAtencionCRMSOAPPortType">
        <camelcxf:inInterceptors>
	       <ref component-id="ErrorExcepcionInterceptor"/>
	   	</camelcxf:inInterceptors>
	</camelcxf:rsServer>
        
        
        
    <camelcxf:rsClient address="{{wsregistroAtencionCRM.url.crm}}" 
        id="toEnpointRegistroAtencionCRM" loggingFeatureEnabled="true">
	     <camelcxf:providers>
	         <ref component-id="cxfJsonProvider"/>
	     </camelcxf:providers>
     </camelcxf:rsClient>
        
        
        
    <camelContext id="servicio-wsregistroatencioncrm" xmlns="http://camel.apache.org/schema/blueprint">
		<route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSRegistroAtencionCRM"/>
            <setProperty propertyName="tipoConsumo">
                    <constant>xml</constant>
                </setProperty>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSRegistroAtencionCRM"/>
            <setProperty propertyName="tipoConsumo">
                    <constant>json</constant>
                </setProperty>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
			<from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionObtenerRegistroAtencion">
                        <simple>${header.operationName} == 'obtener'</simple>
                        <to id="toCrear" uri="direct:obtenerRegistroAtencion"/>
                    </when>                    
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
        			<log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty  propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="obtenerRegistroAtencion">
            <from id="obtenerRegistroAtencionFrom" uri="direct:obtenerRegistroAtencion"/>
            <doTry id="obtenerRegistroAtencionTry">
                <marshal id="obtenerRegistroAtencionMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl"/>
                </marshal>
                <convertBodyTo id="crearConvertBodyToString" type="java.lang.String"/>
                
                <bean ref="beanRouteFacade" method="mapeoRequestRAtencion"/>
       			<marshal>
                    <json library="Jackson" />
                </marshal>
                <convertBodyTo type="java.lang.String"/>
                <removeHeaders pattern="*"/>
                <setHeader headerName="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <setHeader headerName="Exchange.HTTP_METHOD">
                    <constant>POST</constant>
                </setHeader>
                <to uri="cxfrs:bean:toEnpointRegistroAtencionCRM?throwExceptionOnFailure=false"/>
                <choice>
                    <when>
                        <simple>${header.CamelHttpResponseCode} == '201' || ${header.CamelHttpResponseCode} == '200'</simple>
                        <convertBodyTo type="java.lang.String"/>
                        <unmarshal>
                            <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.wsregistroatencioncrm.model.RegistroAtencionResponseCRM"/>
                        </unmarshal>
                        <bean id="registroAtencionResponse" method="responseRegistroAtencionCRM" ref="beanRouteFacade"/>
                        <choice>
		            		<when>
		            			<simple>${property.tipoConsumo} contains 'xml'</simple>
		            			<unmarshal>
				                    <jaxb contextPath="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl" />
				                </unmarshal>
		            		</when>
		            		<otherwise>
		            			<marshal>
								    <json library="Jackson" enableFeatures="WRAP_ROOT_VALUE,ACCEPT_SINGLE_VALUE_AS_ARRAY" include="NON_NULL" useList="true"
								          unmarshalTypeName="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl.ObtenerResponse"/>
								</marshal>
								<convertBodyTo type="String"/>
		            		</otherwise>
		            	</choice>
                    </when>
                    <otherwise>
                    	<convertBodyTo type="java.lang.String"/>
                        <unmarshal>
                            <json library="Jackson" unmarshalTypeName="cl.coopeuch.integracion.wsregistroatencioncrm.model.RegistroAtencionResponseErrorCRM"/>
                        </unmarshal>
<!--                     	<throwException exceptionType="cl.coopeuch.integracion.wsregistroatencioncrm.exception.ErrorRegistroAtencionException" message="${body.getError().getMessage()}"/> -->
                    	<throwException exceptionType="cl.coopeuch.integracion.wsregistroatencioncrm.exception.ErrorRegistroAtencionException" message="${body.getMensaje()}"/>
                    </otherwise>
                </choice>
                <stop/>         
                
				<unmarshal id="crearUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.wsregistroatencioncrm.wsdl"/>
                </unmarshal>
                <doCatch>
                    <exception>cl.coopeuch.integracion.wsregistroatencioncrm.exception.ErrorRegistroAtencionException</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
        			<log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
                    <setProperty id="crearCodigoErrorAMQ" propertyName="codigoError">
                        <constant>400</constant>
                    </setProperty>
                    <setProperty  propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="crearDoCatchAMQ">
                    <exception>cl.coopeuch.integracion.wsregistroatencioncrm.exception.ErrorEstructuraRegistroAtencionException</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
        			<log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
                    <setProperty id="crearCodigoErrorAMQ" propertyName="codigoError">
                        <constant>400</constant>
                    </setProperty>
                    <setProperty  propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="toCrearExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
				<doCatch id="crearDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
        			<log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
                    <setProperty id="crearCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <setProperty  propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="toCrearExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="crearDoCatch">
                    <exception>java.lang.Exception</exception>
                    <handled>
			            <constant>true</constant>
			        </handled>
                    <log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || errores: ${exception.message}" loggingLevel="ERROR"/>
        			<log message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" loggingLevel="DEBUG"/>
					<setProperty id="crearCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <setProperty  propertyName="descripcionError">
                        <simple>${exception.message}</simple>
                    </setProperty>
                    <to id="crearToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        
        
        
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
