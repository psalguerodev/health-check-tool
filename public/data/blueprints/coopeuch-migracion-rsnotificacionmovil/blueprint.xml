<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal" persistent-id="wsnotificacionmovil"
        placeholder-prefix="[{" placeholder-suffix="}]" update-strategy="reload" />
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean class="cl.coopeuch.integracion.tarea.servicio_notificacion_movil.util.RouteFacade" id="beanRouteFacade"/>
    <camelcxf:cxfEndpoint address="/WSNotificacionMovil"
        id="endpointWSNotificacionMovil"
        serviceClass="cl.coopeuch.integracion.tarea.wsdl.WSNotificacionMovilSOAPPortType" wsdlURL="etc/wsdl/WSNotificacionMovil.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:cxfEndpoint
            address="[{servicio.sms.envio.endpoint}]"
            id="endpointServicioSms" loggingFeatureEnabled="true"
            serviceClass="cl.coopeuch.integracion.tarea.wsdl.sms.ServicioSMS"
            wsdlURL="etc/wsdl/ServicioSMS.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true" />
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSNotificacionMovil"
        id="endpointRSNotificacionMovil" serviceClass="cl.coopeuch.integracion.tarea.wsdl.WSNotificacionMovilSOAPPortType"/>
    <camelContext id="servicio-notificacion-movil" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSNotificacionMovil"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSNotificacionMovil"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <choice id="inicioChoiceOperacion">
                    <when id="inicioWhenOperacionNotificar">
                        <simple>${header.operationName} == 'notificar'</simple>
                        <to id="toNotificar" uri="direct:notificar"/>
                    </when>
                    <otherwise id="inicioOtherwise">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="notificar">
            <from id="notificarFrom" uri="direct:notificar"/>
            <doTry id="notificarTry">
                <marshal id="notificarMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.tarea.wsdl"/>
                </marshal>
                <convertBodyTo id="notificarConvertBodyToString" type="java.lang.String"/>
                <log message="log Notificar::: ${body}"/>
                <to id="notificar_to" uri="direct:callPersona"/>
                <bean id="notificarMsgBean" method="notificarMsgParam" ref="beanRouteFacade"/>
                <to id="notificarMsg_to" uri="xslt://etc/xsl/request/formatoNotificacion.xsl?saxon=true"/>
                <setProperty id="_setProperty0" propertyName="mensajeTemp">
                    <xpath resultType="String">//mensajeDispositivo</xpath>
                </setProperty>
                <choice>
                    <when>
                        <simple>${property.mensajeTemp} != ''</simple>
                        <choice id="notificar_choice1">
                            <when id="notificar_when1">
                                <simple>${property.correoElectronico} != ''</simple>
                                <to id="notificarCorreo_to" uri="direct:callEnvioEmailTransferencia"/>
                                <choice id="validaRespEnvioEmail_choice">
                                    <when id="validaRespEnvioEmail_when">
                                        <simple>${property.codigoEnvioEmail} != '0000'</simple>
                                        <setProperty id="_ErrorEnvioEmail" propertyName="errorEnvioEmail">
                                            <simple>${property.codigoEnvioEmail}</simple>
                                        </setProperty>
                                    </when>
                                </choice>
                            </when>
                        </choice>
                        <choice id="notificar_choice2">
                            <when id="notificar_when2">
                                <simple>${property.telefonoCelular} != ''</simple>
                                <to id="notificarSms_to" uri="direct:callSms"/>
                                <choice id="validaRespEnvioSms_choice">
                                    <when id="validaRespEnvioSms_when">
                                        <simple>${property.codigoEnvioSms} != '0000'</simple>
                                        <setProperty id="_ErrorEnvioSms" propertyName="errorEnvioSms">
                                            <simple>${property.codigoEnvioSms}</simple>
                                        </setProperty>
                                    </when>
                                </choice>
                            </when>
                        </choice>
                    </when>
                </choice>
                <bean id="notificarBeanResponse" method="notificarResponse" ref="beanRouteFacade"/>
                <unmarshal id="notificarUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.tarea.wsdl"/>
                </unmarshal>
                <doCatch id="notificarDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="notificar_CodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toNotificarExcepcionAMQ" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="notificarDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="notificar_CodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="notificarToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="callPersona">
            <from id="callPersonaFrom" uri="direct:callPersona"/>
            <doTry id="callPersonaTry">
                <setProperty id="_setProperty1" propertyName="traerDatosBasicos.userId">
                    <xpath resultType="String">//userId</xpath>
                </setProperty>
                <setProperty id="_setProperty2" propertyName="traerDatosBasicos.rutCliente">
                    <xpath resultType="String">//rut</xpath>
                </setProperty>
                <setProperty id="_setProperty3" propertyName="traerDatosBasicos.codigoCliente">
                    <simple>0</simple>
                </setProperty>
                <to id="callPersona_traerDatosBasicos_to" uri="xslt://etc/xsl/request/servicioPersona_traerDatosBasicos.xsl?saxon=true"/>
                <bean id="callPersona-UUID"
                      method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="Cola-AMQ-callPersona" uri="beanAMQ:{{wspersona.amq.in.temp}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false&amp;explicitQosEnabled=true&amp;replyToDeliveryPersistent=false"/>
                <convertBodyTo id="callPersona_traerDatosBasicosBodyTo" type="java.lang.String"/>
                <setProperty id="_setProperty4" propertyName="correoElectronico">
                    <xpath resultType="String">//correoElectronico</xpath>
                </setProperty>
                <setProperty id="_setProperty5" propertyName="telefonoCelular">
                    <xpath resultType="String">//telefono</xpath>
                </setProperty>
                <setProperty id="_setProperty6" propertyName="primerNombre">
                    <xpath resultType="String">//primerNombre</xpath>
                </setProperty>
                <setProperty id="_setProperty7" propertyName="apellidoPaterno">
                    <xpath resultType="String">//apellidoPaterno</xpath>
                </setProperty>
                <setProperty id="_setProperty8" propertyName="apellidoMaterno">
                    <xpath resultType="String">//apellidoMaterno</xpath>
                </setProperty>
                <setProperty id="_setProperty9" propertyName="personaErr">
                    <xpath resultType="String">//codigoError</xpath>
                </setProperty>
                <removeHeaders id="callPersona-removeHeaders" pattern="*" />
                <doCatch id="callPersonaDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="callPersona_CodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="callPersonaToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="callEnvioEmailTransferencia">
            <from id="callEnvioEmailTransferenciaFrom" uri="direct:callEnvioEmailTransferencia"/>
            <doTry id="callEnvioEmailTransferenciaTry">
                <bean id="callEnvioEmailTransferenciaBean"
                      method="setPropiedadesEnvioEmail" ref="beanRouteFacade"/>
                <to id="callEnvioEmailTransferencia_to" uri="xslt://etc/xsl/request/servicioEnvioEmailTransferencia_enviaEmailTransferencia.xsl?saxon=true"/>
                <to id="Cola-AMQ-callEnvioEmailTransferencia" uri="beanAMQ:{{wsenvioemailtransferencia.amq.in.temp}}?preserveMessageQos=true&amp;errorHandlerLoggingLevel=TRACE&amp;jmsMessageType=Text&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false&amp;explicitQosEnabled=true&amp;replyToDeliveryPersistent=false"/>
                <log message="log salida EnivoEmailTransf::: ${body}"/>
                <setBody id="setBodyEnvioEmailTransfSalida">
                    <xpath>//salida</xpath>
                </setBody>
                <setProperty id="_setProperty10" propertyName="codigoEnvioEmail">
                    <xpath resultType="String">//codigo</xpath>
                </setProperty>
                <removeHeaders id="callEnvioEmailTransferencia-removeHeaders" pattern="*" />
                <doCatch id="callEnvioEmailTransferenciaDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="callEnvioEmailTransferencia_CodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="toCallEnvioEmailTransferenciaExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="callSms">
            <from id="callSmsFrom" uri="direct:callSms"/>
            <doTry id="callSmsTry">
                <bean id="callEnvioSmsBeanInt"
                      method="servicioSmsEnvioRequest" ref="beanRouteFacade"/>
                <to id="callSms_to" uri="cxf:bean:endpointServicioSms" />
                <bean id="callEnvioSmsBeanOut"
                      method="servicioSmsEnvioResponse" ref="beanRouteFacade"/>
                <log message="log salida SMS::: ${body}"/>
                <doCatch id="callSmsDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="callSms_CodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="toCallSmsExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
