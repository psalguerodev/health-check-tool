<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                                 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cm:property-placeholder id="propertyGlobal" persistent-id="global"
        placeholder-prefix="{[" placeholder-suffix="]}" update-strategy="reload"/>
    <cm:property-placeholder id="propertyLocal"
        persistent-id="wsmotorriesgo" placeholder-prefix="[{"
        placeholder-suffix="}]" update-strategy="reload"/>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="beanAMQ">
        <property name="brokerURL" value="{[amq.broker.url]}"/>
        <property name="userName" value="{[amq.username]}"/>
        <property name="password" value="{[amq.password]}"/>
        <property name="usePooledConnection" value="true"/>
    </bean>
    <bean
        class="cl.coopeuch.integracion.utilidad.motorriesgo.util.RouteFacade" id="beanRouteFacade"/>
    <bean
        class="cl.coopeuch.integracion.utilidad.motorriesgo.util.ReemplazarCaracteres" id="beanReemplazarCaracteres"/>
    <!-- Conexion Base de datos -->
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceSybase">
        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
        <property name="url" value="[{jdbc.sybase.url.cache}];charset=iso_1"/>
        <property name="username" value="[{jdbc.sybase.username.cache}]"/>
        <property name="password" value="[{jdbc.sybase.password.cache}]"/>
        <property name="timeBetweenEvictionRunsMillis" value="[{jdbc.sybase.timeBetweenEvictionRunsMillis.cache}]"/>
        <property name="numTestsPerEvictionRun" value="[{jdbc.sybase.numTestsPerEvictionRun.cache}]"/>
        <property name="minEvictableIdleTimeMillis" value="[{jdbc.sybase.minEvictableIdleTimeMillis.cache}]"/>
        <property name="maxActive" value="[{jdbc.sybase.maxActive.cache}]"/>
    </bean>
    <camelcxf:cxfEndpoint address="/WSMotorRiesgo"
        id="endpointWSMotorRiesgo"
        serviceClass="cl.coopeuch.integracion.utilidad.wsdl.WSMotorRiesgoSOAPPortType" wsdlURL="etc/wsdl/WSMotorRiesgo.wsdl">
        <camelcxf:properties>
            <entry key="schema-validation-enabled" value="true"/>
        </camelcxf:properties>
    </camelcxf:cxfEndpoint>
    <camelcxf:rsServer address="/RSMotorRiesgo"
        id="endpointRSMotorRiesgo" serviceClass="cl.coopeuch.integracion.utilidad.wsdl.WSMotorRiesgoSOAPPortType">
        <camelcxf:providers>
            <bean
                class="org.apache.cxf.jaxrs.provider.json.JSONProvider" id="jsonProvider">
                <property name="ignoreNamespaces" value="true"/>
                <property name="serializeAsArray" value="true"/>
                <property name="arrayKeys">
                    <list>
                        <value>Documento</value>
                        <value>Resp</value>
                        <value>Var</value>
                        <value>detalleError</value>
                    </list>
                </property>
                <property name="ignoreEmptyArrayValues" value="true"/>
            </bean>
        </camelcxf:providers>
    </camelcxf:rsServer>
    <http-conf:conduit name="*.http-conduit">
        <http-conf:client ConnectionTimeout="15000" ReceiveTimeout="15000"/>
    </http-conf:conduit>
    <camelContext id="motorriesgo" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="inicio-soap">
            <from id="inicioFromSoap" uri="cxf:bean:endpointWSMotorRiesgo"/>
            <to id="soapToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="inicio-rest">
            <from id="restInicio" uri="cxfrs:bean:endpointRSMotorRiesgo"/>
            <to id="restToInicioWs" uri="direct:cxf-inicio"/>
        </route>
        <route id="cxf-inicio">
            <from id="inicioFromServicio" uri="direct:cxf-inicio"/>
            <doTry id="inicioTry">
                <setProperty id="inicioSetRequest" propertyName="requestEntrada">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="inicioSetTipoRequest" propertyName="tipoRequest">
                    <simple>$simple{body.get(0).class.getSimpleName()}</simple>
                </setProperty>
                <setBody id="inicioSetBody">
                    <simple>$simple{body.get(0)}</simple>
                </setBody>
                <bean id="validarDatosOperacionBean"
                    method="validarDatosOperacion" ref="beanRouteFacade"/>
                <choice id="validaErrorChoice">
                    <when id="validaErrorWhen">
                        <simple>${exchangeProperty.ERROR} == ''</simple>
                        <choice id="inicioChoiceOperacion">
                            <when id="validaRutWhen">
                                <simple>${exchangeProperty.valida_rut} == 'Correcto' &amp;&amp; ${exchangeProperty.valida_rut_empleador} == 'Correcto'</simple>
                                <choice id="validaRutChoice">
                                    <when id="inicioWhenOperacionEvaluarTC">
                                    <simple>${header.operationName} == 'evaluarTC'</simple>
                                    <!--                                     <to id="toEvaluarTC" uri="direct:evaluarTCDummy"/> -->
                                    <setProperty
                                    id="tipoBussinesObject" propertyName="BussinesObject">
                                    <constant>TC</constant>
                                    </setProperty>
                                    <bean id="setVariablesMotorBean"
                                    method="setVariablesMotorTC" ref="beanRouteFacade"/>
                                    <to id="toEvaluarTC" uri="direct:evaluarTC"/>
                                    </when>
                                    <otherwise id="inicioOtherwise">
                                    <throwException
                                    exceptionType="java.lang.Exception"
                                    id="throwExceptionOperacionInvalida" message="La operacion solicitada es invalida"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise id="otherwiseError_400">
                                <setProperty id="inicioCodigoError" propertyName="codigoError">
                                    <constant>400</constant>
                                </setProperty>
                                <throwException
                                    exceptionType="java.lang.UnsupportedOperationException"
                                    id="throwExceptionOperacionInvalida_400" message="El RUT ingresado no es valido."/>
                                <stop id="_stop"/>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise id="otherwiseError_300">
                        <setProperty id="codigoErrorDatos" propertyName="codigoError">
                            <constant>300</constant>
                        </setProperty>
                        <throwException
                            exceptionType="java.lang.UnsupportedOperationException"
                            id="throwExceptionOperacionInvalida_300" message="Falta completar datos de entrada"/>
                    </otherwise>
                </choice>
                <doCatch id="inicioDoCatch-UnsupportedOperationException">
                    <exception>java.lang.UnsupportedOperationException</exception>
                    <to
                        id="toInicioExcepcion-UnsupportedOperationException" uri="direct:excepcion"/>
                </doCatch>
                <doCatch id="inicioDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="inicioCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="inicioToExcepcion" uri="direct:excepcion"/>
                </doCatch>
            </doTry>
        </route>
        <route id="evaluarTCDummy">
            <from id="evaluarTCDummyFrom" uri="direct:evaluarTCDummy"/>
            <bean id="evaluarTCDummyBean" method="retornarDummy" ref="beanRouteFacade"/>
        </route>
        <route id="evaluarTC">
            <from id="evaluarTCFrom" uri="direct:evaluarTC"/>
            <doTry id="evaluarTCTry">
                <marshal id="evaluarTCMarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.utilidad.wsdl"/>
                </marshal>
                <convertBodyTo id="evaluarTCConvertBodyToString" type="java.lang.String"/>
                <bean id="evaluarTCUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="evaluarTCToXSLTrama" uri="xslt://etc/xsl/request/IOC002401I_evaluar.xsl"/>
                <log id="evaluarTCTrama" message="Trama generada = ${body}"/>
                <to id="evaluarTCToAmq" uri="beanAMQ:{{amq.queue.temp.int}}?preserveMessageQos=true&amp;jmsMessageType=Text&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false&amp;replyToDeliveryPersistent=false"/>
                <log id="evaluarTCTramaResponse" message="Trama recibida = ${body}"/>
                <transform id="evaluarTCTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="evaluarTCToXSLSOAP" uri="xslt://etc/xsl/response/IOC002401O_evaluar.xsl?saxon=true"/>
                <choice id="validaErrorAMQChoice">
                    <when id="validaErrorAMQWhen">
                        <simple>${body} contains 'ECNLERR'</simple>
                        <unmarshal id="validaErrorAMQUnmarshal">
                            <jaxb
                                contextPath="cl.coopeuch.integracion.utilidad.wsdl"
                                fragment="true" partClass="cl.coopeuch.integracion.utilidad.wsdl.EvaluarTCResponse"/>
                        </unmarshal>
                        <stop id="stopValidarErrorAMQ"/>
                    </when>
                    <otherwise id="otherwiseSinErrorAMQ">
                        <setHeader headerName="sbifUltDeudaComercial" id="propSbifUltDeudaComercial">
                            <xpath>//sbifUltDeudaComercial/text()</xpath>
                        </setHeader>
                        <setHeader
                            headerName="sbifUltDeudaCreditoConsumo" id="propSbifUltDeudaCreditoConsumo">
                            <xpath>//sbifUltDeudaCreditoConsumo/text()</xpath>
                        </setHeader>
                        <setHeader
                            headerName="sbifUltDeudaCreditoHipotecario" id="propSbifUltDeudaCreditoHipotecario">
                            <xpath>//sbifUltDeudaCreditoHipotecario/text()</xpath>
                        </setHeader>
                        <setHeader
                            headerName="sbifUltMontoLineaCredDisponible" id="propSbifUltMontoLineaCredDisponible">
                            <xpath>//sbifUltMontoLineaCredDisponible/text()</xpath>
                        </setHeader>
                        <setHeader
                            headerName="afiliadoDeudaPagoDirCoopeuch" id="propAfiliadoDeudaPagoDirCoopeuch">
                            <xpath>//afiliadoDeudaPagoDirCoopeuch/text()</xpath>
                        </setHeader>
                        <setHeader
                            headerName="afiliadoDeudaHipotecariaCoopeuch" id="propAfiliadoDeudaHipotecariaCoopeuch">
                            <xpath>//afiliadoDeudaHipotecariaCoopeuch/text()</xpath>
                        </setHeader>
                        <to id="toEvaluarCoopStrategyTC" uri="direct:evaluarCoopStrategyTC"/>
                    </otherwise>
                </choice>
                <doCatch id="evaluarTCDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="evaluarTCCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toEvaluarTCExcepcionAMQ" uri="direct:excepcion"/>
                    <stop id="stopEvaluarTCAMQ"/>
                </doCatch>
                <doCatch id="evaluarTCDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="evaluarTCCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="evaluarTCToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopEvaluarTC"/>
                </doCatch>
            </doTry>
        </route>
        <route id="evaluarCoopStrategyTC">
            <from id="fromEvaluarCoopStrategyTC" uri="direct:evaluarCoopStrategyTC"/>
            <doTry id="evaluarCoopStrategyTCTry">
                <to id="toTCXlst" uri="xslt://etc/xsl/request/TarjetaCredito.xsl?saxon=true"/>
                <setProperty id="guardarRequestEvaluarCoopStrategyTC" propertyName="bodyRequestEvaluarCoopStrategyTC">
                    <simple>${body}</simple>
                </setProperty>
                <log id="logEvaluarCoopStrategyTCRequest"
                    loggingLevel="INFO" message="Mensaje Entrada CoopStrategy TC: ${body}"/>
                <to id="toCoopStrategyTC" uri="cxf:{{CoopStrategy.TarjetaCredito.url}}?dataFormat=MESSAGE"/>
                <convertBodyTo charset="ISO-8859-1" id="TCBodyTo" type="java.lang.String"/>
                <log id="logEvaluarCoopStrategyTCResponse"
                    loggingLevel="INFO" message="Mensaje Salida CoopStrategy TC: ${body}"/>
                <bean id="reemplazarCaracteresBean"
                    method="reemplazarCaracteresUnicode" ref="beanReemplazarCaracteres"/>
                <setProperty id="guardarResponseEvaluarCoopStrategyTC" propertyName="bodyResponseEvaluarCoopStrategyTC">
                    <simple>${body}</simple>
                </setProperty>
                <setBody id="setBodyEvaluarCoopStrategyTCResponse">
                    <xpath>//*[local-name()='tarjetaCreditoResponse']</xpath>
                </setBody>
                <unmarshal id="responseCoopStrategyTCUnmarshal">
                    <jaxb contextPath="cl.coopeuch.integracion.utilidad.wsdl.datarjetaservice"/>
                </unmarshal>
                <setProperty id="_setProperty1" propertyName="CamelCXFDataFormat">
                    <constant>POJO</constant>
                </setProperty>
                <to id="toTrazabilidadEvaluacion" uri="direct:trazabilidadEvaluacion"/>
                <to id="toSalidaMotorTC" uri="direct:salidaMotorTC"/>
                <doCatch id="evaluarCoopStrategyTCDoCatch">
                    <exception>java.lang.NullPointerException</exception>
                    <exception>java.net.SocketTimeoutException</exception>
                    <exception>java.net.ConnectException</exception>
                    <exception>java.lang.Exception</exception>
                    <setProperty id="_setProperty2" propertyName="CamelCXFDataFormat">
                        <constant>POJO</constant>
                    </setProperty>
                    <setProperty id="evaluarCoopStrategyTCCodigoError" propertyName="codigoError">
                        <constant>503</constant>
                    </setProperty>
                    <setProperty
                        id="evaluarCoopStrategyTCDescripcionWSInterno" propertyName="descripcionWSInterno">
                        <constant>CoopStrategyWeb/DATarjetaService</constant>
                    </setProperty>
                    <to id="evaluarCoopStrategyTCToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopEvaluarCoopStrategyTC"/>
                </doCatch>
            </doTry>
        </route>
        <route id="idSalidaMotorTC">
            <from id="fromSalidaMotorTC" uri="direct:salidaMotorTC"/>
            <doTry id="salidaMotorTCTry">
                <bean id="salidaMotorTCBean" method="salidaMotorTC" ref="beanRouteFacade"/>
                <doCatch id="salidaMotorTCDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="salidaMotorTCCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="salidaMotorTCToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopSalidaMotorTC"/>
                </doCatch>
            </doTry>
        </route>
        <route id="idTablaSernacFromBD">
            <from id="fromTablaSernacFromBD" uri="direct:getTablaSernacFromBD"/>
            <doTry id="tablaSernacTry">
                <log id="logTablaSernacFromBD" message="direct:getTablaSernacFromBD = ${body}"/>
                <setProperty id="idValoresIdMotorSernac" propertyName="valoresIdMotor">
                    <simple>${body}</simple>
                </setProperty>
                <log id="logTablaSernacExchangeProperty.valoresIdMotor" message="exchangeProperty.valoresIdMotor = ${exchangeProperty.valoresIdMotor}"/>
                <to id="selEvalSernacSQL" uri="sql-stored:classpath:etc/sql/pa_selevalsernac.sql?dataSource=dataSourceSybase"/>
                <log id="logTablaSernacAfterBD" message="direct:getTablaSernacAfterBD = ${body}"/>
                <doCatch id="tablaSernacDoCatch">
                    <exception>java.sql.SQLException</exception>
                    <exception>java.lang.Exception</exception>
                    <setProperty id="tablaSernacCodigoError" propertyName="codigoError">
                        <constant>509</constant>
                    </setProperty>
                    <setProperty id="tablaSernacDescripcionPA" propertyName="descripcionPA">
                        <constant>pa_selevalsernac</constant>
                    </setProperty>
                    <to id="tablaSernacToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopTablaSernac"/>
                </doCatch>
            </doTry>
        </route>
        <route id="idEvaluacionPoliticasFromBD">
            <from id="fromEvaluacionPoliticasFromBD" uri="direct:getEvaluacionPoliticasFromBD"/>
            <doTry id="evaluacionPoliticasTry">
                <log id="logEvaluacionPoliticasFromBD" message="direct:getEvaluacionPoliticasFromBD = ${body}"/>
                <setProperty id="idValoresIdMotor" propertyName="valoresIdMotor">
                    <simple>${body}</simple>
                </setProperty>
                <log id="logExchangeProperty.valoresIdMotor" message="exchangeProperty.valoresIdMotor = ${exchangeProperty.valoresIdMotor}"/>
                <to id="selEvalPoliticasSQL" uri="sql-stored:classpath:etc/sql/pa_selevalpoliticas.sql?dataSource=dataSourceSybase"/>
                <log id="logEvaluacionPoliticasAfterBD" message="direct:getEvaluacionPoliticasAfterBD = ${body}"/>
                <doCatch id="evaluacionPoliticasDoCatch">
                    <exception>java.sql.SQLException</exception>
                    <exception>java.lang.Exception</exception>
                    <setProperty id="evaluacionPoliticasCodigoError" propertyName="codigoError">
                        <constant>509</constant>
                    </setProperty>
                    <setProperty id="evaluacionPoliticasDescripcionPA" propertyName="descripcionPA">
                        <constant>pa_selevalpoliticas</constant>
                    </setProperty>
                    <to id="evaluacionPoliticasToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopEvaluacionPoliticas"/>
                </doCatch>
            </doTry>
        </route>
        <route id="idObtenerTipoProducto">
            <from id="obtenerTipoProductoFrom" uri="direct:obtenerTipoProducto"/>
            <doTry id="obtenerTipoProductoTry">
                <convertBodyTo
                    id="obtenerTipoProductoConvertBodyToString" type="java.lang.String"/>
                <bean id="obtenerTipoProductoUUID"
                    method="crearJMSCorrelationId24" ref="beanRouteFacade"/>
                <to id="obtenerTipoProductoToXSLTrama" uri="xslt://etc/xsl/request/IOC040202I_evaluarCupoTC.xsl"/>
                <log id="obtenerTipoProductoTrama" message="Trama generada = ${body}"/>
                <to id="obtenerTipoProductoToAmq" uri="beanAMQ:{{amq.queue.temp.int}}?preserveMessageQos=true&amp;jmsMessageType=Text&amp;replyToType=Temporary&amp;synchronous=true&amp;exchangePattern=InOut&amp;deliveryPersistent=false&amp;replyToDeliveryPersistent=false"/>
                <log id="obtenerTipoProductoTramaResponse" message="Trama recibida = ${body}"/>
                <transform id="obtenerTipoProductoTransformBody">
                    <simple>&lt;trama&gt;${body}&lt;/trama&gt;</simple>
                </transform>
                <to id="obtenerTipoProductoToXSLSOAP" uri="xslt://etc/xsl/response/IOC040202O_evaluarCupoTC.xsl?saxon=true"/>
                <unmarshal id="obtenerTipoProductoUnmarshal">
                    <jaxb
                        contextPath="cl.coopeuch.integracion.utilidad.wsdl"
                        fragment="true" partClass="cl.coopeuch.integracion.utilidad.wsdl.ResultadoTC"/>
                </unmarshal>
                <doCatch id="obtenerTipoProductoDoCatchAMQ">
                    <exception>org.apache.camel.ExchangeTimedOutException</exception>
                    <setProperty id="obtenerTipoProductoCodigoErrorAMQ" propertyName="codigoError">
                        <constant>502</constant>
                    </setProperty>
                    <to id="toObtenerTipoProductoExcepcionAMQ" uri="direct:excepcion"/>
                    <stop id="stopObtenerTipoProductoAMQ"/>
                </doCatch>
                <doCatch id="obtenerTipoProductoDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="obtenerTipoProductoCodigoError" propertyName="codigoError">
                        <constant>500</constant>
                    </setProperty>
                    <to id="obtenerTipoProductoToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopObtenerTipoProducto"/>
                </doCatch>
            </doTry>
        </route>
        <route id="idTrazabilidadEvaluacion">
            <from id="trazabilidadEvaluacionFrom" uri="direct:trazabilidadEvaluacion"/>
            <doTry id="trazabilidadEvaluacionTry">
                <!--<bean id="trazabilidadEvaluacionBean"-->
                <!--method="trazabilidadEvaluacion" ref="beanRouteFacade"/>-->
                <!--<choice id="trazabilidadEvaluacionChoice">-->
                <!--<when id="trazabilidadEvaluacionWhen">-->
                <!--<simple>${exchangeProperty.trazaEvaluacion} == true</simple>-->
                <setProperty id="guardarBody" propertyName="exchangeBody">
                    <simple>${body}</simple>
                </setProperty>
                <setProperty id="tipoCanal" propertyName="canal">
                    <simple>${exchangeProperty.canalSolicitud}</simple>
                </setProperty>
                <setProperty id="tipoIdSol" propertyName="idSol">
                    <simple>${exchangeProperty.idSolicitud}</simple>
                </setProperty>
                <setProperty id="tipoIdSolicitud" propertyName="idSolicitud">
                    <simple>${exchangeProperty.idSolicitud}</simple>
                </setProperty>
                <setHeader headerName="step" id="setHeaderStepTCE2_2">
                    <constant>E2</constant>
                </setHeader>
                <log id="logNumeroSolicitud" loggingLevel="INFO" message="Numero Solicitud Trazabilidad Evaluacion: ${exchangeProperty.idSolicitud}"/>
                <setBody id="restaurarRequestEvaluarCoopStrategyTC_2">
                    <simple>${exchangeProperty.bodyRequestEvaluarCoopStrategyTC}</simple>
                </setBody>
                <to id="toGrabarColaAlmacenDeDatosTCE2_2" uri="direct:colaAlmacenDeDatos"/>
                <log id="logTCE2" loggingLevel="INFO" message="Trazabilidad Entrada E2 OK"/>
                <setHeader headerName="step" id="setHeaderstepTCS2_2">
                    <constant>S2</constant>
                </setHeader>
                <!--</when>-->
                <!--</choice>-->
                <setBody id="restaurarResponseEvaluarCoopStrategyTC_2">
                    <simple>${exchangeProperty.bodyResponseEvaluarCoopStrategyTC}</simple>
                </setBody>
                <to id="toGrabarColaAlmacenDeDatosTCS2_2" uri="direct:colaAlmacenDeDatos"/>
                <log id="logTCS2" loggingLevel="INFO" message="Trazabilidad Salida S2 OK"/>
                <setBody id="restaurarBody">
                    <simple>${exchangeProperty.exchangeBody}</simple>
                </setBody>
                <doCatch id="trazabilidadEvaluacionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="trazabilidadEvaluacionCodigoError" propertyName="codigoError">
                        <constant>511</constant>
                    </setProperty>
                    <to id="trazabilidadEvaluacionToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopTrazabilidadEvaluacion"/>
                </doCatch>
            </doTry>
        </route>
        <!-- ruta encargada de inyectar mensajes en cola de almacen de datos -->
        <route id="colaAlmacenDeDatos">
            <from id="fromGrabarColaAlmacenDeDatos" uri="direct:colaAlmacenDeDatos"/>
            <doTry id="_doTry1">
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${header.step} in 'E1,E2'</simple>
                        <to id="toeliminarNamespacesE1y2" uri="xslt://etc/xsl/transformations/eliminarNamespaces.xsl?saxon=true"/>
                        <to id="toXml2Xml_AlmacenE1" uri="xslt://etc/xsl/AlmacenDatos/Xml2Xml_AlmacenE.xsl?saxon=true"/>
                    </when>
                    <when id="_when2">
                        <simple>${header.step} in 'S1,S2'</simple>
                        <to id="toeliminarTagS1y2" uri="xslt://etc/xsl/transformations/eliminarTagXsi.xsl?saxon=true"/>
                        <to id="toeliminarNamespacesS1y2" uri="xslt://etc/xsl/transformations/eliminarNamespaces.xsl?saxon=true"/>
                        <to id="toXml2Xml_AlmacenS1" uri="xslt://etc/xsl/AlmacenDatos/Xml2Xml_AlmacenS.xsl?saxon=true"/>
                    </when>
                </choice>
                <to id="colaAlmacenDeDatosTO" uri="beanAMQ:{{amq.queue.AlmacenDatos.in}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <doCatch id="errorAlmacenCatch">
                    <exception>java.lang.Exception</exception>
                    <setProperty id="colaAlmacenDeDatosCodigoError" propertyName="codigoError">
                        <constant>510</constant>
                    </setProperty>
                    <setProperty
                        id="colaAlmacenDeDatosDescripcionAlmacen" propertyName="descripcionAlmacen">
                        <constant>AlmacenDeDatos</constant>
                    </setProperty>
                    <to id="colaAlmacenDeDatosToExcepcion" uri="direct:excepcion"/>
                    <stop id="stopColaAlmacenDeDatos"/>
                </doCatch>
            </doTry>
        </route>
        <route id="excepcion">
            <from id="excepcionfrom" uri="direct:excepcion"/>
            <doTry id="excepcionTry">
                <bean id="beanExceptionAmq" method="excepcionAmq" ref="beanRouteFacade"/>
                <marshal id="excepcionMarshalJson">
                    <json library="Jackson"/>
                </marshal>
                <convertBodyTo id="excepcionConvertTo" type="java.lang.String"/>
                <to id="excepcionToAmqFault" uri="beanAMQ:{{amq.queue.fault}}?errorHandlerLoggingLevel=TRACE&amp;exchangePattern=InOnly"/>
                <bean id="excepcionBeanExcepcion"
                    method="excepcionCrear" ref="beanRouteFacade"/>
                <doCatch id="excepcionDoCatch">
                    <exception>java.lang.Exception</exception>
                    <setBody id="exceptionFinalSetBodyError">
                        <simple>${exception}, Body -&gt; ${body}</simple>
                    </setBody>
                    <log id="excepcionLog" loggingLevel="ERROR" message="Ha ocurrido un error al escribir en la cola de errores o en la ejecucion del servicio: ${body}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>
